[{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"get-cases-data","dir":"Articles","previous_headings":"","what":"Get cases data","title":"Introduction to covmuller","text":"use covid19bharat.org get tally daily confirmed cases summarize monthly level.","code":"indian_state_cases <- GetIndiaConfirmedCasesMonthlyLong() india_cases <- indian_state_cases %>% filter(State == \"India\") head(india_cases) ##   MonthYear State   value      type ## 1  Mar 2020 India    1635 Confirmed ## 2  Apr 2020 India   33232 Confirmed ## 3  May 2020 India  155781 Confirmed ## 4  Jun 2020 India  395044 Confirmed ## 5  Jul 2020 India 1111273 Confirmed ## 6  Aug 2020 India 1990350 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-cases-for-india","dir":"Articles","previous_headings":"Get cases data","what":"Plot cases for India","title":"Introduction to covmuller","text":"easy visualize monthly case counts bar plot:","code":"p1 <- BarPlot(india_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - India\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"read-variant-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Read variant data from GISAID","title":"Introduction to covmuller","text":"utilize GISAID data look prevalence variants. access data, GISAID requires registration.","code":"current_date <- \"2022_06_11\" fpath.tar <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".qs\")  if (file.exists(fpath.qs)) {   gisaid_metadata <- qs::qread(file = fpath.qs) } else {   gisaid_metadata <- ReadGISAIDMetada(path = fpath.tar)   qs::qsave(gisaid_metadata, fpath.qs) }"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot total sequenced cases","title":"Introduction to covmuller","text":"can look absolute number cases sequenced country filtering information metadata made available GISAID (includes countries). , visualize total sequenced cases coming India:","code":"gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata) country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p2 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from India\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"overall-how-much-has-india-sequenced-over-months","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Overall, how much has India sequenced over months?","title":"Introduction to covmuller","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:  context, can combine three plots :","code":"india_cases_long <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"India\") india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = country_seq_stats,   confirmed_long = india_cases_long ) p3 <- BarPlot(india_sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from India\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-proportion-of-cases-that-been-deposited-from-each-state","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot proportion of cases that been deposited from each state","title":"Introduction to covmuller","text":"can break proportion sequenced cases state level:","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india, drop_country = TRUE) seq_stats <- rbind(country_seq_stats, state_seq_stats) state_cases_long <- GetIndiaConfirmedCasesMonthlyLong() india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = seq_stats,   confirmed_long = state_cases_long,   month.min = \"Feb 2020\",   month.max = \"June 2022\",   max.percent = 5 )  india_sequencing_proportion$State <- factor(   x = india_sequencing_proportion$State,   levels = as.character(GetIndianStates()) ) p4 <- PlotSequencedPropHeatmap(india_sequencing_proportion) p4"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-prevalence","dir":"Articles","previous_headings":"","what":"Plot Prevalence","title":"Introduction to covmuller","text":"Finally, look prevalence variants variants concern (VOCs):  animated version prevalence plot, check VariantAnimation.","code":"india_month_counts <- SummarizeVariantsMonthwise(gisaid_india) india_month_counts$State <- \"India\" india_month_prevalence <- CountsToPrevalence(india_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1+\", `BA.1` = \"BA.1+\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.10+\",   `BA.2.10.1` = \"BA.2.10+\",   `BA.2.12` = \"BA.2.12+\",   `BA.2.12.1` = \"BA.2.12+\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) india_month_prevalence <- CollapseLineageToVOCs(   variant_df = india_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(india_month_prevalence) p5 ## Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Set3 is 12 ## Returning the palette you asked for with that many colors"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_germany, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_germany) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - Germany","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_germany_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_germany_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_germany_shared_dateweek <- SummarizeVariantsDatewise(gisaid_germany_collapsed_sel, by_state = TRUE) head(gisaid_germany_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Baden-Wurttemberg                18932 Delta                69 ## 2 Baden-Wurttemberg                18933 Delta               220 ## 3 Baden-Wurttemberg                18933 Others                1 ## 4 Baden-Wurttemberg                18934 Delta               485 ## 5 Baden-Wurttemberg                18934 Others                1 ## 6 Baden-Wurttemberg                18935 Delta               623 fit_germany_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_germany_shared_dateweek) ## # weights:  228 (198 variable) ## initial  value 978702.848179  ## iter  10 value 342382.921618 ## iter  20 value 300296.953422 ## iter  30 value 293091.334492 ## iter  40 value 261592.188573 ## iter  50 value 237246.134549 ## iter  60 value 225648.176197 ## iter  70 value 213552.870580 ## iter  80 value 205415.599724 ## iter  90 value 199327.268782 ## iter 100 value 196372.116249 ## iter 110 value 192371.764248 ## iter 120 value 191028.243863 ## iter 130 value 190365.577229 ## iter 140 value 190026.016514 ## iter 150 value 189751.008763 ## iter 160 value 189570.075869 ## iter 170 value 189443.175247 ## iter 180 value 189392.649678 ## iter 190 value 189359.518051 ## iter 200 value 189329.674267 ## iter 210 value 189307.072811 ## iter 220 value 189282.456395 ## iter 230 value 189263.438165 ## iter 240 value 189256.374192 ## iter 250 value 189254.502763 ## iter 260 value 189253.848713 ## iter 270 value 189253.096401 ## iter 280 value 189251.514154 ## iter 290 value 189247.515009 ## iter 300 value 189246.033630 ## iter 310 value 189244.147735 ## iter 320 value 189241.757319 ## iter 330 value 189240.243698 ## iter 340 value 189238.050149 ## iter 350 value 189237.789757 ## iter 360 value 189237.720064 ## final  value 189237.712033  ## converged head(fit_germany_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State         prob ## 1              BA.1                18932 Baden-Wurttemberg 4.490671e-05 ## 2              BA.2                18932 Baden-Wurttemberg 4.308660e-09 ## 3            BA.2.1                18932 Baden-Wurttemberg 3.937751e-09 ## 4           BA.2.10                18932 Baden-Wurttemberg 1.744629e-09 ## 5         BA.2.10.1                18932 Baden-Wurttemberg 3.488909e-09 ## 6           BA.2.12                18932 Baden-Wurttemberg 2.789348e-11 ##             SE df     asymp.LCL    asymp.UCL DateCollected ## 1 3.493829e-06 NA  3.805893e-05 5.175449e-05    2021-11-01 ## 2 5.341560e-10 NA  3.261734e-09 5.355586e-09    2021-11-01 ## 3 2.035010e-09 NA -5.079521e-11 7.926297e-09    2021-11-01 ## 4 6.501811e-10 NA  4.702973e-10 3.018960e-09    2021-11-01 ## 5 2.099831e-09 NA -6.266840e-10 7.604503e-09    2021-11-01 ## 6 2.196608e-11 NA -1.515925e-11 7.094621e-11    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Germany","text":"","code":"muller_germanybystate_mfit <- PlotMullerDailyPrevalence(fit_germany_multi_predsbystate, ncol = 3) muller_germanybystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Australia","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_australia, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Australia\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Australia","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_australia_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_australia,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_australia_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_australia_shared_dateweek <- SummarizeVariantsDatewise(gisaid_australia_collapsed_sel, by_state = TRUE) head(gisaid_australia_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State                        DateCollectedNumeric lineage_collapsed     n ##   <chr>                                       <dbl> <chr>             <int> ## 1 Australian Capital Territory                18932 Delta                 8 ## 2 Australian Capital Territory                18933 Delta                16 ## 3 Australian Capital Territory                18934 Delta                 8 ## 4 Australian Capital Territory                18935 Delta                 8 ## 5 Australian Capital Territory                18936 Delta                15 ## 6 Australian Capital Territory                18938 Delta                16 fit_australia_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_australia_shared_dateweek) ## # weights:  110 (90 variable) ## initial  value 157938.916699  ## iter  10 value 58867.746369 ## iter  20 value 50367.440258 ## iter  30 value 45567.354078 ## iter  40 value 43243.069269 ## iter  50 value 41388.471830 ## iter  60 value 40561.797772 ## iter  70 value 39902.453957 ## iter  80 value 39804.411628 ## iter  90 value 39772.610779 ## iter 100 value 39759.842801 ## iter 110 value 39757.379466 ## iter 120 value 39756.621779 ## iter 130 value 39756.039342 ## iter 140 value 39754.743769 ## iter 150 value 39754.521908 ## iter 160 value 39754.489646 ## iter 170 value 39754.250568 ## final  value 39754.105556  ## converged head(fit_australia_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric                        State ## 1              BA.1                18932 Australian Capital Territory ## 2              BA.2                18932 Australian Capital Territory ## 3           BA.2.10                18932 Australian Capital Territory ## 4         BA.2.10.1                18932 Australian Capital Territory ## 5           BA.2.12                18932 Australian Capital Territory ## 6         BA.2.12.1                18932 Australian Capital Territory ##           prob           SE df     asymp.LCL    asymp.UCL DateCollected ## 1 1.694510e-04 2.904943e-05 NA  1.125151e-04 2.263868e-04    2021-11-01 ## 2 1.669883e-09 5.958496e-10 NA  5.020398e-10 2.837727e-09    2021-11-01 ## 3 8.180358e-09 3.841985e-09 NA  6.502057e-10 1.571051e-08    2021-11-01 ## 4 3.145914e-14 3.771614e-14 NA -4.246315e-14 1.053814e-13    2021-11-01 ## 5 7.019342e-11 9.483132e-11 NA -1.156725e-10 2.560594e-10    2021-11-01 ## 6 2.173635e-18 1.016764e-17 NA -1.775456e-17 2.210183e-17    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Australia","text":"","code":"muller_australiabystate_mfit <- PlotMullerDailyPrevalence(fit_australia_multi_predsbystate, ncol = 3) muller_australiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Canada","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_canada, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Canada\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Canada","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_canada_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_canada,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed %>% filter(MonthYearCollected >= \"Nov 2021\")  vocs_to_keep <- table(gisaid_canada_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_canada_shared_dateweek <- SummarizeVariantsDatewise(gisaid_canada_collapsed_sel, by_state = TRUE) head(gisaid_canada_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alberta                18932 Delta               134 ## 2 Alberta                18933 Delta                98 ## 3 Alberta                18934 Delta                94 ## 4 Alberta                18935 Delta                96 ## 5 Alberta                18936 Delta                66 ## 6 Alberta                18937 Delta                54 fit_canada_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_canada_shared_dateweek) ## # weights:  96 (77 variable) ## initial  value 287821.742109  ## iter  10 value 101246.153057 ## iter  20 value 92463.528766 ## iter  30 value 72525.245750 ## iter  40 value 68506.722218 ## iter  50 value 65636.452444 ## iter  60 value 64271.824793 ## iter  70 value 63813.722385 ## iter  80 value 63661.592184 ## iter  90 value 63635.226836 ## iter 100 value 63628.349767 ## iter 110 value 63623.274211 ## iter 120 value 63622.207971 ## iter 130 value 63621.906453 ## iter 140 value 63621.861878 ## final  value 63621.856397  ## converged head(fit_canada_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 Alberta 4.631034e-05 4.549631e-06 NA ## 2              BA.2                18932 Alberta 1.391901e-08 2.455667e-09 NA ## 3            BA.2.1                18932 Alberta 1.343669e-13 6.378689e-13 NA ## 4           BA.2.10                18932 Alberta 7.407856e-09 3.178683e-09 NA ## 5           BA.2.12                18932 Alberta 3.733439e-08 3.715712e-08 NA ## 6         BA.2.12.1                18932 Alberta 4.588570e-11 3.949240e-11 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1  3.739323e-05 5.522745e-05    2021-11-01 ## 2  9.105990e-09 1.873203e-08    2021-11-01 ## 3 -1.115833e-12 1.384567e-12    2021-11-01 ## 4  1.177752e-09 1.363796e-08    2021-11-01 ## 5 -3.549222e-08 1.101610e-07    2021-11-01 ## 6 -3.151798e-11 1.232894e-10    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Canada","text":"","code":"muller_canadabystate_mfit <- PlotMullerDailyPrevalence(fit_canada_multi_predsbystate, ncol = 3) muller_canadabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - India","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - India","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State == \"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Total sequences deposited\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - India","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\", `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed_sel <- gisaid_india_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") vocs_to_keep <- table(gisaid_india_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_india_collapsed_sel <- gisaid_india_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_india_shared_dateweek <- SummarizeVariantsDatewise(gisaid_india_collapsed_sel, by_state = TRUE) head(gisaid_india_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Andaman & Nicobar                18970 Delta                 7 ## 2 Andaman & Nicobar                18971 Delta                 2 ## 3 Andaman & Nicobar                18976 Delta                 1 ## 4 Andaman & Nicobar                18981 Delta                 1 ## 5 Andaman & Nicobar                18983 Delta                 1 ## 6 Andaman & Nicobar                18984 BA.1                  1 fit_india_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_india_shared_dateweek) ## # weights:  273 (228 variable) ## initial  value 150459.718635  ## iter  10 value 102058.345569 ## iter  20 value 94771.129636 ## iter  30 value 87834.861900 ## iter  40 value 83706.023303 ## iter  50 value 79312.279347 ## iter  60 value 77188.297901 ## iter  70 value 76275.557717 ## iter  80 value 75494.186988 ## iter  90 value 74971.708915 ## iter 100 value 74772.232943 ## iter 110 value 74665.065024 ## iter 120 value 74611.419922 ## iter 130 value 74585.222311 ## iter 140 value 74560.436529 ## iter 150 value 74546.511984 ## iter 160 value 74539.960124 ## iter 170 value 74535.590095 ## iter 180 value 74531.946491 ## iter 190 value 74530.774017 ## iter 200 value 74530.442166 ## final  value 74530.392333  ## converged head(fit_india_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State         prob ## 1              BA.1                18932 Andaman & Nicobar 5.894123e-04 ## 2              BA.2                18932 Andaman & Nicobar 7.027828e-06 ## 3           BA.2.10                18932 Andaman & Nicobar 8.750603e-06 ## 4         BA.2.10.1                18932 Andaman & Nicobar 1.881651e-08 ## 5           BA.2.12                18932 Andaman & Nicobar 5.699928e-09 ## 6             Delta                18932 Andaman & Nicobar 9.985311e-01 ##             SE df     asymp.LCL    asymp.UCL DateCollected ## 1 3.180214e-04 NA -3.389817e-05 1.212723e-03    2021-11-01 ## 2 3.974954e-06 NA -7.629395e-07 1.481859e-05    2021-11-01 ## 3 4.512150e-06 NA -9.304971e-08 1.759426e-05    2021-11-01 ## 4 1.506559e-07 NA -2.764636e-07 3.140966e-07    2021-11-01 ## 5 5.651221e-08 NA -1.050620e-07 1.164618e-07    2021-11-01 ## 6 1.052586e-03 NA  9.964681e-01 1.000594e+00    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - India","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_southafrica, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_southafrica) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - South Africa","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_southafrica_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_southafrica_shared_dateweek <- SummarizeVariantsDatewise(gisaid_southafrica_collapsed_sel, by_state = TRUE) head(gisaid_southafrica_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State        DateCollectedNumeric lineage_collapsed     n ##   <chr>                       <dbl> <chr>             <int> ## 1 Eastern Cape                18933 Delta                 2 ## 2 Eastern Cape                18934 Delta                 2 ## 3 Eastern Cape                18935 Delta                 1 ## 4 Eastern Cape                18938 Delta                 1 ## 5 Eastern Cape                18940 Delta                 1 ## 6 Eastern Cape                18945 Delta                 1 fit_southafrica_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_southafrica_shared_dateweek) ## # weights:  96 (77 variable) ## initial  value 33404.148926  ## iter  10 value 13562.873512 ## iter  20 value 12013.637044 ## iter  30 value 11303.332787 ## iter  40 value 10729.201876 ## iter  50 value 10482.947375 ## iter  60 value 10421.789286 ## iter  70 value 10395.421841 ## iter  80 value 10372.066637 ## iter  90 value 10337.494831 ## iter 100 value 10322.767707 ## iter 110 value 10322.356170 ## final  value 10320.323917  ## converged head(fit_southafrica_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric        State         prob           SE ## 1              BA.1                18932 Eastern Cape 1.180974e-01 3.678774e-02 ## 2              BA.2                18932 Eastern Cape 1.589526e-05 6.067268e-06 ## 3            BA.2.1                18932 Eastern Cape 1.098732e-09 1.337134e-09 ## 4              BA.3                18932 Eastern Cape 3.909019e-04 3.269715e-04 ## 5              BA.4                18932 Eastern Cape 1.967106e-15 5.531065e-15 ## 6              BA.5                18932 Eastern Cape 7.065239e-23 4.547632e-22 ##   df     asymp.LCL    asymp.UCL DateCollected ## 1 NA  4.599478e-02 1.902001e-01    2021-11-01 ## 2 NA  4.003637e-06 2.778689e-05    2021-11-01 ## 3 NA -1.522003e-09 3.719467e-09    2021-11-01 ## 4 NA -2.499505e-04 1.031754e-03    2021-11-01 ## 5 NA -8.873581e-15 1.280779e-14    2021-11-01 ## 6 NA -8.206671e-22 9.619719e-22    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - South Africa","text":"","code":"muller_southafricabystate_mfit <- PlotMullerDailyPrevalence(fit_southafrica_multi_predsbystate, ncol = 3) muller_southafricabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - United Kingdom","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_uk, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"United Kingdom\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - United Kingdom","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_uk_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_uk_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_uk_shared_dateweek <- SummarizeVariantsDatewise(gisaid_uk_collapsed_sel, by_state = TRUE) head(gisaid_uk_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 England                18932 Delta              5535 ## 2 England                18932 Others                2 ## 3 England                18933 BA.1                  1 ## 4 England                18933 Delta              4313 ## 5 England                18933 Others                1 ## 6 England                18934 BA.1                  1 fit_uk_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_uk_shared_dateweek) ## # weights:  77 (60 variable) ## initial  value 3597037.138715  ## iter  10 value 1399059.099932 ## iter  20 value 1262993.916835 ## iter  30 value 1210639.583434 ## iter  40 value 799431.615509 ## iter  50 value 745184.120829 ## iter  60 value 696091.186140 ## iter  70 value 653037.149263 ## iter  80 value 630248.551317 ## iter  90 value 628192.266610 ## iter 100 value 627753.464454 ## iter 110 value 627496.759281 ## iter 120 value 627421.192579 ## iter 130 value 627401.818315 ## iter 140 value 627369.733835 ## iter 150 value 627311.457084 ## iter 160 value 627254.748340 ## iter 170 value 627209.365468 ## iter 180 value 627113.962233 ## final  value 627103.917290  ## converged head(fit_uk_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 England 1.640445e-05 4.968222e-07 NA ## 2              BA.2                18932 England 1.923849e-11 1.459396e-12 NA ## 3            BA.2.1                18932 England 6.410050e-12 1.056780e-12 NA ## 4           BA.2.10                18932 England 5.178991e-11 6.906397e-12 NA ## 5         BA.2.10.1                18932 England 3.063813e-12 1.522700e-12 NA ## 6           BA.2.12                18932 England 4.333508e-13 2.475089e-13 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1  1.543070e-05 1.737821e-05    2021-11-01 ## 2  1.637813e-11 2.209886e-11    2021-11-01 ## 3  4.338799e-12 8.481301e-12    2021-11-01 ## 4  3.825362e-11 6.532620e-11    2021-11-01 ## 5  7.937560e-14 6.048251e-12    2021-11-01 ## 6 -5.175767e-14 9.184594e-13    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - United Kingdom","text":"","code":"muller_ukbystate_mfit <- PlotMullerDailyPrevalence(fit_uk_multi_predsbystate, ncol = 3) muller_ukbystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_USA.html","id":"load-preprocessed-data","dir":"Articles","previous_headings":"","what":"Load preprocessed data","title":"Multinomial modeling - USA","text":"load qs object created metadata tar GISAID faster loading. See Introduction vignette see object created.","code":"date <- \"2022_06_11\" gisaid_metadata <- qs::qread(file = paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", date, \".qs\")) # filter our sequences from USA gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>% arrange(State, MonthYearCollected) gisaid_usa$State <- CleanAmericanStates(gisaid_usa$State) gisaid_usa <- gisaid_usa %>% filter(State %in% datasets::state.name)"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_USA.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Load preprocessed data","what":"Plot total sequenced cases","title":"Multinomial modeling - USA","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_usa, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"USA\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_USA.html","id":"get-vocs","dir":"Articles","previous_headings":"Load preprocessed data","what":"Get VOCs","title":"Multinomial modeling - USA","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_usa_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_usa_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 20]  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_usa_shared_dateweek <- SummarizeVariantsDatewise(gisaid_usa_collapsed_sel, by_state = TRUE) head(gisaid_usa_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alabama                18932 Delta                15 ## 2 Alabama                18933 Delta                 9 ## 3 Alabama                18934 Delta                10 ## 4 Alabama                18935 Delta                 8 ## 5 Alabama                18935 Others                1 ## 6 Alabama                18936 Delta                 8 fit_usa_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_usa_shared_dateweek) ## # weights:  689 (624 variable) ## initial  value 4008767.045624  ## iter  10 value 821796.287323 ## iter  20 value 712667.629784 ## iter  30 value 701086.975784 ## iter  40 value 671311.670529 ## iter  50 value 639733.254411 ## iter  60 value 608255.876194 ## iter  70 value 601920.706722 ## iter  80 value 595257.639397 ## iter  90 value 589269.072618 ## iter 100 value 586132.400806 ## iter 110 value 584209.406929 ## iter 120 value 581928.301780 ## iter 130 value 578198.000374 ## iter 140 value 574662.704350 ## iter 150 value 571042.932166 ## iter 160 value 568580.760360 ## iter 170 value 566483.578968 ## iter 180 value 564939.905810 ## iter 190 value 564032.399864 ## iter 200 value 563601.459543 ## iter 210 value 563301.819649 ## iter 220 value 563106.236362 ## iter 230 value 562951.515469 ## iter 240 value 562717.203101 ## iter 250 value 562504.479592 ## iter 260 value 562183.811816 ## iter 270 value 561934.300856 ## iter 280 value 561674.980735 ## iter 290 value 561394.623603 ## iter 300 value 561127.807415 ## iter 310 value 560843.446963 ## iter 320 value 560642.437986 ## iter 330 value 560528.266465 ## iter 340 value 560417.902830 ## iter 350 value 560265.645629 ## iter 360 value 559974.257323 ## iter 370 value 559588.856589 ## iter 380 value 559128.223574 ## iter 390 value 558718.485881 ## iter 400 value 558504.694184 ## iter 410 value 558412.838649 ## iter 420 value 558312.127272 ## iter 430 value 558179.077702 ## iter 440 value 557827.703460 ## iter 450 value 557237.268108 ## iter 460 value 557140.565744 ## iter 470 value 557094.794484 ## iter 480 value 557070.565684 ## iter 490 value 557059.117186 ## iter 500 value 557049.611598 ## iter 510 value 557041.215086 ## iter 520 value 557035.397242 ## iter 530 value 557030.346151 ## final  value 557029.920756  ## converged head(fit_usa_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 Alabama 1.637393e-05 1.394781e-06 NA ## 2              BA.2                18932 Alabama 3.794782e-11 8.248265e-12 NA ## 3            BA.2.1                18932 Alabama 2.638526e-16 3.732871e-16 NA ## 4           BA.2.10                18932 Alabama 5.943555e-11 2.714141e-11 NA ## 5         BA.2.10.1                18932 Alabama 1.187516e-12 1.030154e-12 NA ## 6           BA.2.12                18932 Alabama 2.239878e-15 1.704396e-15 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1  1.364021e-05 1.910765e-05    2021-11-01 ## 2  2.178152e-11 5.411412e-11    2021-11-01 ## 3 -4.677766e-16 9.954818e-16    2021-11-01 ## 4  6.239355e-12 1.126317e-10    2021-11-01 ## 5 -8.315492e-13 3.206581e-12    2021-11-01 ## 6 -1.100678e-15 5.580433e-15    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_USA.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - USA","text":"","code":"muller_usabystate_mfit <- PlotMullerDailyPrevalence(fit_usa_multi_predsbystate, ncol = 5) muller_usabystate_mfit ## Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Set3 is 12 ## Returning the palette you asked for with that many colors"},{"path":"http://saket-choudhary.me/covmuller/articles/SouthAfrica_contrast_India.html","id":"get-data","dir":"Articles","previous_headings":"","what":"Get data","title":"Compare growth in India and South Africa","text":"","code":"current_date <- \"2022_06_11\" fpath.tar <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".qs\") gisaid_metadata <- qs::qread(file = fpath.qs) gisaid_metadata <- FormatGISAIDMetadata(gisaid_metadata) %>% filter(pangolin_lineage != \"Unassigned\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"omicron-others\"]] <- omicron   custom_voc_mapping <- list(   `BA\\\\.1` = \"BA.1+\",   `BA\\\\.1\\\\.*` = \"BA.1+\",   `BA\\\\.2\\\\.10` = \"BA.2.10+\",   `BA\\\\.2\\\\.10\\\\.*` = \"BA.2.10+\",   `BA\\\\.2\\\\.12` = \"BA.2.12+\",   `BA\\\\.2\\\\.12\\\\.*` = \"BA.2.12+\",   `BA\\\\.2` = \"BA.2\",   `BA\\\\.3` = \"BA.3\",   `BA\\\\.4` = \"BA.4\",   `BA\\\\.5` = \"BA.5\" )  month_prevalence <- CollapseLineageToVOCs(   variant_df = gisaid_metadata,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE ) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL   confirmed.tmp <- COVID19::covid19(country = \"South Africa\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long_southafrica <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_metadata_2022 <- gisaid_metadata %>%   filter(MonthYearCollected >= \"Oct 2021\") %>%   filter(pangolin_lineage != \"\") %>%   filter(Country %in% c(\"South Africa\", \"India\"))   gisaid_southafrica <- gisaid_metadata_2022 %>% filter(Country == \"South Africa\") gisaid_southafrica$State <- \"South Africa\" gisaid_southafrica$Country <- \"X\"   gisaid_india <- gisaid_metadata_2022 %>% filter(Country == \"India\") gisaid_india$State <- \"India\" gisaid_india$Country <- \"X\"  gisaid_sel <- rbind(gisaid_southafrica, gisaid_india) %>% arrange(State, MonthYearCollected)   gisaid_sel_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_sel,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )   gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_sel_dateweek <- SummarizeVariantsDatewise(gisaid_sel_collapsed, by_state = TRUE)   fit <- FitMultinomStatewiseDaily(gisaid_sel_dateweek) ## # weights:  50 (36 variable) ## initial  value 232558.791807  ## iter  10 value 74827.915915 ## iter  20 value 69486.928402 ## iter  30 value 59777.763520 ## iter  40 value 52259.166560 ## iter  50 value 51899.775465 ## iter  60 value 51796.682603 ## iter  70 value 51755.657665 ## iter  80 value 51746.935223 ## iter  90 value 51740.842698 ## iter 100 value 51732.497805 ## iter 110 value 51715.665281 ## iter 120 value 51712.926213 ## iter 130 value 51712.336575 ## final  value 51712.253419  ## converged head(fit) ##   lineage_collapsed DateCollectedNumeric State         prob           SE df ## 1             Alpha                18901 India 1.174728e-04 1.141103e-04 NA ## 2             BA.1+                18901 India 9.329786e-07 1.620700e-07 NA ## 3              BA.2                18901 India 3.263547e-11 6.848920e-12 NA ## 4              BA.3                18901 India 2.682504e-09 1.808480e-09 NA ## 5              BA.4                18901 India 1.311590e-31 5.992514e-31 NA ## 6              BA.5                18901 India 1.444053e-39 1.302807e-38 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1 -1.061793e-04 3.411249e-04    2021-10-01 ## 2  6.153272e-07 1.250630e-06    2021-10-01 ## 3  1.921184e-11 4.605911e-11    2021-10-01 ## 4 -8.620516e-10 6.227060e-09    2021-10-01 ## 5 -1.043352e-30 1.305670e-30    2021-10-01 ## 6 -2.409049e-38 2.697859e-38    2021-10-01 muller <- PlotMullerDailyPrevalence(fit) muller gisaid_southafrica <- gisaid_metadata_2022 %>% filter(Country == \"South Africa\")  gisaid_india <- gisaid_metadata_2022 %>% filter(Country == \"India\")  gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  collapsed_unique_variants <- union(unique(gisaid_india_collapsed$lineage_collapsed), unique(gisaid_southafrica_collapsed$lineage_collapsed))  colors_to_use <- c(\"#ebac23\",\"#b80058\",\"#008cf9\",\"#006e00\",\"#00bbad\",\"#d163e6\",\"#b24502\",\"#ff9287\",\"#5954d6\",\"#00c6f8\",\"#878500\",\"#00a76c\") names(colors_to_use) <- collapsed_unique_variants  gisaid_southafrica_weekwise <- SummarizeVariantsWeekwise(gisaid_southafrica_collapsed)   gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india_collapsed)  cases_southafrica <- confirmed_subset_dateweekwise_long_southafrica %>% filter(WeekYearCollected >= tsibble::yearweek(\"2021 W44\"))  cases_india <- confirmed_subset_dateweekwise_long_india %>% filter(WeekYearCollected >= tsibble::yearweek(\"2021 W44\")) preds_southafrica <- FitMultinomWeekly(gisaid_southafrica_weekwise, cases_southafrica) ## # weights:  36 (24 variable) ## initial  value 36785.933874  ## iter  10 value 13212.814891 ## iter  20 value 10503.480791 ## iter  30 value 10164.709355 ## iter  40 value 10108.789239 ## iter  50 value 10081.677632 ## iter  60 value 10078.747368 ## iter  70 value 10064.128476 ## iter  80 value 10061.759628 ## iter  90 value 10061.405961 ## final  value 10061.300515  ## converged preds_india <- FitMultinomWeekly(gisaid_india_weekwise, cases_india) ## # weights:  36 (24 variable) ## initial  value 185131.551213  ## iter  10 value 51212.847043 ## iter  20 value 45210.423247 ## iter  30 value 41861.849893 ## iter  40 value 41736.357552 ## iter  50 value 41700.071553 ## iter  60 value 41691.931796 ## iter  70 value 41688.700170 ## iter  80 value 41687.806899 ## iter  90 value 41687.387199 ## final  value 41684.659413  ## converged sa_anim <- PlotVariantPrevalenceAnimated(preds_southafrica, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\", colors = colors_to_use) gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_compare.gif\"), animation = sa_anim)   india_anim <- PlotVariantPrevalenceAnimated(preds_india, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\", colors = colors_to_use) gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_compare.gif\"), animation = india_anim)  india_mgif <- magick::image_read(india_anim) southafrica_mgif <- magick::image_read(sa_anim)    final_gif <- image_append(c(india_mgif[1], southafrica_mgif[1])) for (i in 2:length(india_mgif)) {   combined <- image_append(c(india_mgif[i], southafrica_mgif[i]))   final_gif <- c(final_gif, combined) }  gganimate::anim_save(filename = here::here(\"docs/articles/SA_IN_animated.gif\"), animation = final_gif)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-monthly-cases-for-aizawl","dir":"Articles","previous_headings":"","what":"Get monthly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Aizawl\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State   District value ##   <yearmon> <chr>   <chr>    <dbl> ## 1 Apr 2020  Mizoram Aizawl       1 ## 2 May 2020  Mizoram Aizawl       0 ## 3 Jun 2020  Mizoram Aizawl      46 ## 4 Jul 2020  Mizoram Aizawl     190 ## 5 Aug 2020  Mizoram Aizawl     362 ## 6 Sep 2020  Mizoram Aizawl     770"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"plot-monthly-cases-for-aizawl","dir":"Articles","previous_headings":"Get monthly cases for Aizawl","what":"Plot monthly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Aizawl (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-weekly-cases-for-aizawl","dir":"Articles","previous_headings":"","what":"Get weekly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Aizawl\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Aizawl (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"overall-how-much-has-aizawl-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Aizawl","what":"Overall, how much has Aizawl sequenced over months?","title":"Animation of projected weekly cases - Aizawl (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- 'Confirmed'  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long =  chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Aizawl (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Aizawl (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Aizawl\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Aizawl\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  24 (15 variable) ## initial  value 7374.881975  ## iter  10 value 783.050219 ## iter  20 value 715.295055 ## iter  30 value 709.176445 ## iter  40 value 707.825594 ## iter  50 value 705.899928 ## iter  60 value 704.071145 ## iter  70 value 703.711274 ## iter  80 value 703.652189 ## iter  90 value 703.458387 ## iter 100 value 703.444590 ## iter 110 value 703.369971 ## iter 120 value 703.315363 ## iter 130 value 703.293181 ## iter 140 value 703.240242 ## iter 150 value 703.171403 ## iter 160 value 703.152697 ## iter 170 value 703.121573 ## iter 180 value 703.042093 ## iter 190 value 703.008743 ## iter 200 value 702.963220 ## iter 210 value 702.872569 ## iter 220 value 702.856110 ## iter 230 value 702.839803 ## iter 240 value 702.748302 ## iter 250 value 702.707888 ## iter 260 value 702.668191 ## iter 270 value 702.570106 ## iter 280 value 702.225248 ## iter 290 value 702.055776 ## iter 300 value 701.856035 ## iter 310 value 701.742590 ## final  value 701.742096  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Aizawl\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Aizawl\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  20 (12 variable) ## initial  value 1730.145756  ## iter  10 value 676.979733 ## iter  20 value 655.486213 ## iter  30 value 651.507990 ## iter  40 value 651.404955 ## final  value 651.394652  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Aizawl\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Aizawl\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  20 (12 variable) ## initial  value 1730.145756  ## iter  10 value 676.979733 ## iter  20 value 655.486213 ## iter  30 value 651.507990 ## iter  40 value 651.404955 ## final  value 651.394652  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) head(Bengaluru_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [3] ##   MonthYear State     District        value ##   <yearmon> <chr>     <chr>           <dbl> ## 1 Apr 2020  Karnataka Bengaluru Rural     6 ## 2 Apr 2020  Karnataka Bengaluru Urban   141 ## 3 May 2020  Karnataka Bengaluru Rural     9 ## 4 May 2020  Karnataka Bengaluru Urban   218 ## 5 Jun 2020  Karnataka Bengaluru Rural   114 ## 6 Jun 2020  Karnataka Bengaluru Urban  4196"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"plot-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"Get monthly cases for Bengaluru","what":"Plot monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"p1 <- BarPlot(Bengaluru_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Bengaluru (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-weekly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get weekly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Bengaluru\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Bengaluru_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"overall-how-much-has-bengaluru-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Bengaluru","what":"Overall, how much has Bengaluru sequenced over months?","title":"Animation of projected weekly cases - Bengaluru (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases %>% select(MonthYear, value) Bengaluru_monthly_cases_tmp$State <- \"India\" Bengaluru_monthly_cases_tmp$type <- \"Confirmed\"  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>% group_by(MonthYear, State, type) %>% summarise(value = sum(value))  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Bengaluru_seq_stats,   confirmed_long = Bengaluru_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Bengaluru (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Bengaluru\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 19037.287314  ## iter  10 value 6303.120552 ## iter  20 value 4170.777527 ## iter  30 value 4078.843941 ## iter  40 value 4045.447137 ## iter  50 value 4039.413261 ## iter  60 value 4035.816760 ## iter  70 value 4024.250963 ## iter  80 value 4008.095652 ## iter  90 value 4002.440207 ## iter 100 value 3998.241950 ## iter 110 value 3997.103188 ## iter 120 value 3996.790315 ## iter 130 value 3996.417775 ## iter 140 value 3996.366111 ## iter 150 value 3996.358535 ## iter 160 value 3996.310012 ## iter 170 value 3996.234891 ## iter 180 value 3996.105314 ## iter 190 value 3996.080644 ## iter 200 value 3996.055390 ## iter 210 value 3996.042294 ## iter 220 value 3996.015192 ## iter 230 value 3996.005343 ## iter 240 value 3995.995461 ## iter 250 value 3995.981532 ## iter 260 value 3995.936698 ## iter 270 value 3995.924849 ## iter 280 value 3995.894620 ## iter 290 value 3995.882470 ## iter 300 value 3995.864349 ## iter 310 value 3995.820183 ## iter 320 value 3995.794504 ## iter 330 value 3995.771967 ## iter 340 value 3995.765504 ## iter 350 value 3995.746774 ## iter 360 value 3995.741156 ## iter 370 value 3995.733199 ## iter 380 value 3995.705351 ## iter 390 value 3995.658044 ## iter 400 value 3995.631763 ## iter 410 value 3995.614206 ## iter 420 value 3995.609606 ## iter 430 value 3995.599841 ## iter 440 value 3995.587823 ## iter 450 value 3995.582781 ## iter 460 value 3995.573991 ## iter 470 value 3995.551699 ## iter 480 value 3995.515447 ## iter 490 value 3995.500335 ## iter 500 value 3995.490889 ## iter 510 value 3995.476847 ## final  value 3995.472813  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Oct 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 11167.578345  ## iter  10 value 4098.565574 ## iter  20 value 3827.660179 ## iter  30 value 3821.983857 ## iter  40 value 3807.357145 ## iter  50 value 3803.162146 ## iter  60 value 3801.547885 ## iter  70 value 3801.503738 ## final  value 3801.501660  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Oct 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 11167.578345  ## iter  10 value 4098.565574 ## iter  20 value 3827.660179 ## iter  30 value 3821.983857 ## iter  40 value 3807.357145 ## iter  50 value 3803.162146 ## iter  60 value 3801.547885 ## iter  70 value 3801.503738 ## final  value 3801.501660  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-monthly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Chennai\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State      District value ##   <yearmon> <chr>      <chr>    <dbl> ## 1 Apr 2020  Tamil Nadu Chennai    910 ## 2 May 2020  Tamil Nadu Chennai  13889 ## 3 Jun 2020  Tamil Nadu Chennai  43528 ## 4 Jul 2020  Tamil Nadu Chennai  41467 ## 5 Aug 2020  Tamil Nadu Chennai  35803 ## 6 Sep 2020  Tamil Nadu Chennai  31779"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"plot-monthly-cases-for-chennai","dir":"Articles","previous_headings":"Get monthly cases for Chennai","what":"Plot monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Chennai (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-weekly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Chennai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"overall-how-much-has-chennai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Chennai","what":"Overall, how much has Chennai sequenced over months?","title":"Animation of projected weekly cases - Chennai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- 'Confirmed'  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long =  chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Chennai (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Chennai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 8869.814614  ## iter  10 value 4058.646551 ## iter  20 value 3095.899745 ## iter  30 value 2872.342031 ## iter  40 value 2836.848045 ## iter  50 value 2830.041213 ## iter  60 value 2816.207669 ## iter  70 value 2810.400982 ## iter  80 value 2805.863476 ## iter  90 value 2802.615349 ## iter 100 value 2799.741251 ## iter 110 value 2793.338114 ## iter 120 value 2790.499330 ## iter 130 value 2790.308459 ## iter 140 value 2789.192524 ## iter 150 value 2788.956260 ## iter 160 value 2787.467005 ## iter 170 value 2785.793688 ## iter 180 value 2784.231720 ## final  value 2783.736562  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 6919.268204  ## iter  10 value 3294.489251 ## iter  20 value 2623.577527 ## iter  30 value 2570.242425 ## iter  40 value 2567.061814 ## iter  50 value 2566.207761 ## iter  60 value 2565.946586 ## iter  70 value 2565.874711 ## iter  80 value 2565.642687 ## iter  90 value 2565.506216 ## iter 100 value 2565.434980 ## iter 110 value 2565.432821 ## final  value 2565.431522  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Chennai\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 6919.268204  ## iter  10 value 3294.489251 ## iter  20 value 2623.577527 ## iter  30 value 2570.242425 ## iter  40 value 2567.061814 ## iter  50 value 2566.207761 ## iter  60 value 2565.946586 ## iter  70 value 2565.874711 ## iter  80 value 2565.642687 ## iter  90 value 2565.506216 ## iter 100 value 2565.434980 ## iter 110 value 2565.432821 ## final  value 2565.431522  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-monthly-cases-for-delhi","dir":"Articles","previous_headings":"","what":"Get monthly cases for Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Delhi\") head(NewDelhi_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State District  value ##   <yearmon> <chr> <chr>     <dbl> ## 1 Apr 2020  Delhi Delhi      3515 ## 2 May 2020  Delhi Delhi     16329 ## 3 Jun 2020  Delhi Delhi     67516 ## 4 Jul 2020  Delhi Delhi     48238 ## 5 Aug 2020  Delhi Delhi     39150 ## 6 Sep 2020  Delhi Delhi    104967"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"plot-monthly-cases-for-new-delhi","dir":"Articles","previous_headings":"Get monthly cases for Delhi","what":"Plot monthly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"p1 <- BarPlot(NewDelhi_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - New Delhi (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-weekly-cases-for-new-delhi","dir":"Articles","previous_headings":"","what":"Get weekly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"New Delhi\"), rename_country_as_state = TRUE)   p2 <- BarPlot(NewDelhi_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"overall-how-much-has-new-delhi-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for New Delhi","what":"Overall, how much has New Delhi sequenced over months?","title":"Animation of projected weekly cases - New Delhi (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases %>% select(MonthYear, value) NewDelhi_monthly_cases_cases_tmp$State <- \"India\" NewDelhi_monthly_cases_cases_tmp$type <- \"Confirmed\"  NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = NewDelhi_seq_stats,   confirmed_long = NewDelhi_monthly_cases_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New Delhi (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"New Delhi\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Delhi\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 3657.737672  ## iter  10 value 1472.485926 ## iter  20 value 967.313448 ## iter  30 value 931.304399 ## iter  40 value 914.444710 ## iter  50 value 911.767341 ## iter  60 value 908.146486 ## iter  70 value 904.023849 ## iter  80 value 903.764139 ## iter  90 value 903.023897 ## iter 100 value 902.959980 ## iter 110 value 902.946983 ## final  value 902.945686  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Delhi\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Oct 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 1349.194880  ## iter  10 value 629.206432 ## iter  20 value 572.823614 ## iter  30 value 566.558081 ## iter  40 value 566.032074 ## iter  50 value 564.969572 ## iter  60 value 564.822851 ## iter  70 value 564.803005 ## iter  80 value 564.796203 ## iter  90 value 564.782591 ## iter 100 value 564.769530 ## iter 110 value 564.757607 ## iter 120 value 564.750849 ## iter 130 value 564.747565 ## iter 140 value 564.742008 ## iter 150 value 564.733619 ## iter 160 value 564.717582 ## iter 170 value 564.707523 ## iter 180 value 564.702571 ## final  value 564.697250  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Delhi\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Oct 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 1349.194880  ## iter  10 value 629.206432 ## iter  20 value 572.823614 ## iter  30 value 566.558081 ## iter  40 value 566.032074 ## iter  50 value 564.969572 ## iter  60 value 564.822851 ## iter  70 value 564.803005 ## iter  80 value 564.796203 ## iter  90 value 564.782591 ## iter 100 value 564.769530 ## iter 110 value 564.757607 ## iter 120 value 564.750849 ## iter 130 value 564.747565 ## iter 140 value 564.742008 ## iter 150 value 564.733619 ## iter 160 value 564.717582 ## iter 170 value 564.707523 ## iter 180 value 564.702571 ## final  value 564.697250  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-variants-data-for-germany","dir":"Articles","previous_headings":"","what":"Get variants data for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_germany <- gisaid_metadata %>%   filter(Country == \"Germany\") %>%   filter(Host == \"Human\") # format metadata gisaid_germany <- FormatGISAIDMetadata(gisaid_germany) %>% filter(State!=\"\") %>% filter(pangolin_lineage!=\"Unassigned\")  gisaid_germany <- gisaid_germany %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL   custom_voc_mapping <- list(   `BA.1.17` = \"BA.1.17\",   `BA.1.14` = \"BA.1.14\",   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_germany <- gisaid_germany %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_germany <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-weekly-cases-for-germany","dir":"Articles","previous_headings":"","what":"Get weekly cases for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"confirmed.tmp <- COVID19::covid19(country = \"Germany\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"Germany\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Germany","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  76 (54 variable) ## initial  value 1846828.683147  ## iter  10 value 792316.065274 ## iter  20 value 568943.680849 ## iter  30 value 543146.200395 ## iter  40 value 452494.849680 ## iter  50 value 397764.509159 ## iter  60 value 383595.238522 ## iter  70 value 379513.806184 ## iter  80 value 372746.945316 ## iter  90 value 371101.352278 ## iter 100 value 370212.250077 ## iter 110 value 369895.424711 ## iter 120 value 369864.322919 ## iter 130 value 369773.603170 ## iter 140 value 369461.739276 ## iter 150 value 369194.208822 ## iter 160 value 369073.080162 ## iter 170 value 368844.923043 ## iter 180 value 368604.336456 ## iter 190 value 368434.318718 ## iter 200 value 368360.744658 ## iter 210 value 368259.834921 ## final  value 368135.320056  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_subset <- gisaid_germany %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany_subset)  voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  56 (39 variable) ## initial  value 1039416.480785  ## iter  10 value 421437.645365 ## iter  20 value 385060.731885 ## iter  30 value 315747.308130 ## iter  40 value 299896.143663 ## iter  50 value 294174.642613 ## iter  60 value 293405.926829 ## iter  70 value 293327.900038 ## iter  80 value 293298.686855 ## iter  90 value 293294.784578 ## iter 100 value 293286.552796 ## iter 110 value 293279.820484 ## iter 120 value 293263.178439 ## iter 130 value 293247.709720 ## final  value 293247.484329  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - India","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases - India","text":"","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - India","text":"Look cases October, 2021 :  Look cases last weeks:","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  40 (27 variable) ## initial  value 400410.337331  ## iter  10 value 206328.596390 ## iter  20 value 169761.653774 ## iter  30 value 118923.925613 ## iter  40 value 115876.421569 ## iter  50 value 114513.060374 ## iter  60 value 114251.184188 ## iter  70 value 114101.992123 ## iter  80 value 113842.931138 ## iter  90 value 113674.764308 ## iter 100 value 113582.735224 ## iter 110 value 113333.532970 ## iter 120 value 113329.336516 ## iter 130 value 113325.717013 ## iter 140 value 113304.552338 ## iter 150 value 113280.083071 ## iter 160 value 113217.512970 ## final  value 113185.288079  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 143758.004082  ## iter  10 value 79328.668469 ## iter  20 value 73056.478663 ## iter  30 value 72515.926444 ## iter  40 value 72501.853846 ## final  value 72501.851163  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Mar 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 11607.331454  ## iter  10 value 3264.995066 ## iter  20 value 3098.907080 ## iter  30 value 3088.019409 ## iter  40 value 3087.640465 ## iter  50 value 3087.152965 ## iter  60 value 3085.426154 ## iter  70 value 3085.417637 ## final  value 3085.415398  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Jaipur\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State     District value ##   <yearmon> <chr>     <chr>    <dbl> ## 1 Apr 2020  Rajasthan Jaipur     907 ## 2 May 2020  Rajasthan Jaipur    1084 ## 3 Jun 2020  Rajasthan Jaipur    1327 ## 4 Jul 2020  Rajasthan Jaipur    2100 ## 5 Aug 2020  Rajasthan Jaipur    5373 ## 6 Sep 2020  Rajasthan Jaipur   10697"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"plot-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"Get monthly cases for Jaipur","what":"Plot monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Jaipur (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-weekly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get weekly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Jaipur\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"overall-how-much-has-jaipur-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Jaipur","what":"Overall, how much has Jaipur sequenced over months?","title":"Animation of projected weekly cases - Jaipur (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- 'Confirmed'  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long =  chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Jaipur (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Jaipur\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 8043.279883  ## iter  10 value 4465.852461 ## iter  20 value 3389.099026 ## iter  30 value 3285.651897 ## iter  40 value 3280.755767 ## iter  50 value 3280.625694 ## iter  60 value 3280.376872 ## iter  70 value 3278.920977 ## iter  80 value 3272.454815 ## final  value 3271.074641  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 6446.800324  ## iter  10 value 3218.627889 ## iter  20 value 2925.625838 ## iter  30 value 2917.847548 ## iter  40 value 2917.254586 ## iter  50 value 2916.925229 ## iter  60 value 2916.267161 ## iter  70 value 2916.180079 ## final  value 2916.179605  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Jaipur\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 6446.800324  ## iter  10 value 3218.627889 ## iter  20 value 2925.625838 ## iter  30 value 2917.847548 ## iter  40 value 2917.254586 ## iter  50 value 2916.925229 ## iter  60 value 2916.267161 ## iter  70 value 2916.180079 ## final  value 2916.179605  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Mumbai\") head(Mumbai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  Maharashtra Mumbai    7061 ## 2 May 2020  Maharashtra Mumbai   32625 ## 3 Jun 2020  Maharashtra Mumbai   37972 ## 4 Jul 2020  Maharashtra Mumbai   36626 ## 5 Aug 2020  Maharashtra Mumbai   32340 ## 6 Sep 2020  Maharashtra Mumbai   59463"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"plot-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"Get monthly cases for Mumbai","what":"Plot monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"p1 <- BarPlot(Mumbai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Mumbai (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-weekly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Mumbai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Mumbai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"overall-how-much-has-mumbai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Mumbai","what":"Overall, how much has Mumbai sequenced over months?","title":"Animation of projected weekly cases - Mumbai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases %>% select(MonthYear, value) Mumbai_monthly_cases_tmp$State <- \"India\" Mumbai_monthly_cases_tmp$type <- 'Confirmed'  Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Mumbai_seq_stats,   confirmed_long =  Mumbai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Mumbai (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Mumbai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 7856.130144  ## iter  10 value 3185.174425 ## iter  20 value 1900.480904 ## iter  30 value 1874.637616 ## iter  40 value 1868.604057 ## iter  50 value 1868.029033 ## iter  60 value 1867.705998 ## iter  70 value 1867.378578 ## iter  80 value 1865.066732 ## iter  90 value 1859.980020 ## iter 100 value 1859.783252 ## iter 110 value 1859.287141 ## iter 120 value 1858.922062 ## iter 130 value 1858.477881 ## iter 140 value 1858.266920 ## iter 150 value 1858.123007 ## iter 160 value 1858.007228 ## iter 170 value 1855.684926 ## iter 180 value 1853.447991 ## iter 190 value 1852.855442 ## iter 200 value 1852.433862 ## iter 210 value 1852.334140 ## iter 220 value 1852.079437 ## iter 230 value 1851.956135 ## iter 240 value 1851.910768 ## iter 250 value 1851.768535 ## final  value 1850.748125  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 3921.008950  ## iter  10 value 1722.233405 ## iter  20 value 1604.156510 ## iter  30 value 1599.803237 ## iter  40 value 1599.284203 ## iter  50 value 1599.188112 ## iter  60 value 1598.626427 ## iter  70 value 1598.279378 ## iter  80 value 1597.699644 ## iter  90 value 1597.564998 ## iter 100 value 1597.425582 ## iter 110 value 1597.359669 ## iter 120 value 1597.333202 ## iter 130 value 1597.296347 ## iter 140 value 1597.261314 ## iter 150 value 1597.173325 ## final  value 1597.169282  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Mumbai\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 3921.008950  ## iter  10 value 1722.233405 ## iter  20 value 1604.156510 ## iter  30 value 1599.803237 ## iter  40 value 1599.284203 ## iter  50 value 1599.188112 ## iter  60 value 1598.626427 ## iter  70 value 1598.279378 ## iter  80 value 1597.699644 ## iter  90 value 1597.564998 ## iter 100 value 1597.425582 ## iter 110 value 1597.359669 ## iter 120 value 1597.333202 ## iter 130 value 1597.296347 ## iter 140 value 1597.261314 ## iter 150 value 1597.173325 ## final  value 1597.169282  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York City","text":"","code":"counties <- c(\"New York\", \"New York City\", \"New York County\", \"Queens County\", \"Bronx County\", \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Richmond County\")  # The Bronx is Bronx County (ANSI / FIPS 36005) # Brooklyn is Kings County (ANSI / FIPS 36047) # Manhattan is New York County (ANSI / FIPS 36061) # Queens is Queens County (ANSI / FIPS 36081) # Staten Island is Richmond County (ANSI / FIPS 36085) fips.list <- c(36005, 36047, 36061, 36081, 36085)  gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")   gisaid_NYC <- gisaid_NY %>% filter(District %in% counties)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_NYC <- gisaid_NYC %>% filter(pangolin_lineage != \"None\")  gisaid_NYC <- CollapseLineageToVOCs(   variant_df = gisaid_NYC,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York City","text":"","code":"all_county_cases <- refresh_covid19nytimes_counties()  confirmed <- all_county_cases %>%   filter(location == \"New York City,New York\") %>%   filter(data_type == \"cases_total\") %>%   arrange(date)  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York City","text":"Look cases October, 2021 :  Look cases Jan, 2022:","code":"voc_to_keep <- gisaid_NYC_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NYC_weekwise <- gisaid_NYC_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NYC_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  68 (48 variable) ## initial  value 270945.858519  ## iter  10 value 143762.558224 ## iter  20 value 104863.562254 ## iter  30 value 89013.059603 ## iter  40 value 74906.447813 ## iter  50 value 68086.088605 ## iter  60 value 67277.369710 ## iter  70 value 66930.706956 ## iter  80 value 66765.480316 ## iter  90 value 66647.021022 ## iter 100 value 66541.910680 ## iter 110 value 66530.423882 ## iter 120 value 66497.129012 ## iter 130 value 66441.291480 ## iter 140 value 66424.495660 ## iter 150 value 66416.443042 ## iter 160 value 66380.751502 ## iter 170 value 66336.729352 ## iter 180 value 66257.774515 ## iter 190 value 66150.016235 ## iter 200 value 66057.258972 ## iter 210 value 66056.907515 ## iter 220 value 66054.907198 ## iter 230 value 66039.411859 ## iter 240 value 66016.000968 ## iter 250 value 65981.294891 ## iter 260 value 65968.877733 ## iter 270 value 65950.944279 ## iter 280 value 65916.533204 ## iter 290 value 65890.240404 ## iter 300 value 65850.689995 ## iter 310 value 65847.472175 ## iter 320 value 65843.491495 ## iter 330 value 65827.548520 ## iter 340 value 65806.894369 ## iter 350 value 65802.923926 ## iter 360 value 65800.215563 ## iter 370 value 65791.400439 ## iter 380 value 65780.001757 ## final  value 65759.528834  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\", date_breaks = \"14 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_subset <- gisaid_NYC %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC_subset)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 127676.988573  ## iter  10 value 50310.042046 ## iter  20 value 43691.147271 ## iter  30 value 38091.467066 ## iter  40 value 37399.079450 ## iter  50 value 37281.482186 ## iter  60 value 37248.352281 ## iter  70 value 37239.512099 ## iter  80 value 37236.913089 ## iter  90 value 37223.825436 ## iter 100 value 37222.702335 ## iter 110 value 37222.429968 ## final  value 37222.404174  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear >= \"Jan 2022\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_subset <- gisaid_NYC %>% filter(MonthYearCollected >= \"Jan 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC_subset)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 89822.759024  ## iter  10 value 37806.695164 ## iter  20 value 32081.355834 ## iter  30 value 30548.796591 ## iter  40 value 30420.780415 ## iter  50 value 30419.186951 ## iter  60 value 30418.875401 ## iter  70 value 30418.732886 ## iter  80 value 30418.683109 ## iter  90 value 30418.403742 ## iter 100 value 30418.147368 ## iter 110 value 30418.002961 ## final  value 30417.934560  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York State","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_NY <- gisaid_NY %>% filter(pangolin_lineage != \"None\")  gisaid_NY <- CollapseLineageToVOCs(   variant_df = gisaid_NY,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York State","text":"","code":"all_state_cases <- refresh_covid19nytimes_states()  confirmed <- all_state_cases %>%   filter(location == \"New York\") %>%   filter(data_type == \"cases_total\") %>%   arrange(date)  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York State","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_NY_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NY_weekwise <- gisaid_NY_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NY_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  68 (48 variable) ## initial  value 595898.429802  ## iter  10 value 300954.914507 ## iter  20 value 232890.924310 ## iter  30 value 211925.113597 ## iter  40 value 170450.667545 ## iter  50 value 144031.991475 ## iter  60 value 137715.697270 ## iter  70 value 137206.273714 ## iter  80 value 137137.166836 ## iter  90 value 136990.765044 ## iter 100 value 136905.637400 ## iter 110 value 136902.377971 ## iter 120 value 136879.727544 ## iter 130 value 136849.370801 ## iter 140 value 136817.182515 ## iter 150 value 136750.277924 ## iter 160 value 136732.305156 ## iter 170 value 136606.036303 ## iter 180 value 136492.756157 ## iter 190 value 136471.596850 ## final  value 136467.211687  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY <- gisaid_NY %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 287349.635168  ## iter  10 value 117675.700390 ## iter  20 value 104893.016135 ## iter  30 value 89883.385190 ## iter  40 value 86023.819115 ## iter  50 value 85037.825052 ## iter  60 value 84909.112803 ## iter  70 value 84841.041019 ## iter  80 value 84832.833741 ## iter  90 value 84818.434808 ## iter 100 value 84803.843467 ## iter 110 value 84803.188596 ## final  value 84801.843471  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-monthly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get monthly cases for Pune","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Chennai\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State      District value ##   <yearmon> <chr>      <chr>    <dbl> ## 1 Apr 2020  Tamil Nadu Chennai    910 ## 2 May 2020  Tamil Nadu Chennai  13889 ## 3 Jun 2020  Tamil Nadu Chennai  43528 ## 4 Jul 2020  Tamil Nadu Chennai  41467 ## 5 Aug 2020  Tamil Nadu Chennai  35803 ## 6 Sep 2020  Tamil Nadu Chennai  31779"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"plot-monthly-cases-for-chennai","dir":"Articles","previous_headings":"Get monthly cases for Pune","what":"Plot monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Chennai (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-weekly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Chennai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"overall-how-much-has-chennai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Chennai","what":"Overall, how much has Chennai sequenced over months?","title":"Animation of projected weekly cases - Chennai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- 'Confirmed'  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long =  chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Chennai (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Chennai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 8869.814614  ## iter  10 value 4058.646551 ## iter  20 value 3095.899745 ## iter  30 value 2872.342031 ## iter  40 value 2836.848045 ## iter  50 value 2830.041213 ## iter  60 value 2816.207669 ## iter  70 value 2810.400982 ## iter  80 value 2805.863476 ## iter  90 value 2802.615349 ## iter 100 value 2799.741251 ## iter 110 value 2793.338114 ## iter 120 value 2790.499330 ## iter 130 value 2790.308459 ## iter 140 value 2789.192524 ## iter 150 value 2788.956260 ## iter 160 value 2787.467005 ## iter 170 value 2785.793688 ## iter 180 value 2784.231720 ## final  value 2783.736562  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 6919.268204  ## iter  10 value 3294.489251 ## iter  20 value 2623.577527 ## iter  30 value 2570.242425 ## iter  40 value 2567.061814 ## iter  50 value 2566.207761 ## iter  60 value 2565.946586 ## iter  70 value 2565.874711 ## iter  80 value 2565.642687 ## iter  90 value 2565.506216 ## iter 100 value 2565.434980 ## iter 110 value 2565.432821 ## final  value 2565.431522  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Chennai\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 6919.268204  ## iter  10 value 3294.489251 ## iter  20 value 2623.577527 ## iter  30 value 2570.242425 ## iter  40 value 2567.061814 ## iter  50 value 2566.207761 ## iter  60 value 2565.946586 ## iter  70 value 2565.874711 ## iter  80 value 2565.642687 ## iter  90 value 2565.506216 ## iter 100 value 2565.434980 ## iter 110 value 2565.432821 ## final  value 2565.431522  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-variants-data-for-south-africa","dir":"Articles","previous_headings":"","what":"Get variants data for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_sa <- gisaid_metadata %>%   filter(Country == \"South Africa\") %>%   filter(Host == \"Human\") # format metadata gisaid_sa <- FormatGISAIDMetadata(gisaid_sa) gisaid_sa$State <- CleanSouthAfricanStates(gisaid_sa$State)  gisaid_sa <- gisaid_sa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL   custom_voc_mapping <- list(   `BA.1.17` = \"BA.1.17\",   `BA.1.14` = \"BA.1.14\",   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_sa <- gisaid_sa %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_sa <- CollapseLineageToVOCs(   variant_df = gisaid_sa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-weekly-cases-for-south-africa","dir":"Articles","previous_headings":"","what":"Get weekly cases for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - South Africa","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 99023.483185  ## iter  10 value 40907.558338 ## iter  20 value 31031.264841 ## iter  30 value 23459.811647 ## iter  40 value 23042.129625 ## iter  50 value 22986.818403 ## iter  60 value 22953.495521 ## iter  70 value 22949.327635 ## iter  80 value 22926.718038 ## iter  90 value 22869.109455 ## iter 100 value 22767.710680 ## iter 110 value 22618.410087 ## iter 120 value 22489.852016 ## iter 130 value 22489.130288 ## iter 140 value 22487.663527 ## iter 150 value 22465.170462 ## iter 160 value 22454.159996 ## iter 170 value 22432.140218 ## iter 180 value 22398.082894 ## iter 190 value 22342.298970 ## iter 200 value 22339.237938 ## iter 210 value 22336.336747 ## iter 220 value 22330.361370 ## iter 230 value 22327.973598 ## iter 240 value 22323.389534 ## iter 250 value 22322.394629 ## final  value 22322.393792  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_subset <- gisaid_sa %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa_subset)  voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  32 (21 variable) ## initial  value 32903.003514  ## iter  10 value 13596.980721 ## iter  20 value 11658.668690 ## iter  30 value 11298.274249 ## iter  40 value 11244.725094 ## iter  50 value 11224.056467 ## iter  60 value 11206.720753 ## iter  70 value 11195.524610 ## final  value 11194.267069  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-variants-data-for-uk","dir":"Articles","previous_headings":"","what":"Get variants data for UK","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_uk <- gisaid_metadata %>%   filter(Country == \"United Kingdom\") %>%   filter(Host == \"Human\") # format metadata gisaid_uk <- FormatGISAIDMetadata(gisaid_uk)  gisaid_uk <- gisaid_uk %>% filter(State != \"\")  gisaid_uk <- gisaid_uk %>%   filter(pangolin_lineage != \"Unknown\") %>%   arrange(State, MonthYearCollected) %>%   filter(!is.na(MonthYearCollected))  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL  custom_voc_mapping <- list(   `B.1.177` = \"B.1.177\",   `BA.1.15` = \"BA.1.15+\",   `BA.1.15.1` = \"BA.1.15+\",   `BA.1.15.2` = \"BA.1.15+\",   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" )  gisaid_uk <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-daily-case-data","dir":"Articles","previous_headings":"","what":"Get daily case data","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"cases.struct <- list(   date = \"date\",   areaName = \"areaName\",   newCasesByPublishDate = \"newCasesByPublishDate\" ) all_nations <- c(   \"areaType=nation\" ) cases_data <- get_data(   filters = all_nations,   structure = cases.struct ) %>% rename(new_cases = newCasesByPublishDate)   confirmed <- cases_data %>%   arrange(date) %>%   group_by(date) %>%   summarise(daily_cases = sum(new_cases))  confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - United Kingdom","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_uk_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_uk_weekwise <- gisaid_uk_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  uk_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_uk_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  80 (57 variable) ## initial  value 8083600.086454  ## iter  10 value 3118512.290687 ## iter  20 value 2615449.376458 ## iter  30 value 2541011.684104 ## iter  40 value 2370455.108005 ## iter  50 value 1919107.483468 ## iter  60 value 1413227.552838 ## iter  70 value 1354951.387913 ## iter  80 value 1329472.625354 ## iter  90 value 1325402.093836 ## iter 100 value 1323167.502764 ## iter 110 value 1321510.726850 ## iter 120 value 1320542.579736 ## iter 130 value 1319781.996124 ## iter 140 value 1319011.172524 ## iter 150 value 1318036.241741 ## iter 160 value 1316170.341767 ## iter 170 value 1313726.050372 ## iter 180 value 1312227.112037 ## iter 190 value 1311478.454196 ## iter 200 value 1310711.498758 ## iter 210 value 1310522.335306 ## iter 220 value 1310132.356186 ## iter 230 value 1309476.171356 ## final  value 1309454.339645  ## converged the_anim <- PlotVariantPrevalenceAnimated(uk_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and gov.uk<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk <- gisaid_uk %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  56 (39 variable) ## initial  value 3958934.349990  ## iter  10 value 1494508.042142 ## iter  20 value 1361591.224586 ## iter  30 value 1151187.137726 ## iter  40 value 1100611.933329 ## iter  50 value 1074182.333386 ## iter  60 value 1068743.872746 ## iter  70 value 1068374.053271 ## iter  80 value 1067529.433797 ## iter  90 value 1067427.477740 ## iter 100 value 1067334.655890 ## iter 110 value 1067214.606379 ## iter 120 value 1067079.115990 ## iter 130 value 1067075.601353 ## final  value 1067075.424455  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and gov.uk<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-variants-data-for-usa","dir":"Articles","previous_headings":"","what":"Get variants data for USA","title":"Animation of projected weekly cases - USA","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\" ) gisaid_usa <- gisaid_usa %>% filter(pangolin_lineage != \"None\")  gisaid_usa <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-weekly-cases-for-usa","dir":"Articles","previous_headings":"","what":"Get weekly cases for USA","title":"Animation of projected weekly cases - USA","text":"","code":"all_state_cases <- refresh_covid19nytimes_states()  confirmed.tmp <- all_state_cases %>%   filter(data_type == \"cases_total\") %>%   arrange(date) confirmed <- confirmed.tmp %>%   group_by(date) %>%   summarise(value = sum(value))  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - USA","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  64 (45 variable) #> initial  value 9458242.811725  #> iter  10 value 3900728.282483 #> iter  20 value 2943788.752051 #> iter  30 value 2776351.662342 #> iter  40 value 2404282.099201 #> iter  50 value 1838479.061319 #> iter  60 value 1602178.101279 #> iter  70 value 1587464.972910 #> iter  80 value 1585024.715868 #> iter  90 value 1583288.822405 #> iter 100 value 1582505.622107 #> iter 110 value 1581780.671428 #> iter 120 value 1577213.754292 #> iter 130 value 1543946.680034 #> iter 140 value 1534866.750778 #> iter 150 value 1533024.085711 #> iter 160 value 1532142.064501 #> iter 170 value 1531864.774510 #> iter 180 value 1531711.143121 #> final  value 1531647.385063  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  44 (30 variable) #> initial  value 3772258.539984  #> iter  10 value 1197431.269449 #> iter  20 value 941782.738063 #> iter  30 value 847168.825672 #> iter  40 value 721147.834130 #> iter  50 value 714256.958394 #> iter  60 value 713096.383703 #> iter  70 value 712661.985327 #> iter  80 value 712430.271135 #> iter  90 value 712143.449912 #> final  value 712134.041531  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Kolkata\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  West Bengal Kolkata    184 ## 2 May 2020  West Bengal Kolkata   1941 ## 3 Jun 2020  West Bengal Kolkata   3859 ## 4 Jul 2020  West Bengal Kolkata  15655 ## 5 Aug 2020  West Bengal Kolkata  18518 ## 6 Sep 2020  West Bengal Kolkata  16255"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"plot-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"Get monthly cases for Kolkata","what":"Plot monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Kolkata (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-weekly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get weekly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Kolkata\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"overall-how-much-has-kolkata-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Kolkata","what":"Overall, how much has Kolkata sequenced over months?","title":"Animation of projected weekly cases - Kolkata (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- 'Confirmed'  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long =  chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Kolkata (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Kolkata\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  36 (24 variable) ## initial  value 9072.340280  ## iter  10 value 4611.724013 ## iter  20 value 3444.612387 ## iter  30 value 3394.389101 ## iter  40 value 3386.318904 ## iter  50 value 3384.335803 ## iter  60 value 3383.279510 ## iter  70 value 3382.599233 ## iter  80 value 3382.327511 ## iter  90 value 3381.389218 ## iter 100 value 3380.666069 ## iter 110 value 3380.628336 ## iter 120 value 3380.518383 ## iter 130 value 3380.453543 ## iter 140 value 3380.301550 ## final  value 3380.128980  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  20 (12 variable) ## initial  value 4557.928168  ## iter  10 value 3031.979028 ## iter  20 value 2996.772343 ## final  value 2995.669935  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Kolkata\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  20 (12 variable) ## initial  value 4557.928168  ## iter  10 value 3031.979028 ## iter  20 value 2996.772343 ## final  value 2995.669935  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saket Choudhary. Maintainer.","code":""},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choudhary S (2022). covmuller: R package perform modeling virus prevalence data GISAID. https://saketkc.github.io/covmuller, http://saket-choudhary./covmuller/.","code":"@Manual{,   title = {covmuller: R package to perform modeling on virus prevalence data from GISAID},   author = {Saket Choudhary},   year = {2022},   note = {https://saketkc.github.io/covmuller, http://saket-choudhary.me/covmuller/}, }"},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"covmuller","dir":"","previous_headings":"","what":"R package to perform modeling on virus prevalence data from GISAID","title":"R package to perform modeling on virus prevalence data from GISAID","text":"Covmuller R-package designed analysis sequencing metadata deposited GISAID. )","code":""},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"R package to perform modeling on virus prevalence data from GISAID","text":"Covmuller currently supports following features: Read preprocess metadata file downloaded GISAID: Vignette Plot variant prevalence: Vignette India USA Canada UK Australia SouthAfrica India New York state South Africa United Kingdom USA Compare prevalence countries: India South Africa","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from the USA â€” CleanAmericanStates","title":"Clean states from the USA â€” CleanAmericanStates","text":"Clean states USA","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from the USA â€” CleanAmericanStates","text":"","code":"CleanAmericanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from the USA â€” CleanAmericanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from the USA â€” CleanAmericanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from Canada â€” CleanCanadaStates","title":"Clean states from Canada â€” CleanCanadaStates","text":"Clean states Canada","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from Canada â€” CleanCanadaStates","text":"","code":"CleanCanadaStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from Canada â€” CleanCanadaStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from Canada â€” CleanCanadaStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Indian States â€” CleanIndianStates","title":"Clean Indian States â€” CleanIndianStates","text":"Clean Indian States","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Indian States â€” CleanIndianStates","text":"","code":"CleanIndianStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Indian States â€” CleanIndianStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Indian States â€” CleanIndianStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from South Africa â€” CleanSouthAfricanStates","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"Clean states South Africa","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"","code":"CleanSouthAfricanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"Collpase pangolin lineage list VOCs","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"","code":"CollapseLineageToVOCs(   variant_df,   vocs = GetVOCs(),   custom_voc_mapping = NULL,   summarize = TRUE )"},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"variant_df dataframe \"pangolin_lineage\" column vocs named list VOC (variant concernt) name key list lineages VOC. method replace lineages VOC name. custom_voc_mapping named vector custom mapping naming lineages. See example.","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"dataframe new column \"lineage_collpased\".","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"","code":"CombineSequencedCases(   cases_sequenced,   confirmed_long,   prune_oversequenced = TRUE,   month.min = NULL,   month.max = NULL,   max.percent = 100 )"},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"cases_sequenced long dataframe per state sequenced cases prune_oversequenced Whether round percentages 100 100. Default TRUE cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert monthwise counts to prevalence â€” CountsToPrevalence","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"Convert monthwise counts prevalence","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"","code":"CountsToPrevalence(variant_df)"},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"dataframe monthwise prevalence variants","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set them â€” CovmullerTheme","title":"Set them â€” CovmullerTheme","text":"Set ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set them â€” CovmullerTheme","text":"","code":"CovmullerTheme()"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"Filter GISAID India Metadata India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"","code":"FilterGISAIDIndia(gisaid_metadata_all)"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"gisaid_metadata_all dataframe GISAID metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"dataframe Indian entries Human date known","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"Format metadata.tar.x file downloaded GISAID missing columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"","code":"FormatGISAIDMetadata(   df,   collection_col = \"Collection date\",   submission_col = \"Submission date\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"df GISAID metadata dataframe collection_col Name column representing date collection (Collection date) submission_col Name column representing date submission (Submission date)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"data frame following extra columns: DateCollected, MonthYearCollected, YearCollected, MonthCollected, WeekCollected DateCollectedNumeric, MonthYearCollectedNumeric DateSubmitted, MonthYearSubmitted, YearSubmitted, MonthSubmitted, WeekSubmitted DateSubmittedNumeric, MonthYearSubmittedNumeric","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"Geocode given address get latitude, longitude Gooogle","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"","code":"GeocodeAddress(address, api.key = NULL, restrict.to = NULL)"},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"address String address geocode api.key API key Google Maps restrict.Country name search restricted , Currently supports 'India'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"dataframe geocoded address","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine filetype â€” GetFiletype","title":"Determine filetype â€” GetFiletype","text":"Determine filetype","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine filetype â€” GetFiletype","text":"","code":"GetFiletype(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine filetype â€” GetFiletype","text":"path Path file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine filetype â€” GetFiletype","text":"Extension file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"Get daily confirmed cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"","code":"GetIndiaConfirmedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"Get India monthwose cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"","code":"GetIndiaConfirmedCasesMonthlyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"","code":"GetIndiaConfirmedCasesWeeklyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"Get daily cases India given status type","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"","code":"GetIndiaDailyCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   status = \"Confirmed\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"url URL fetch data status One \"Confirmed\", \"Recovered\", \"Deceased\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily statewise data for India â€” GetIndiaDailyData","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"'Status' column one 'Confirmed', 'Deceased' 'Recovered'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"","code":"GetIndiaDailyData(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"Get daily deceased cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"","code":"GetIndiaDeceasedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data for India â€” GetIndiaHospitalization","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"Get hospitalization data India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"","code":"GetIndiaHospitalization(url = \"\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of Indian name states â€” GetIndianStates","title":"Get a list of Indian name states â€” GetIndianStates","text":"Get list Indian name states","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of Indian name states â€” GetIndianStates","text":"","code":"GetIndianStates()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of Indian name states â€” GetIndianStates","text":"list state abbreviation key full name value","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"Get MonthYear (zoo) dataframe string formatted data column","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"","code":"GetMonthYear(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"datecol vector string formatted dates datefmt Format date (default Y-m-d)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"vector dates converted MonthYear format (zoo::.yearmon)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants of concern â€” GetVOCs","title":"Get variants of concern â€” GetVOCs","text":"Get variants concern","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants of concern â€” GetVOCs","text":"","code":"GetVOCs()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants of concern â€” GetVOCs","text":"list variants concern pangolin lineage","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"Plot heatmap cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"","code":"PlotSequencedPropHeatmap(df)"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"heatmap total percentage cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"Read instrument metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"","code":"ReadAuspiceInstrument(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"dataframe instrument related metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"Read metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"","code":"ReadAuspiceMetadata(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"dataframe collated metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"Read metadata downloaded GISAID","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"","code":"ReadGISAIDMetada(path, showProgress = FALSE, ...)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"path Path tar.xz metadata.txt downloaded GISAID showProgress Whether print progress bars fread ... parameters data.table::fread","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"data frame parsed metadata extra columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"function removes: 1. Commas space 2. Hyphen space 3. Multiple dots single space 4. Multiple spacies single space 5. NA \"UNKNOWN\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"","code":"SanitizeColumn(col)"},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"col String vector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"string vector sanitized entries","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"","code":"SummarizeVariantsDatewise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"Summarize total number variants per month","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"","code":"SummarizeVariantsMonthwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"","code":"SummarizeVariantsWeekwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"Get total sequenced samples per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"","code":"TotalSequencesPerMonthCountrywise(variant_df, rename_country_as_state = TRUE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"dataframe sequencing statistics per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"Get total number sequenced samples per month Country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"","code":"TotalSequencesPerMonthStatewise(variant_df, drop_country = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"dataframe sequencing statistics per state per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/c.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long â€” c","title":"Get India weekwise cases long â€” c","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long â€” c","text":"","code":"c(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long â€” c","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long â€” c","text":"data frame containing monthly cases state long form","code":""}]
