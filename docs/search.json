[{"path":"http://saket-choudhary.me/epicovr/articles/Compare-SouthAfrica-India.html","id":"get-data","dir":"Articles","previous_headings":"","what":"Get data","title":"Compare growth in India and South Africa","text":"","code":"current_date <- \"2022_05_05\" fpath.tar <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".qs\") gisaid_metadata <- qs::qread(file = fpath.qs) gisaid_metadata <- FormatGISAIDMetadata(gisaid_metadata) %>% filter(pangolin_lineage != \"Unassigned\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"omicron-others\"]] <- omicron   custom_voc_mapping <- list(   `BA\\\\.1` = \"BA.1+\",   `BA\\\\.1\\\\.*` = \"BA.1+\",   `BA\\\\.2\\\\.10` = \"BA.2.10+\",   `BA\\\\.2\\\\.10\\\\.*` = \"BA.2.10+\",   `BA\\\\.2\\\\.12` = \"BA.2.12+\",   `BA\\\\.2\\\\.12\\\\.*` = \"BA.2.12+\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" )  month_prevalence <- CollapseLineageToVOCs(   variant_df = gisaid_metadata,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE ) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL   confirmed.tmp <- COVID19::covid19(country = \"South Africa\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long_southafrica <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_metadata_2022 <- gisaid_metadata %>%   filter(MonthYearCollected >= \"Oct 2021\") %>%   filter(pangolin_lineage != \"\") %>%   filter(Country %in% c(\"South Africa\", \"India\"))   gisaid_southafrica <- gisaid_metadata_2022 %>% filter(Country == \"South Africa\") gisaid_southafrica$State <- \"South Africa\" gisaid_southafrica$Country <- \"X\"   gisaid_india <- gisaid_metadata_2022 %>% filter(Country == \"India\") gisaid_india$State <- \"India\" gisaid_india$Country <- \"X\"  gisaid_sel <- rbind(gisaid_southafrica, gisaid_india) %>% arrange(State, MonthYearCollected)   gisaid_sel_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_sel,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )   gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_sel_dateweek <- SummarizeVariantsDatewise(gisaid_sel_collapsed, by_state = TRUE)   fit <- FitMultinomStatewiseDaily(gisaid_sel_dateweek) ## # weights:  60 (44 variable) ## initial  value 229565.615934  ## iter  10 value 122164.792143 ## iter  20 value 112045.870240 ## iter  30 value 98373.465019 ## iter  40 value 91984.429410 ## iter  50 value 89225.826046 ## iter  60 value 88700.349502 ## iter  70 value 88666.578400 ## iter  80 value 88631.948378 ## iter  90 value 88618.704190 ## iter 100 value 88618.259373 ## iter 110 value 88616.552023 ## iter 120 value 88611.148067 ## iter 130 value 88606.381639 ## iter 140 value 88602.976287 ## iter 150 value 88600.658239 ## iter 160 value 88598.645201 ## final  value 88596.930829  ## converged head(fit) ##   lineage_collapsed DateCollectedNumeric State         prob           SE df ## 1             Alpha                18901 India 1.325997e-04 1.282221e-04 NA ## 2             BA.1+                18901 India 1.487513e-07 3.295999e-08 NA ## 3          BA.2.10+                18901 India 1.143493e-12 3.262268e-13 NA ## 4          BA.2.12+                18901 India 8.240868e-12 2.661961e-12 NA ## 5              BA.3                18901 India 8.658994e-12 4.085936e-12 NA ## 6              BA.4                18901 India 3.918403e-51 2.047560e-50 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1 -1.187110e-04 3.839103e-04    2021-10-01 ## 2  8.415085e-08 2.133516e-07    2021-10-01 ## 3  5.041005e-13 1.782886e-12    2021-10-01 ## 4  3.023521e-12 1.345822e-11    2021-10-01 ## 5  6.507074e-13 1.666728e-11    2021-10-01 ## 6 -3.621304e-50 4.404984e-50    2021-10-01 muller <- PlotMullerDailyPrevalence(fit) muller gisaid_southafrica <- gisaid_metadata_2022 %>% filter(Country == \"South Africa\")  gisaid_india <- gisaid_metadata_2022 %>% filter(Country == \"India\")  gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  collapsed_unique_variants <- union(unique(gisaid_india_collapsed$lineage_collapsed), unique(gisaid_southafrica_collapsed$lineage_collapsed))  colors_to_use <- c(\"#ebac23\",\"#b80058\",\"#008cf9\",\"#006e00\",\"#00bbad\",\"#d163e6\",\"#b24502\",\"#ff9287\",\"#5954d6\",\"#00c6f8\",\"#878500\",\"#00a76c\") names(colors_to_use) <- collapsed_unique_variants  gisaid_southafrica_weekwise <- SummarizeVariantsWeekwise(gisaid_southafrica_collapsed)   gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india_collapsed)  cases_southafrica <- confirmed_subset_dateweekwise_long_southafrica %>% filter(WeekYearCollected >= tsibble::yearweek(\"2021 W44\"))  cases_india <- confirmed_subset_dateweekwise_long_india %>% filter(WeekYearCollected >= tsibble::yearweek(\"2021 W44\")) preds_southafrica <- FitMultinomWeekly(gisaid_southafrica_weekwise, cases_southafrica) ## # weights:  44 (30 variable) ## initial  value 33088.556869  ## iter  10 value 12400.481106 ## iter  20 value 10017.209251 ## iter  30 value 9410.559191 ## iter  40 value 9357.462199 ## iter  50 value 9344.626738 ## iter  60 value 9335.887262 ## iter  70 value 9335.726578 ## iter  80 value 9335.619671 ## iter  90 value 9334.400040 ## iter 100 value 9333.177080 ## iter 110 value 9332.201178 ## iter 120 value 9332.111625 ## final  value 9332.083865  ## converged preds_india <- FitMultinomWeekly(gisaid_india_weekwise, cases_india) ## # weights:  36 (24 variable) ## initial  value 172668.893410  ## iter  10 value 94747.797359 ## iter  20 value 83637.372142 ## iter  30 value 80198.936752 ## iter  40 value 79355.432896 ## iter  50 value 79305.381600 ## iter  60 value 79302.713931 ## iter  70 value 79298.593704 ## iter  80 value 79296.920278 ## iter  90 value 79296.142723 ## iter  90 value 79296.142553 ## iter  90 value 79296.142553 ## final  value 79296.142553  ## converged sa_anim <- PlotVariantPrevalenceAnimated(preds_southafrica, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\", colors = colors_to_use) gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_compare.gif\"), animation = sa_anim)   india_anim <- PlotVariantPrevalenceAnimated(preds_india, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\", colors = colors_to_use) gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_compare.gif\"), animation = india_anim)  india_mgif <- magick::image_read(india_anim) southafrica_mgif <- magick::image_read(sa_anim)    final_gif <- image_append(c(india_mgif[1], southafrica_mgif[1])) for (i in 2:length(india_mgif)) {   combined <- image_append(c(india_mgif[i], southafrica_mgif[i]))   final_gif <- c(final_gif, combined) }  gganimate::anim_save(filename = here::here(\"docs/articles/SA_IN_animated.gif\"), animation = final_gif)"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"get-cases-data","dir":"Articles","previous_headings":"","what":"Get cases data","title":"Introduction to epicovr","text":"use covid19bharat.org get tally daily confirmed cases summarize monthly level.","code":"indian_state_cases <- GetIndiaConfirmedCasesMonthlyLong() india_cases <- indian_state_cases %>% filter(State == \"India\") head(india_cases) ##   MonthYear State   value      type ## 1  Mar 2020 India    1635 Confirmed ## 2  Apr 2020 India   33232 Confirmed ## 3  May 2020 India  155781 Confirmed ## 4  Jun 2020 India  395044 Confirmed ## 5  Jul 2020 India 1111273 Confirmed ## 6  Aug 2020 India 1990350 Confirmed"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-cases-for-india","dir":"Articles","previous_headings":"Get cases data","what":"Plot cases for India","title":"Introduction to epicovr","text":"easy visualize monthly case counts bar plot:","code":"p1 <- BarPlot(india_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - India\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"read-variant-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Read variant data from GISAID","title":"Introduction to epicovr","text":"utilize GISAID data look prevalence variants. access data, GISAID requires registration.","code":"current_date <- \"2022_05_13\" fpath.tar <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".qs\")  if (file.exists(fpath.qs)) {   gisaid_metadata <- qs::qread(file = fpath.qs) } else {   gisaid_metadata <- ReadGISAIDMetada(path = fpath.tar)   qs::qsave(gisaid_metadata, fpath.qs) }"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot total sequenced cases","title":"Introduction to epicovr","text":"can look absolute number cases sequenced country filtering information metadata made available GISAID (includes countries). , visualize total sequenced cases coming India:","code":"gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata) country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p2 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from India\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"overall-how-much-has-india-sequenced-over-months","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Overall, how much has India sequenced over months?","title":"Introduction to epicovr","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:  context, can combine three plots :","code":"india_cases_long <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"India\") india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = country_seq_stats,   confirmed_long = india_cases_long ) p3 <- BarPlot(india_sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from India\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-proportion-of-cases-that-been-deposited-from-each-state","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot proportion of cases that been deposited from each state","title":"Introduction to epicovr","text":"can break proportion sequenced cases state level:","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india, drop_country = TRUE) seq_stats <- rbind(country_seq_stats, state_seq_stats) state_cases_long <- GetIndiaConfirmedCasesMonthlyLong() india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = seq_stats,   confirmed_long = state_cases_long,   month.min = \"Feb 2020\",   month.max = \"May 2022\",   max.percent = 5 )  india_sequencing_proportion$State <- factor(   x = india_sequencing_proportion$State,   levels = as.character(GetIndianStates()) ) p4 <- PlotSequencedPropHeatmap(india_sequencing_proportion) p4"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-prevalence","dir":"Articles","previous_headings":"","what":"Plot Prevalence","title":"Introduction to epicovr","text":"Finally, look prevalence variants variants concern (VOCs):  animated version prevalence plot, check VariantAnimation.","code":"india_month_counts <- SummarizeVariantsMonthwise(gisaid_india) india_month_counts$State <- \"India\" india_month_prevalence <- CountsToPrevalence(india_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1+\", `BA.1` = \"BA.1+\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.10+\",   `BA.2.10.1` = \"BA.2.10+\",   `BA.2.12` = \"BA.2.12+\",   `BA.2.12.1` = \"BA.2.12+\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) india_month_prevalence <- CollapseLineageToVOCs(   variant_df = india_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(india_month_prevalence) p5 ## Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Set3 is 12 ## Returning the palette you asked for with that many colors"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Australia.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Australia","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_australia, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Australia\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Australia.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Australia","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_australia_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_australia,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_australia_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_australia_shared_dateweek <- SummarizeVariantsDatewise(gisaid_australia_collapsed_sel, by_state = TRUE) head(gisaid_australia_shared_dateweek) ## # A tibble: 6 × 4 ##   State                        DateCollectedNumeric lineage_collapsed     n ##   <chr>                                       <dbl> <chr>             <int> ## 1 Australian Capital Territory                18932 Delta                 8 ## 2 Australian Capital Territory                18933 Delta                16 ## 3 Australian Capital Territory                18934 Delta                 8 ## 4 Australian Capital Territory                18935 Delta                 8 ## 5 Australian Capital Territory                18936 Delta                15 ## 6 Australian Capital Territory                18938 Delta                16 fit_australia_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_australia_shared_dateweek) ## # weights:  77 (60 variable) ## initial  value 110642.505165  ## iter  10 value 48703.952667 ## iter  20 value 39996.397461 ## iter  30 value 36467.224506 ## iter  40 value 34213.589748 ## iter  50 value 33016.034493 ## iter  60 value 32486.838303 ## iter  70 value 32353.504011 ## iter  80 value 32297.488863 ## iter  90 value 32292.145821 ## iter 100 value 32291.386157 ## iter 110 value 32291.306999 ## iter 120 value 32291.283021 ## final  value 32291.280358  ## converged head(fit_australia_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric                        State ## 1              BA.1                18932 Australian Capital Territory ## 2              BA.2                18932 Australian Capital Territory ## 3           BA.2.10                18932 Australian Capital Territory ## 4         BA.2.10.1                18932 Australian Capital Territory ## 5           BA.2.12                18932 Australian Capital Territory ## 6             Delta                18932 Australian Capital Territory ##           prob           SE df     asymp.LCL    asymp.UCL DateCollected ## 1 4.407130e-05 8.526204e-06 NA  2.736025e-05 6.078235e-05    2021-11-01 ## 2 8.411772e-10 3.730847e-10 NA  1.099445e-10 1.572410e-09    2021-11-01 ## 3 5.906663e-10 4.026160e-10 NA -1.984467e-10 1.379779e-09    2021-11-01 ## 4 1.431832e-19 3.543370e-19 NA -5.513046e-19 8.376710e-19    2021-11-01 ## 5 2.899045e-12 7.219134e-12 NA -1.125020e-11 1.704829e-11    2021-11-01 ## 6 9.275218e-01 9.369113e-03 NA  9.091587e-01 9.458850e-01    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Australia.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Australia","text":"","code":"muller_australiabystate_mfit <- PlotMullerDailyPrevalence(fit_australia_multi_predsbystate, ncol = 3) muller_australiabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Canada.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Canada","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_canada, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Canada\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Canada.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Canada","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_canada_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_canada,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed %>% filter(MonthYearCollected >= \"Nov 2021\")  vocs_to_keep <- table(gisaid_canada_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_canada_shared_dateweek <- SummarizeVariantsDatewise(gisaid_canada_collapsed_sel, by_state = TRUE) head(gisaid_canada_shared_dateweek) ## # A tibble: 6 × 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alberta                18932 Delta               134 ## 2 Alberta                18933 Delta                98 ## 3 Alberta                18934 Delta                94 ## 4 Alberta                18935 Delta                96 ## 5 Alberta                18936 Delta                66 ## 6 Alberta                18937 Delta                54 fit_canada_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_canada_shared_dateweek) ## # weights:  72 (55 variable) ## initial  value 217571.560589  ## iter  10 value 64537.459631 ## iter  20 value 61020.187975 ## iter  30 value 55733.256202 ## iter  40 value 52840.725428 ## iter  50 value 50882.675648 ## iter  60 value 49997.521347 ## iter  70 value 49904.625901 ## iter  80 value 49856.151747 ## iter  90 value 49840.291718 ## iter 100 value 49839.430184 ## iter 110 value 49838.180229 ## iter 120 value 49837.855046 ## iter 130 value 49837.745961 ## final  value 49837.654408  ## converged head(fit_canada_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 Alberta 2.803835e-05 2.945947e-06 NA ## 2              BA.2                18932 Alberta 1.128419e-08 2.329901e-09 NA ## 3           BA.2.10                18932 Alberta 6.602040e-10 3.943948e-10 NA ## 4           BA.2.12                18932 Alberta 1.078573e-11 1.768965e-11 NA ## 5         BA.2.12.1                18932 Alberta 2.684061e-09 1.109276e-08 NA ## 6             Delta                18932 Alberta 9.999719e-01 2.947473e-06 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1  2.226440e-05 3.381230e-05    2021-11-01 ## 2  6.717671e-09 1.585072e-08    2021-11-01 ## 3 -1.127955e-10 1.433204e-09    2021-11-01 ## 4 -2.388535e-11 4.545681e-11    2021-11-01 ## 5 -1.905736e-08 2.442548e-08    2021-11-01 ## 6  9.999662e-01 9.999777e-01    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Canada.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Canada","text":"","code":"muller_canadabystate_mfit <- PlotMullerDailyPrevalence(fit_canada_multi_predsbystate, ncol = 3) muller_canadabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - India","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - India","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State == \"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Total sequences deposited\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p1"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - India","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\", `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed_sel <- gisaid_india_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") vocs_to_keep <- table(gisaid_india_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_india_collapsed_sel <- gisaid_india_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_india_shared_dateweek <- SummarizeVariantsDatewise(gisaid_india_collapsed_sel, by_state = TRUE) head(gisaid_india_shared_dateweek) ## # A tibble: 6 × 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Andaman & Nicobar                18970 Delta                 6 ## 2 Andaman & Nicobar                18970 Others                1 ## 3 Andaman & Nicobar                18971 Delta                 2 ## 4 Andaman & Nicobar                18976 Delta                 1 ## 5 Andaman & Nicobar                18981 Delta                 1 ## 6 Andaman & Nicobar                18983 Delta                 1 fit_india_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_india_shared_dateweek) ## # weights:  273 (228 variable) ## initial  value 138965.227385  ## iter  10 value 87334.390859 ## iter  20 value 82691.773674 ## iter  30 value 80775.338365 ## iter  40 value 76742.975214 ## iter  50 value 73783.479121 ## iter  60 value 71778.993701 ## iter  70 value 71323.603517 ## iter  80 value 70934.621172 ## iter  90 value 70775.437255 ## iter 100 value 70630.921977 ## iter 110 value 70546.090004 ## iter 120 value 70513.002155 ## iter 130 value 70490.784583 ## iter 140 value 70477.881377 ## iter 150 value 70473.816740 ## iter 160 value 70472.880664 ## iter 170 value 70472.618300 ## final  value 70472.586175  ## converged head(fit_india_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State         prob ## 1              BA.1                18932 Andaman & Nicobar 4.327216e-04 ## 2              BA.2                18932 Andaman & Nicobar 6.021165e-06 ## 3           BA.2.10                18932 Andaman & Nicobar 4.857425e-06 ## 4         BA.2.10.1                18932 Andaman & Nicobar 6.580596e-08 ## 5           BA.2.12                18932 Andaman & Nicobar 4.227029e-09 ## 6             Delta                18932 Andaman & Nicobar 9.795257e-01 ##             SE df     asymp.LCL    asymp.UCL DateCollected ## 1 2.372503e-04 NA -3.228055e-05 8.977237e-04    2021-11-01 ## 2 3.602018e-06 NA -1.038661e-06 1.308099e-05    2021-11-01 ## 3 2.614155e-06 NA -2.662239e-07 9.981075e-06    2021-11-01 ## 4 2.620139e-07 NA -4.477318e-07 5.793437e-07    2021-11-01 ## 5 1.994226e-08 NA -3.485907e-08 4.331313e-08    2021-11-01 ## 6 1.550546e-02 NA  9.491355e-01 1.009916e+00    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - India","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_southafrica, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_southafrica) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State == \"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p1"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - South Africa","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_southafrica_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_southafrica_shared_dateweek <- SummarizeVariantsDatewise(gisaid_southafrica_collapsed_sel, by_state = TRUE) head(gisaid_southafrica_shared_dateweek) ## # A tibble: 6 × 4 ##   State        DateCollectedNumeric lineage_collapsed     n ##   <chr>                       <dbl> <chr>             <int> ## 1 Eastern Cape                18933 Delta                 2 ## 2 Eastern Cape                18934 Delta                 2 ## 3 Eastern Cape                18935 Delta                 1 ## 4 Eastern Cape                18938 Delta                 1 ## 5 Eastern Cape                18940 Delta                 1 ## 6 Eastern Cape                18945 Delta                 1 fit_southafrica_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_southafrica_shared_dateweek) ## # weights:  96 (77 variable) ## initial  value 28124.446851  ## iter  10 value 10516.953275 ## iter  20 value 9215.927090 ## iter  30 value 8335.615553 ## iter  40 value 8091.583252 ## iter  50 value 7966.673444 ## iter  60 value 7925.591535 ## iter  70 value 7904.259498 ## iter  80 value 7898.319474 ## iter  90 value 7894.279469 ## iter 100 value 7893.481664 ## iter 110 value 7890.875419 ## iter 110 value 7890.875385 ## iter 110 value 7890.875385 ## final  value 7890.875385  ## converged head(fit_southafrica_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric        State         prob           SE ## 1              BA.1                18932 Eastern Cape 6.514525e-02 2.297333e-02 ## 2              BA.2                18932 Eastern Cape 6.260302e-06 2.693096e-06 ## 3            BA.2.1                18932 Eastern Cape 1.082781e-10 1.768324e-10 ## 4              BA.3                18932 Eastern Cape 2.449024e-04 2.116449e-04 ## 5              BA.4                18932 Eastern Cape 7.333260e-13 2.931884e-12 ## 6              BA.5                18932 Eastern Cape 1.579743e-32 2.358716e-31 ##   df     asymp.LCL    asymp.UCL DateCollected ## 1 NA  2.011836e-02 1.101721e-01    2021-11-01 ## 2 NA  9.819310e-07 1.153867e-05    2021-11-01 ## 3 NA -2.383070e-10 4.548632e-10    2021-11-01 ## 4 NA -1.699140e-04 6.597188e-04    2021-11-01 ## 5 NA -5.013062e-12 6.479714e-12    2021-11-01 ## 6 NA -4.465025e-31 4.780974e-31    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - South Africa","text":"","code":"muller_southafricabystate_mfit <- PlotMullerDailyPrevalence(fit_southafrica_multi_predsbystate, ncol = 3) muller_southafricabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_UK.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - United Kingdom","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_uk, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"United Kingdom\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_UK.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - United Kingdom","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_uk_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_uk_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_uk_shared_dateweek <- SummarizeVariantsDatewise(gisaid_uk_collapsed_sel, by_state = TRUE) head(gisaid_uk_shared_dateweek) ## # A tibble: 6 × 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 England                18932 Delta              5533 ## 2 England                18932 Others                4 ## 3 England                18933 BA.1                  1 ## 4 England                18933 Delta              4313 ## 5 England                18933 Others                1 ## 6 England                18934 BA.1                  1 fit_uk_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_uk_shared_dateweek) ## # weights:  63 (48 variable) ## initial  value 3223343.835524  ## iter  10 value 1215084.495223 ## iter  20 value 1128295.038970 ## iter  30 value 760512.765399 ## iter  40 value 723607.736530 ## iter  50 value 673789.744668 ## iter  60 value 610945.789233 ## iter  70 value 604674.649579 ## iter  80 value 603982.686712 ## iter  90 value 603833.052822 ## iter 100 value 603761.919026 ## iter 110 value 603726.842229 ## iter 120 value 603685.654303 ## iter 130 value 603634.074968 ## iter 140 value 603611.388567 ## iter 150 value 603607.380684 ## final  value 603604.617921  ## converged head(fit_uk_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 England 1.145029e-05 3.655207e-07 NA ## 2              BA.2                18932 England 8.080694e-12 6.985902e-13 NA ## 3            BA.2.1                18932 England 4.298624e-12 9.519282e-13 NA ## 4           BA.2.10                18932 England 2.238289e-11 3.596306e-12 NA ## 5         BA.2.10.1                18932 England 5.843973e-13 3.961068e-13 NA ## 6           BA.2.12                18932 England 5.118601e-13 3.941172e-13 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1  1.073388e-05 1.216669e-05    2021-11-01 ## 2  6.711482e-12 9.449905e-12    2021-11-01 ## 3  2.432879e-12 6.164369e-12    2021-11-01 ## 4  1.533426e-11 2.943152e-11    2021-11-01 ## 5 -1.919576e-13 1.360752e-12    2021-11-01 ## 6 -2.605954e-13 1.284316e-12    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_UK.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - United Kingdom","text":"","code":"muller_ukbystate_mfit <- PlotMullerDailyPrevalence(fit_uk_multi_predsbystate, ncol = 3) muller_ukbystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"load-preprocessed-data","dir":"Articles","previous_headings":"","what":"Load preprocessed data","title":"Multinomial modeling - USA","text":"load qs object created metadata tar GISAID faster loading. See Introduction vignette see object created.","code":"date <- \"2022_05_13\" gisaid_metadata <- qs::qread(file = paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", date, \".qs\")) # filter our sequences from USA gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>% arrange(State, MonthYearCollected) gisaid_usa$State <- CleanAmericanStates(gisaid_usa$State) gisaid_usa <- gisaid_usa %>% filter(State %in% datasets::state.name)"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Load preprocessed data","what":"Plot total sequenced cases","title":"Multinomial modeling - USA","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_usa, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"USA\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"get-vocs","dir":"Articles","previous_headings":"Load preprocessed data","what":"Get VOCs","title":"Multinomial modeling - USA","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_usa_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_usa_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 20]  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_usa_shared_dateweek <- SummarizeVariantsDatewise(gisaid_usa_collapsed_sel, by_state = TRUE) head(gisaid_usa_shared_dateweek) ## # A tibble: 6 × 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alabama                18932 Delta                15 ## 2 Alabama                18933 Delta                 9 ## 3 Alabama                18934 Delta                10 ## 4 Alabama                18935 Delta                 8 ## 5 Alabama                18935 Others                1 ## 6 Alabama                18936 Delta                 8 fit_usa_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_usa_shared_dateweek) ## # weights:  689 (624 variable) ## initial  value 3572661.531122  ## iter  10 value 1249087.138655 ## iter  20 value 964684.967471 ## iter  30 value 925106.236767 ## iter  40 value 880618.782680 ## iter  50 value 755911.417068 ## iter  60 value 643809.895052 ## iter  70 value 588288.685123 ## iter  80 value 547007.831320 ## iter  90 value 515772.006957 ## iter 100 value 481716.965660 ## iter 110 value 459388.834700 ## iter 120 value 446726.794716 ## iter 130 value 434953.417020 ## iter 140 value 424877.166217 ## iter 150 value 416424.035743 ## iter 160 value 412580.334134 ## iter 170 value 410688.301257 ## iter 180 value 409157.429626 ## iter 190 value 407671.998306 ## iter 200 value 406397.632314 ## iter 210 value 405395.113133 ## iter 220 value 404706.901155 ## iter 230 value 404200.326744 ## iter 240 value 403822.773661 ## iter 250 value 403606.010565 ## iter 260 value 403296.642995 ## iter 270 value 403054.996522 ## iter 280 value 402773.456075 ## iter 290 value 402446.836540 ## iter 300 value 401999.761204 ## iter 310 value 401370.714052 ## iter 320 value 400441.185635 ## iter 330 value 399278.967565 ## iter 340 value 398248.667889 ## iter 350 value 397704.445261 ## iter 360 value 397346.236437 ## iter 370 value 397033.371009 ## iter 380 value 396657.407911 ## iter 390 value 396455.676189 ## iter 400 value 396287.961665 ## iter 410 value 396094.542294 ## iter 420 value 395933.546441 ## iter 430 value 395804.625035 ## iter 440 value 395730.509071 ## iter 450 value 395687.006932 ## iter 460 value 395665.585037 ## iter 470 value 395650.527799 ## iter 480 value 395640.118356 ## iter 490 value 395634.232155 ## iter 500 value 395628.914829 ## iter 510 value 395621.359617 ## iter 520 value 395615.491252 ## iter 530 value 395610.529146 ## iter 540 value 395604.869434 ## iter 550 value 395600.493230 ## iter 560 value 395598.365899 ## iter 570 value 395597.004177 ## iter 580 value 395596.648094 ## final  value 395596.601960  ## converged head(fit_usa_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 Alabama 7.902776e-06 6.909419e-07 NA ## 2              BA.2                18932 Alabama 1.426489e-11 3.629907e-12 NA ## 3            BA.2.1                18932 Alabama 8.795756e-23 3.687205e-22 NA ## 4           BA.2.10                18932 Alabama 2.225634e-11 1.101501e-11 NA ## 5         BA.2.10.1                18932 Alabama 3.215391e-17 3.734560e-17 NA ## 6           BA.2.12                18932 Alabama 7.997025e-13 1.106916e-12 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1  6.548555e-06 9.256997e-06    2021-11-01 ## 2  7.150406e-12 2.137938e-11    2021-11-01 ## 3 -6.347212e-22 8.106364e-22    2021-11-01 ## 4  6.673241e-13 4.384536e-11    2021-11-01 ## 5 -4.104212e-17 1.053499e-16    2021-11-01 ## 6 -1.369813e-12 2.969218e-12    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - USA","text":"","code":"muller_usabystate_mfit <- PlotMullerDailyPrevalence(fit_usa_multi_predsbystate, ncol = 5) muller_usabystate_mfit ## Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Set3 is 12 ## Returning the palette you asked for with that many colors"},{"path":"http://saket-choudhary.me/epicovr/articles/SouthAfrica_contrast_India.html","id":"get-data","dir":"Articles","previous_headings":"","what":"Get data","title":"Compare growth in India and South Africa","text":"","code":"current_date <- \"2022_05_13\" fpath.tar <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".qs\") gisaid_metadata <- qs::qread(file = fpath.qs) gisaid_metadata <- FormatGISAIDMetadata(gisaid_metadata) %>% filter(pangolin_lineage != \"Unassigned\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"omicron-others\"]] <- omicron   custom_voc_mapping <- list(   `BA\\\\.1` = \"BA.1+\",   `BA\\\\.1\\\\.*` = \"BA.1+\",   `BA\\\\.2\\\\.10` = \"BA.2.10+\",   `BA\\\\.2\\\\.10\\\\.*` = \"BA.2.10+\",   `BA\\\\.2\\\\.12` = \"BA.2.12+\",   `BA\\\\.2\\\\.12\\\\.*` = \"BA.2.12+\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" )  month_prevalence <- CollapseLineageToVOCs(   variant_df = gisaid_metadata,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE ) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL   confirmed.tmp <- COVID19::covid19(country = \"South Africa\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long_southafrica <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_metadata_2022 <- gisaid_metadata %>%   filter(MonthYearCollected >= \"Oct 2021\") %>%   filter(pangolin_lineage != \"\") %>%   filter(Country %in% c(\"South Africa\", \"India\"))   gisaid_southafrica <- gisaid_metadata_2022 %>% filter(Country == \"South Africa\") gisaid_southafrica$State <- \"South Africa\" gisaid_southafrica$Country <- \"X\"   gisaid_india <- gisaid_metadata_2022 %>% filter(Country == \"India\") gisaid_india$State <- \"India\" gisaid_india$Country <- \"X\"  gisaid_sel <- rbind(gisaid_southafrica, gisaid_india) %>% arrange(State, MonthYearCollected)   gisaid_sel_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_sel,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )   gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_sel_dateweek <- SummarizeVariantsDatewise(gisaid_sel_collapsed, by_state = TRUE)   fit <- FitMultinomStatewiseDaily(gisaid_sel_dateweek) ## # weights:  60 (44 variable) ## initial  value 231083.893897  ## iter  10 value 101001.843684 ## iter  20 value 88709.678253 ## iter  30 value 81986.518888 ## iter  40 value 79042.545323 ## iter  50 value 78786.783079 ## iter  60 value 78769.114336 ## iter  70 value 78756.214303 ## iter  80 value 78751.206548 ## iter  90 value 78744.938385 ## final  value 78744.935434  ## converged head(fit) ##   lineage_collapsed DateCollectedNumeric State         prob           SE df ## 1             Alpha                18901 India 8.304090e-05 8.798411e-05 NA ## 2             BA.1+                18901 India 1.584942e-06 3.095676e-07 NA ## 3          BA.2.10+                18901 India 8.030842e-12 2.290926e-12 NA ## 4          BA.2.12+                18901 India 3.787393e-13 4.246828e-13 NA ## 5              BA.3                18901 India 4.962493e-09 3.662477e-09 NA ## 6              BA.4                18901 India 8.890196e-25 5.362719e-24 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1 -8.940479e-05 2.554866e-04    2021-10-01 ## 2  9.782007e-07 2.191683e-06    2021-10-01 ## 3  3.540710e-12 1.252097e-11    2021-10-01 ## 4 -4.536236e-13 1.211102e-12    2021-10-01 ## 5 -2.215830e-09 1.214082e-08    2021-10-01 ## 6 -9.621716e-24 1.139976e-23    2021-10-01 muller <- PlotMullerDailyPrevalence(fit) muller gisaid_southafrica <- gisaid_metadata_2022 %>% filter(Country == \"South Africa\")  gisaid_india <- gisaid_metadata_2022 %>% filter(Country == \"India\")  gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  collapsed_unique_variants <- union(unique(gisaid_india_collapsed$lineage_collapsed), unique(gisaid_southafrica_collapsed$lineage_collapsed))  colors_to_use <- c(\"#ebac23\",\"#b80058\",\"#008cf9\",\"#006e00\",\"#00bbad\",\"#d163e6\",\"#b24502\",\"#ff9287\",\"#5954d6\",\"#00c6f8\",\"#878500\",\"#00a76c\") names(colors_to_use) <- collapsed_unique_variants  gisaid_southafrica_weekwise <- SummarizeVariantsWeekwise(gisaid_southafrica_collapsed)   gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india_collapsed)  cases_southafrica <- confirmed_subset_dateweekwise_long_southafrica %>% filter(WeekYearCollected >= tsibble::yearweek(\"2021 W44\"))  cases_india <- confirmed_subset_dateweekwise_long_india %>% filter(WeekYearCollected >= tsibble::yearweek(\"2021 W44\")) preds_southafrica <- FitMultinomWeekly(gisaid_southafrica_weekwise, cases_southafrica) ## # weights:  40 (27 variable) ## initial  value 32712.826416  ## iter  10 value 11338.971169 ## iter  20 value 8517.134613 ## iter  30 value 8038.636096 ## iter  40 value 8005.311868 ## iter  50 value 7996.475423 ## iter  60 value 7992.736883 ## iter  70 value 7991.977896 ## iter  80 value 7987.876618 ## iter  90 value 7986.806816 ## iter 100 value 7986.470931 ## iter 110 value 7986.421854 ## final  value 7986.407852  ## converged preds_india <- FitMultinomWeekly(gisaid_india_weekwise, cases_india) ## # weights:  36 (24 variable) ## initial  value 173114.929999  ## iter  10 value 80038.254953 ## iter  20 value 74003.668209 ## iter  30 value 71054.023744 ## iter  40 value 70791.329705 ## iter  50 value 70757.654978 ## iter  60 value 70749.947512 ## iter  70 value 70730.098908 ## iter  80 value 70725.099128 ## iter  90 value 70724.551838 ## final  value 70724.036579  ## converged sa_anim <- PlotVariantPrevalenceAnimated(preds_southafrica, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\", colors = colors_to_use) gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_compare.gif\"), animation = sa_anim)   india_anim <- PlotVariantPrevalenceAnimated(preds_india, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\", colors = colors_to_use) gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_compare.gif\"), animation = india_anim)  india_mgif <- magick::image_read(india_anim) southafrica_mgif <- magick::image_read(sa_anim)    final_gif <- image_append(c(india_mgif[1], southafrica_mgif[1])) for (i in 2:length(india_mgif)) {   combined <- image_append(c(india_mgif[i], southafrica_mgif[i]))   final_gif <- c(final_gif, combined) }  gganimate::anim_save(filename = here::here(\"docs/articles/SA_IN_animated.gif\"), animation = final_gif)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-India.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - India","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_05_13.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-India.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases - India","text":"","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-India.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - India","text":"Look cases October, 2021 :  Look cases last weeks:","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  40 (27 variable) ## initial  value 399959.030653  ## iter  10 value 234133.131889 ## iter  20 value 171659.824996 ## iter  30 value 132899.798299 ## iter  40 value 130084.746777 ## iter  50 value 129577.699067 ## iter  60 value 129491.917356 ## iter  70 value 129432.658767 ## iter  80 value 129172.930762 ## iter  90 value 128291.240740 ## iter 100 value 127895.938403 ## iter 110 value 127593.970991 ## iter 120 value 127573.109377 ## iter 130 value 127529.320586 ## iter 140 value 127418.930249 ## iter 150 value 127235.798303 ## iter 160 value 127116.683420 ## iter 170 value 127059.761551 ## iter 170 value 127059.760763 ## final  value 127059.758144  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 138965.227385  ## iter  10 value 84475.323208 ## iter  20 value 80838.655090 ## iter  30 value 80372.135179 ## iter  40 value 80371.174199 ## iter  50 value 80371.105018 ## final  value 80371.087664  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 138965.227385  ## iter  10 value 84475.323208 ## iter  20 value 80838.655090 ## iter  30 value 80372.135179 ## iter  40 value 80371.174199 ## iter  50 value 80371.105018 ## final  value 80371.087664  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-NewYork.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York State","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_05_13.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_NY <- gisaid_NY %>% filter(pangolin_lineage != \"None\")  gisaid_NY <- CollapseLineageToVOCs(   variant_df = gisaid_NY,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-NewYork.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York State","text":"","code":"all_state_cases <- refresh_covid19nytimes_states()  confirmed <- all_state_cases %>%   filter(location == \"New York\") %>%   filter(data_type == \"cases_total\") %>%   arrange(date)  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-NewYork.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York State","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_NY_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NY_weekwise <- gisaid_NY_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NY_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  60 (42 variable) ## initial  value 514155.827282  ## iter  10 value 238207.729909 ## iter  20 value 213531.517944 ## iter  30 value 170929.695160 ## iter  40 value 141722.936370 ## iter  50 value 118087.602350 ## iter  60 value 115772.778936 ## iter  70 value 115457.952881 ## iter  80 value 115274.263877 ## iter  90 value 115228.278145 ## iter 100 value 115207.262264 ## iter 110 value 115144.658063 ## iter 120 value 115130.834560 ## iter 130 value 115121.676980 ## iter 140 value 115104.422944 ## iter 150 value 115093.865465 ## iter 160 value 115078.373835 ## iter 170 value 114969.047519 ## final  value 114968.231919  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY <- gisaid_NY %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 220147.858156  ## iter  10 value 82047.334682 ## iter  20 value 69744.153240 ## iter  30 value 65128.000371 ## iter  40 value 63696.018713 ## iter  50 value 63549.080888 ## iter  60 value 63504.003804 ## iter  70 value 63488.611721 ## iter  80 value 63470.441431 ## iter  90 value 63458.170428 ## iter 100 value 63456.999688 ## final  value 63456.628342  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-SouthAfrica.html","id":"get-variants-data-for-south-africa","dir":"Articles","previous_headings":"","what":"Get variants data for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_05_13.qs\") gisaid_sa <- gisaid_metadata %>%   filter(Country == \"South Africa\") %>%   filter(Host == \"Human\") # format metadata gisaid_sa <- FormatGISAIDMetadata(gisaid_sa) gisaid_sa$State <- CleanSouthAfricanStates(gisaid_sa$State)  gisaid_sa <- gisaid_sa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL   custom_voc_mapping <- list(   `BA.1.17` = \"BA.1.17\",   `BA.1.14` = \"BA.1.14\",   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_sa <- gisaid_sa %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_sa <- CollapseLineageToVOCs(   variant_df = gisaid_sa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-SouthAfrica.html","id":"get-weekly-cases-for-south-africa","dir":"Articles","previous_headings":"","what":"Get weekly cases for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"confirmed.tmp <- COVID19::covid19(country = \"South Africa\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-SouthAfrica.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - South Africa","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 92563.553321  ## iter  10 value 35025.809368 ## iter  20 value 24706.760109 ## iter  30 value 20088.764405 ## iter  40 value 20001.143568 ## iter  50 value 19977.689614 ## iter  60 value 19947.858454 ## iter  70 value 19946.074144 ## iter  80 value 19942.352210 ## iter  90 value 19920.476033 ## iter 100 value 19911.279412 ## iter 110 value 19811.795545 ## iter 120 value 19757.439180 ## final  value 19754.202565  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_subset <- gisaid_sa %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa_subset)  voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  32 (21 variable) ## initial  value 27656.572504  ## iter  10 value 10257.035661 ## iter  20 value 8873.657241 ## iter  30 value 8695.249465 ## iter  40 value 8682.118249 ## iter  50 value 8679.295371 ## iter  60 value 8676.666237 ## iter  70 value 8670.024858 ## final  value 8667.692536  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-UK.html","id":"get-variants-data-for-uk","dir":"Articles","previous_headings":"","what":"Get variants data for UK","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_05_13.qs\") gisaid_uk <- gisaid_metadata %>%   filter(Country == \"United Kingdom\") %>%   filter(Host == \"Human\") # format metadata gisaid_uk <- FormatGISAIDMetadata(gisaid_uk)  gisaid_uk <- gisaid_uk %>% filter(State != \"\")  gisaid_uk <- gisaid_uk %>%   filter(pangolin_lineage != \"Unknown\") %>%   arrange(State, MonthYearCollected) %>%   filter(!is.na(MonthYearCollected))  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL  custom_voc_mapping <- list(   `B.1.177` = \"B.1.177\",   `BA.1.15` = \"BA.1.15+\",   `BA.1.15.1` = \"BA.1.15+\",   `BA.1.15.2` = \"BA.1.15+\",   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" )  gisaid_uk <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-UK.html","id":"get-daily-case-data","dir":"Articles","previous_headings":"","what":"Get daily case data","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"cases.struct <- list(   date = \"date\",   areaName = \"areaName\",   newCasesByPublishDate = \"newCasesByPublishDate\" ) all_nations <- c(   \"areaType=nation\" ) cases_data <- get_data(   filters = all_nations,   structure = cases.struct ) %>% rename(new_cases = newCasesByPublishDate)   confirmed <- cases_data %>%   arrange(date) %>%   group_by(date) %>%   summarise(daily_cases = sum(new_cases))  confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-UK.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - United Kingdom","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_uk_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_uk_weekwise <- gisaid_uk_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  uk_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_uk_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  80 (57 variable) ## initial  value 7980067.579080  ## iter  10 value 2961442.165736 ## iter  20 value 2434612.383877 ## iter  30 value 2400442.624707 ## iter  40 value 2276094.657798 ## iter  50 value 1879799.916736 ## iter  60 value 1453158.121894 ## iter  70 value 1315543.653745 ## iter  80 value 1300544.486963 ## iter  90 value 1296592.355252 ## iter 100 value 1293588.760554 ## iter 110 value 1292106.799131 ## iter 120 value 1291089.121660 ## iter 130 value 1290563.625050 ## iter 140 value 1289110.290494 ## iter 150 value 1288082.111206 ## iter 160 value 1287117.343023 ## iter 170 value 1284725.929402 ## iter 180 value 1284170.026702 ## iter 190 value 1283585.829761 ## iter 200 value 1282970.344909 ## iter 210 value 1282188.895610 ## iter 220 value 1281790.179150 ## iter 230 value 1281700.311908 ## final  value 1281690.299957  ## converged the_anim <- PlotVariantPrevalenceAnimated(uk_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and gov.uk<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk <- gisaid_uk %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  56 (39 variable) ## initial  value 3872043.387413  ## iter  10 value 1260314.572079 ## iter  20 value 1186990.268791 ## iter  30 value 1105152.902011 ## iter  40 value 1061810.081496 ## iter  50 value 1040956.905239 ## iter  60 value 1038727.471561 ## iter  70 value 1037964.043097 ## iter  80 value 1037229.981026 ## iter  90 value 1037179.167288 ## iter 100 value 1037129.881047 ## iter 110 value 1037016.439567 ## iter 120 value 1036976.515279 ## iter 130 value 1036971.942481 ## final  value 1036971.866854  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and gov.uk<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-USA.html","id":"get-variants-data-for-usa","dir":"Articles","previous_headings":"","what":"Get variants data for USA","title":"Animation of projected weekly cases - USA","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_05_13.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\" ) gisaid_usa <- gisaid_usa %>% filter(pangolin_lineage != \"None\")  gisaid_usa <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-USA.html","id":"get-weekly-cases-for-usa","dir":"Articles","previous_headings":"","what":"Get weekly cases for USA","title":"Animation of projected weekly cases - USA","text":"","code":"all_state_cases <- refresh_covid19nytimes_states()  confirmed.tmp <- all_state_cases %>%   filter(data_type == \"cases_total\") %>%   arrange(date) confirmed <- confirmed.tmp %>%   group_by(date) %>%   summarise(value = sum(value))  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-USA.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - USA","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  64 (45 variable) #> initial  value 8944545.891035  #> iter  10 value 3220683.074608 #> iter  20 value 2258596.546358 #> iter  30 value 2149452.062063 #> iter  40 value 1849947.495842 #> iter  50 value 1492211.733143 #> iter  60 value 1330385.697404 #> iter  70 value 1324224.396522 #> iter  80 value 1320213.520043 #> iter  90 value 1316533.845101 #> iter 100 value 1315544.822328 #> iter 110 value 1314363.109068 #> iter 120 value 1310985.519975 #> iter 130 value 1310168.110988 #> iter 140 value 1309851.132364 #> iter 150 value 1309622.122215 #> iter 160 value 1309202.139344 #> iter 170 value 1309126.123582 #> iter 180 value 1309084.756675 #> iter 190 value 1309001.441720 #> iter 200 value 1309000.620091 #> iter 200 value 1309000.610355 #> final  value 1309000.412370  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  44 (30 variable) #> initial  value 3358417.784328  #> iter  10 value 1047328.931445 #> iter  20 value 907981.524969 #> iter  30 value 647200.099295 #> iter  40 value 535573.937221 #> iter  50 value 526539.418809 #> iter  60 value 524841.692474 #> iter  70 value 524395.298762 #> iter  80 value 524185.046902 #> iter  90 value 523881.068674 #> iter 100 value 523857.197037 #> final  value 523857.092192  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_04_27.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases","text":"","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases","text":"","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  40 (27 variable) ## initial  value 390097.058700  ## iter  10 value 178248.743762 ## iter  20 value 146140.552484 ## iter  30 value 126267.710711 ## iter  40 value 125868.710205 ## iter  50 value 125468.176073 ## iter  60 value 125436.880514 ## iter  70 value 125420.104607 ## iter  80 value 125297.844401 ## iter  90 value 124823.115937 ## iter 100 value 124459.757857 ## iter 110 value 124167.683437 ## iter 120 value 124033.635921 ## iter 130 value 124012.447827 ## iter 140 value 123986.653588 ## iter 150 value 123964.465896 ## iter 160 value 123833.698243 ## iter 170 value 123803.428152 ## iter 180 value 123796.541234 ## iter 190 value 123790.764485 ## iter 200 value 123787.290033 ## iter 210 value 123769.180636 ## iter 220 value 123761.696812 ## final  value 123761.459795  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\") the_anim"},{"path":"http://saket-choudhary.me/epicovr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saket Choudhary. Maintainer.","code":""},{"path":"http://saket-choudhary.me/epicovr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choudhary S (2022). epicovr: R package perform modeling virus prevalence data GISAID. https://saketkc.github.io/epicovr, http://saket-choudhary./epicovr/.","code":"@Manual{,   title = {epicovr: R package to perform modeling on virus prevalence data from GISAID},   author = {Saket Choudhary},   year = {2022},   note = {https://saketkc.github.io/epicovr, http://saket-choudhary.me/epicovr/}, }"},{"path":"http://saket-choudhary.me/epicovr/index.html","id":"epicovr","dir":"","previous_headings":"","what":"R package to perform modeling on virus prevalence data from GISAID","title":"R package to perform modeling on virus prevalence data from GISAID","text":"epicovr R-package designed analysis sequencing metadata deposited GISAID.","code":""},{"path":"http://saket-choudhary.me/epicovr/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"R package to perform modeling on virus prevalence data from GISAID","text":"Epicovr currently supports following features: Read preprocess metadata file downloaded GISAID: Vignette Plot variant prevalence: Vignette India USA Canada UK Australia SouthAfrica India New York state South Africa United Kingdom USA Compare prevalence countries: India South Africa","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from the USA — CleanAmericanStates","title":"Clean states from the USA — CleanAmericanStates","text":"Clean states USA","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from the USA — CleanAmericanStates","text":"","code":"CleanAmericanStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from the USA — CleanAmericanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from the USA — CleanAmericanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from Canada — CleanCanadaStates","title":"Clean states from Canada — CleanCanadaStates","text":"Clean states Canada","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from Canada — CleanCanadaStates","text":"","code":"CleanCanadaStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from Canada — CleanCanadaStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from Canada — CleanCanadaStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Indian States — CleanIndianStates","title":"Clean Indian States — CleanIndianStates","text":"Clean Indian States","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Indian States — CleanIndianStates","text":"","code":"CleanIndianStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Indian States — CleanIndianStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Indian States — CleanIndianStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from South Africa — CleanSouthAfricanStates","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"Clean states South Africa","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"","code":"CleanSouthAfricanStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"Collpase pangolin lineage list VOCs","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"","code":"CollapseLineageToVOCs(   variant_df,   vocs = GetVOCs(),   custom_voc_mapping = NULL,   summarize = TRUE )"},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"variant_df dataframe \"pangolin_lineage\" column vocs named list VOC (variant concernt) name key list lineages VOC. method replace lineages VOC name. custom_voc_mapping named vector custom mapping naming lineages. See example.","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"dataframe new column \"lineage_collpased\".","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases — CombineCases","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineCases","text":"","code":"CombineCases(cases_sequenced, confirmed_long)"},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineCases","text":"cases_sequenced long dataframe per state sequenced cases cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"","code":"CombineSequencedCases(   cases_sequenced,   confirmed_long,   prune_oversequenced = TRUE,   month.min = NULL,   month.max = NULL,   max.percent = 100 )"},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"cases_sequenced long dataframe per state sequenced cases prune_oversequenced Whether round percentages 100 100. Default TRUE cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert monthwise counts to prevalence — CountsToPrevalence","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"Convert monthwise counts prevalence","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"","code":"CountsToPrevalence(variant_df)"},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"dataframe monthwise prevalence variants","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/EpicovrTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set them — EpicovrTheme","title":"Set them — EpicovrTheme","text":"Set ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/EpicovrTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set them — EpicovrTheme","text":"","code":"EpicovrTheme()"},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GISAID India Metadata for India — FilterGISAIDIndia","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"Filter GISAID India Metadata India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"","code":"FilterGISAIDIndia(gisaid_metadata_all)"},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"gisaid_metadata_all dataframe GISAID metadata","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"dataframe Indian entries Human date known","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"Format metadata.tar.x file downloaded GISAID missing columns","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"","code":"FormatGISAIDMetadata(   df,   collection_col = \"Collection date\",   submission_col = \"Submission date\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"df GISAID metadata dataframe collection_col Name column representing date collection (Collection date) submission_col Name column representing date submission (Submission date)","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"data frame following extra columns: DateCollected, MonthYearCollected, YearCollected, MonthCollected, WeekCollected DateCollectedNumeric, MonthYearCollectedNumeric DateSubmitted, MonthYearSubmitted, YearSubmitted, MonthSubmitted, WeekSubmitted DateSubmittedNumeric, MonthYearSubmittedNumeric","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"Geocode given address get latitude, longitude Gooogle","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"","code":"GeocodeAddress(address, api.key = NULL, restrict.to = NULL)"},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"address String address geocode api.key API key Google Maps restrict.Country name search restricted , Currently supports 'India'","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"dataframe geocoded address","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine filetype — GetFiletype","title":"Determine filetype — GetFiletype","text":"Determine filetype","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine filetype — GetFiletype","text":"","code":"GetFiletype(path)"},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine filetype — GetFiletype","text":"path Path file","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine filetype — GetFiletype","text":"Extension file","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"Get daily confirmed cases India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"","code":"GetIndiaConfirmedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"Get India monthwose cases long","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"","code":"GetIndiaConfirmedCasesMonthlyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"","code":"GetIndiaConfirmedCasesWeeklyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"Get daily cases India given status type","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"","code":"GetIndiaDailyCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   status = \"Confirmed\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"url URL fetch data status One \"Confirmed\", \"Recovered\", \"Deceased\"","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily statewise data for India — GetIndiaDailyData","title":"Get daily statewise data for India — GetIndiaDailyData","text":"'Status' column one 'Confirmed', 'Deceased' 'Recovered'","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily statewise data for India — GetIndiaDailyData","text":"","code":"GetIndiaDailyData(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily statewise data for India — GetIndiaDailyData","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily statewise data for India — GetIndiaDailyData","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"Get daily deceased cases India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"","code":"GetIndiaDeceasedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaHospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data for India — GetIndiaHospitalization","title":"Get hospitalization data for India — GetIndiaHospitalization","text":"Get hospitalization data India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaHospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data for India — GetIndiaHospitalization","text":"","code":"GetIndiaHospitalization(url = \"\")"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of Indian name states — GetIndianStates","title":"Get a list of Indian name states — GetIndianStates","text":"Get list Indian name states","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of Indian name states — GetIndianStates","text":"","code":"GetIndianStates()"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of Indian name states — GetIndianStates","text":"list state abbreviation key full name value","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"Get MonthYear (zoo) dataframe string formatted data column","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"","code":"GetMonthYear(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"datecol vector string formatted dates datefmt Format date (default Y-m-d)","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"vector dates converted MonthYear format (zoo::.yearmon)","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants of concern — GetVOCs","title":"Get variants of concern — GetVOCs","text":"Get variants concern","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants of concern — GetVOCs","text":"","code":"GetVOCs()"},{"path":"http://saket-choudhary.me/epicovr/reference/GetVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants of concern — GetVOCs","text":"list variants concern pangolin lineage","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"Plot heatmap cases sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"","code":"PlotSequencedPropHeatmap(df)"},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"heatmap total percentage cases sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"Read instrument metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"","code":"ReadAuspiceInstrument(path)"},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"dataframe instrument related metadata","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"Read metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"","code":"ReadAuspiceMetadata(path)"},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"dataframe collated metadata","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata downloaded from GISAID — ReadGISAIDMetada","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"Read metadata downloaded GISAID","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"","code":"ReadGISAIDMetada(path, showProgress = FALSE, ...)"},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"path Path tar.xz metadata.txt downloaded GISAID showProgress Whether print progress bars fread ... parameters data.table::fread","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"data frame parsed metadata extra columns","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"function removes: 1. Commas space 2. Hyphen space 3. Multiple dots single space 4. Multiple spacies single space 5. NA \"UNKNOWN\"","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"","code":"SanitizeColumn(col)"},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"col String vector","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"string vector sanitized entries","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week — SummarizeVariantsDatewise","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"","code":"SummarizeVariantsDatewise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"Summarize total number variants per month","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"","code":"SummarizeVariantsMonthwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"","code":"SummarizeVariantsWeekwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"Get total sequenced samples per country","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"","code":"TotalSequencesPerMonthCountrywise(variant_df, rename_country_as_state = TRUE)"},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"dataframe sequencing statistics per country","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthStatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","title":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","text":"Get total number sequenced samples per month Country","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthStatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","text":"","code":"TotalSequencesPerMonthStatewise(variant_df, drop_country = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthStatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","text":"dataframe sequencing statistics per state per country","code":""},{"path":[]},{"path":"http://saket-choudhary.me/epicovr/news/index.html","id":"changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"epicovr 0.1.1 (Unreleased)","text":"Update theme use Set3 colors default Add caption parameter PlotVariantPrevalenceAnimated() Change default xlable rotation 90 PlotVariantPrevalenceAnimated() FitMultinomStatewiseDaily uses second degree spline fitting prevalence Default angle=90 barplots Add colors argument PlotVariantPrevalenceAnimated","code":""}]
