[{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"get-cases-data","dir":"Articles","previous_headings":"","what":"Get cases data","title":"Introduction to covmuller","text":"use covid19bharat.org get tally daily confirmed cases summarize monthly level.","code":"indian_state_cases <- GetIndiaConfirmedCasesMonthlyLong() india_cases <- indian_state_cases %>% filter(State == \"India\") head(india_cases) ##   MonthYear State   value      type ## 1  Mar 2020 India    1635 Confirmed ## 2  Apr 2020 India   33232 Confirmed ## 3  May 2020 India  155781 Confirmed ## 4  Jun 2020 India  395044 Confirmed ## 5  Jul 2020 India 1111273 Confirmed ## 6  Aug 2020 India 1990350 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-cases-for-india","dir":"Articles","previous_headings":"Get cases data","what":"Plot cases for India","title":"Introduction to covmuller","text":"easy visualize monthly case counts bar plot:","code":"p1 <- BarPlot(india_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - India\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"read-variant-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Read variant data from GISAID","title":"Introduction to covmuller","text":"utilize GISAID data look prevalence variants. access data, GISAID requires registration.","code":"current_date <- \"2022_06_23\" fpath.tar <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".qs\")  if (file.exists(fpath.qs)) {   gisaid_metadata <- qs::qread(file = fpath.qs) } else {   gisaid_metadata <- ReadGISAIDMetada(path = fpath.tar)   qs::qsave(gisaid_metadata, fpath.qs) }"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot total sequenced cases","title":"Introduction to covmuller","text":"can look absolute number cases sequenced country filtering information metadata made available GISAID (includes countries). , visualize total sequenced cases coming India:","code":"gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata) country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p2 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from India\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"overall-how-much-has-india-sequenced-over-months","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Overall, how much has India sequenced over months?","title":"Introduction to covmuller","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:  context, can combine three plots :","code":"india_cases_long <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"India\") india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = country_seq_stats,   confirmed_long = india_cases_long ) p3 <- BarPlot(india_sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from India\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-proportion-of-cases-that-been-deposited-from-each-state","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot proportion of cases that been deposited from each state","title":"Introduction to covmuller","text":"can break proportion sequenced cases state level:","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india, drop_country = TRUE) seq_stats <- rbind(country_seq_stats, state_seq_stats) state_cases_long <- GetIndiaConfirmedCasesMonthlyLong() india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = seq_stats,   confirmed_long = state_cases_long,   month.min = \"Feb 2020\",   month.max = \"June 2022\",   max.percent = 5 )  india_sequencing_proportion$State <- factor(   x = india_sequencing_proportion$State,   levels = as.character(GetIndianStates()) ) p4 <- PlotSequencedPropHeatmap(india_sequencing_proportion) p4"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-prevalence","dir":"Articles","previous_headings":"","what":"Plot Prevalence","title":"Introduction to covmuller","text":"Finally, look prevalence variants variants concern (VOCs):  animated version prevalence plot, check VariantAnimation.","code":"india_month_counts <- SummarizeVariantsMonthwise(gisaid_india) india_month_counts$State <- \"India\" india_month_prevalence <- CountsToPrevalence(india_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1+\", `BA.1` = \"BA.1+\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.10+\",   `BA.2.10.1` = \"BA.2.10+\",   `BA.2.12` = \"BA.2.12+\",   `BA.2.12.1` = \"BA.2.12+\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) india_month_prevalence <- CollapseLineageToVOCs(   variant_df = india_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(india_month_prevalence) p5 ## Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Set3 is 12 ## Returning the palette you asked for with that many colors"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_germany, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_germany) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - Germany","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_germany_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_germany_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_germany_shared_dateweek <- SummarizeVariantsDatewise(gisaid_germany_collapsed_sel, by_state = TRUE) head(gisaid_germany_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Baden-Wurttemberg                18932 Delta                69 ## 2 Baden-Wurttemberg                18933 Delta               220 ## 3 Baden-Wurttemberg                18933 Others                1 ## 4 Baden-Wurttemberg                18934 Delta               485 ## 5 Baden-Wurttemberg                18934 Others                1 ## 6 Baden-Wurttemberg                18935 Delta               623 fit_germany_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_germany_shared_dateweek) ## # weights:  228 (198 variable) ## initial  value 1046707.288464  ## iter  10 value 387899.053644 ## iter  20 value 330657.298087 ## iter  30 value 324563.758196 ## iter  40 value 290056.478187 ## iter  50 value 250446.327854 ## iter  60 value 243589.113807 ## iter  70 value 229551.799468 ## iter  80 value 222596.337663 ## iter  90 value 219688.910433 ## iter 100 value 216712.295376 ## iter 110 value 213988.573032 ## iter 120 value 212441.484052 ## iter 130 value 211866.203925 ## iter 140 value 211515.797710 ## iter 150 value 211322.564100 ## iter 160 value 211211.743803 ## iter 170 value 211134.014288 ## iter 180 value 211070.516300 ## iter 190 value 211024.896144 ## iter 200 value 210984.551956 ## iter 210 value 210960.604926 ## iter 220 value 210928.728621 ## iter 230 value 210887.662658 ## iter 240 value 210864.379300 ## iter 250 value 210848.896558 ## iter 260 value 210846.443765 ## iter 270 value 210844.955401 ## iter 280 value 210839.998445 ## iter 290 value 210825.610435 ## iter 300 value 210819.834556 ## iter 310 value 210811.418111 ## iter 320 value 210806.418472 ## iter 330 value 210805.807829 ## iter 340 value 210805.684047 ## iter 350 value 210805.170736 ## iter 360 value 210803.805724 ## final  value 210803.787803  ## converged head(fit_germany_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State         prob ## 1              BA.1                18932 Baden-Wurttemberg 4.777296e-05 ## 2              BA.2                18932 Baden-Wurttemberg 4.884165e-09 ## 3            BA.2.1                18932 Baden-Wurttemberg 3.193293e-09 ## 4           BA.2.10                18932 Baden-Wurttemberg 2.475784e-09 ## 5         BA.2.10.1                18932 Baden-Wurttemberg 3.522718e-09 ## 6           BA.2.12                18932 Baden-Wurttemberg 5.931152e-10 ##             SE df     asymp.LCL    asymp.UCL DateCollected ## 1 3.574074e-06 NA  4.076790e-05 5.477801e-05    2021-11-01 ## 2 5.552829e-10 NA  3.795830e-09 5.972500e-09    2021-11-01 ## 3 1.313259e-09 NA  6.193516e-10 5.767234e-09    2021-11-01 ## 4 7.809207e-10 NA  9.452073e-10 4.006360e-09    2021-11-01 ## 5 1.836748e-09 NA -7.724162e-11 7.122678e-09    2021-11-01 ## 6 3.113874e-10 NA -1.719290e-11 1.203423e-09    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Germany","text":"","code":"muller_germanybystate_mfit <- PlotMullerDailyPrevalence(fit_germany_multi_predsbystate, ncol = 3) muller_germanybystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Australia","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_australia, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Australia\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Australia","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_australia_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_australia,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_australia_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_australia_shared_dateweek <- SummarizeVariantsDatewise(gisaid_australia_collapsed_sel, by_state = TRUE) head(gisaid_australia_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State                        DateCollectedNumeric lineage_collapsed     n ##   <chr>                                       <dbl> <chr>             <int> ## 1 Australian Capital Territory                18932 Delta                 8 ## 2 Australian Capital Territory                18933 Delta                16 ## 3 Australian Capital Territory                18934 Delta                 8 ## 4 Australian Capital Territory                18935 Delta                 8 ## 5 Australian Capital Territory                18936 Delta                15 ## 6 Australian Capital Territory                18938 Delta                16 fit_australia_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_australia_shared_dateweek) ## # weights:  110 (90 variable) ## initial  value 171296.212823  ## iter  10 value 69612.074581 ## iter  20 value 58246.588942 ## iter  30 value 53675.326700 ## iter  40 value 48399.019752 ## iter  50 value 46587.758520 ## iter  60 value 45375.553900 ## iter  70 value 44785.745289 ## iter  80 value 44362.881852 ## iter  90 value 44276.416690 ## iter 100 value 44254.262629 ## iter 110 value 44244.850124 ## iter 120 value 44242.816234 ## iter 130 value 44241.688609 ## iter 140 value 44237.472484 ## iter 150 value 44232.914660 ## iter 160 value 44229.562649 ## iter 170 value 44225.769224 ## iter 180 value 44225.676394 ## iter 190 value 44225.633136 ## final  value 44225.627065  ## converged head(fit_australia_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric                        State ## 1              BA.1                18932 Australian Capital Territory ## 2              BA.2                18932 Australian Capital Territory ## 3           BA.2.10                18932 Australian Capital Territory ## 4         BA.2.10.1                18932 Australian Capital Territory ## 5           BA.2.12                18932 Australian Capital Territory ## 6         BA.2.12.1                18932 Australian Capital Territory ##           prob           SE df     asymp.LCL    asymp.UCL DateCollected ## 1 2.941988e-04 4.791575e-05 NA  2.002857e-04 3.881120e-04    2021-11-01 ## 2 3.917198e-09 1.277285e-09 NA  1.413764e-09 6.420631e-09    2021-11-01 ## 3 1.017678e-08 4.355743e-09 NA  1.639683e-09 1.871388e-08    2021-11-01 ## 4 8.256484e-13 7.264672e-13 NA -5.982012e-13 2.249498e-12    2021-11-01 ## 5 5.073819e-11 5.620557e-11 NA -5.942271e-11 1.608991e-10    2021-11-01 ## 6 2.888215e-21 2.444802e-20 NA -4.502903e-20 5.080546e-20    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Australia","text":"","code":"muller_australiabystate_mfit <- PlotMullerDailyPrevalence(fit_australia_multi_predsbystate, ncol = 3) muller_australiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Canada","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_canada, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Canada\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Canada","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_canada_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_canada,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed %>% filter(MonthYearCollected >= \"Nov 2021\")  vocs_to_keep <- table(gisaid_canada_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_canada_shared_dateweek <- SummarizeVariantsDatewise(gisaid_canada_collapsed_sel, by_state = TRUE) head(gisaid_canada_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alberta                18932 Delta               134 ## 2 Alberta                18933 Delta                98 ## 3 Alberta                18934 Delta                94 ## 4 Alberta                18935 Delta                96 ## 5 Alberta                18936 Delta                66 ## 6 Alberta                18937 Delta                54 fit_canada_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_canada_shared_dateweek) ## # weights:  120 (99 variable) ## initial  value 335670.854857  ## iter  10 value 108896.054596 ## iter  20 value 98933.587195 ## iter  30 value 90335.575590 ## iter  40 value 82536.543995 ## iter  50 value 78309.787560 ## iter  60 value 75468.175718 ## iter  70 value 73183.786850 ## iter  80 value 71957.718679 ## iter  90 value 71592.185860 ## iter 100 value 71331.284970 ## iter 110 value 71282.050087 ## iter 120 value 71269.861209 ## iter 130 value 71268.247064 ## iter 140 value 71265.981105 ## iter 150 value 71264.770715 ## iter 160 value 71263.894794 ## iter 170 value 71263.452663 ## iter 180 value 71263.341923 ## iter 190 value 71263.124123 ## iter 200 value 71262.610938 ## final  value 71262.600454  ## converged head(fit_canada_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 Alberta 5.439109e-05 5.253568e-06 NA ## 2              BA.2                18932 Alberta 1.536282e-08 2.564111e-09 NA ## 3            BA.2.1                18932 Alberta 9.454262e-14 3.762736e-13 NA ## 4           BA.2.10                18932 Alberta 1.255759e-08 4.862701e-09 NA ## 5           BA.2.12                18932 Alberta 8.565407e-09 8.385239e-09 NA ## 6         BA.2.12.1                18932 Alberta 2.564982e-11 1.770939e-11 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1  4.409428e-05 6.468789e-05    2021-11-01 ## 2  1.033726e-08 2.038839e-08    2021-11-01 ## 3 -6.429401e-13 8.320253e-13    2021-11-01 ## 4  3.026875e-09 2.208831e-08    2021-11-01 ## 5 -7.869360e-09 2.500017e-08    2021-11-01 ## 6 -9.059943e-12 6.035958e-11    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Canada","text":"","code":"muller_canadabystate_mfit <- PlotMullerDailyPrevalence(fit_canada_multi_predsbystate, ncol = 3) muller_canadabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - India","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - India","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State == \"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Total sequences deposited\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - India","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\", `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed_sel <- gisaid_india_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") vocs_to_keep <- table(gisaid_india_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_india_collapsed_sel <- gisaid_india_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_india_shared_dateweek <- SummarizeVariantsDatewise(gisaid_india_collapsed_sel, by_state = TRUE) head(gisaid_india_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Andaman & Nicobar                18970 Delta                 7 ## 2 Andaman & Nicobar                18971 Delta                 2 ## 3 Andaman & Nicobar                18976 Delta                 1 ## 4 Andaman & Nicobar                18981 Delta                 1 ## 5 Andaman & Nicobar                18983 Delta                 1 ## 6 Andaman & Nicobar                18984 BA.1                  1 fit_india_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_india_shared_dateweek) ## # weights:  312 (266 variable) ## initial  value 165012.004098  ## iter  10 value 88860.872330 ## iter  20 value 84188.703802 ## iter  30 value 82055.248594 ## iter  40 value 80706.611939 ## iter  50 value 78559.817024 ## iter  60 value 77663.367384 ## iter  70 value 77203.253782 ## iter  80 value 76742.654684 ## iter  90 value 76552.046170 ## iter 100 value 76443.294985 ## iter 110 value 76378.012779 ## iter 120 value 76353.810472 ## iter 130 value 76345.864716 ## iter 140 value 76338.515278 ## iter 150 value 76333.097254 ## iter 160 value 76325.519831 ## iter 170 value 76321.326637 ## iter 180 value 76316.464137 ## iter 190 value 76310.971229 ## iter 200 value 76306.074989 ## iter 210 value 76304.567902 ## iter 220 value 76303.874945 ## iter 230 value 76303.766110 ## final  value 76303.762684  ## converged head(fit_india_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State         prob ## 1              BA.1                18932 Andaman & Nicobar 6.400280e-04 ## 2              BA.2                18932 Andaman & Nicobar 8.308361e-06 ## 3           BA.2.10                18932 Andaman & Nicobar 1.347373e-05 ## 4         BA.2.10.1                18932 Andaman & Nicobar 1.492373e-12 ## 5           BA.2.12                18932 Andaman & Nicobar 6.636789e-15 ## 6         BA.2.12.1                18932 Andaman & Nicobar 5.984842e-35 ##             SE df     asymp.LCL    asymp.UCL DateCollected ## 1 3.435626e-04 NA -3.334242e-05 1.313398e-03    2021-11-01 ## 2 4.657554e-06 NA -8.202764e-07 1.743700e-05    2021-11-01 ## 3 6.854264e-06 NA  3.962270e-08 2.690785e-05    2021-11-01 ## 4 1.541293e-12 NA -1.528507e-12 4.513252e-12    2021-11-01 ## 5 4.993482e-15 NA -3.150256e-15 1.642383e-14    2021-11-01 ## 6 2.924757e-34 NA -5.133934e-34 6.330902e-34    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - India","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_southafrica, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_southafrica) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - South Africa","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_southafrica_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_southafrica_shared_dateweek <- SummarizeVariantsDatewise(gisaid_southafrica_collapsed_sel, by_state = TRUE) head(gisaid_southafrica_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State        DateCollectedNumeric lineage_collapsed     n ##   <chr>                       <dbl> <chr>             <int> ## 1 Eastern Cape                18933 Delta                 2 ## 2 Eastern Cape                18934 Delta                 2 ## 3 Eastern Cape                18935 Delta                 1 ## 4 Eastern Cape                18938 Delta                 1 ## 5 Eastern Cape                18940 Delta                 1 ## 6 Eastern Cape                18945 Delta                 1 fit_southafrica_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_southafrica_shared_dateweek) ## # weights:  96 (77 variable) ## initial  value 33986.392557  ## iter  10 value 14144.264398 ## iter  20 value 12594.143956 ## iter  30 value 11609.507679 ## iter  40 value 11016.227086 ## iter  50 value 10795.074931 ## iter  60 value 10719.827918 ## iter  70 value 10690.023060 ## iter  80 value 10649.026221 ## iter  90 value 10613.613454 ## iter 100 value 10595.249900 ## iter 110 value 10594.219504 ## final  value 10594.152870  ## converged head(fit_southafrica_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric        State         prob           SE ## 1              BA.1                18932 Eastern Cape 1.364641e-01 4.119232e-02 ## 2              BA.2                18932 Eastern Cape 1.959119e-05 7.299270e-06 ## 3            BA.2.1                18932 Eastern Cape 1.356430e-09 1.582573e-09 ## 4              BA.3                18932 Eastern Cape 4.351735e-04 3.614174e-04 ## 5              BA.4                18932 Eastern Cape 6.654477e-17 1.703907e-16 ## 6              BA.5                18932 Eastern Cape 1.325949e-20 6.215936e-20 ##   df     asymp.LCL    asymp.UCL DateCollected ## 1 NA  5.572863e-02 2.171996e-01    2021-11-01 ## 2 NA  5.284879e-06 3.389749e-05    2021-11-01 ## 3 NA -1.745356e-09 4.458216e-09    2021-11-01 ## 4 NA -2.731915e-04 1.143539e-03    2021-11-01 ## 5 NA -2.674148e-16 4.005044e-16    2021-11-01 ## 6 NA -1.085706e-19 1.350896e-19    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - South Africa","text":"","code":"muller_southafricabystate_mfit <- PlotMullerDailyPrevalence(fit_southafrica_multi_predsbystate, ncol = 3) muller_southafricabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - United Kingdom","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_uk, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"United Kingdom\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - United Kingdom","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_uk_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_uk_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_uk_shared_dateweek <- SummarizeVariantsDatewise(gisaid_uk_collapsed_sel, by_state = TRUE) head(gisaid_uk_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 England                18932 Delta              5535 ## 2 England                18932 Others                2 ## 3 England                18933 BA.1                  1 ## 4 England                18933 Delta              4313 ## 5 England                18933 Others                1 ## 6 England                18934 BA.1                  1 fit_uk_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_uk_shared_dateweek) ## # weights:  77 (60 variable) ## initial  value 3617814.901254  ## iter  10 value 1437260.358390 ## iter  20 value 1301983.549986 ## iter  30 value 1279077.074570 ## iter  40 value 815095.466108 ## iter  50 value 779203.660358 ## iter  60 value 705229.688237 ## iter  70 value 654940.196199 ## iter  80 value 641487.518488 ## iter  90 value 640380.465529 ## iter 100 value 639751.325262 ## iter 110 value 639555.584378 ## iter 120 value 639500.195203 ## iter 130 value 639468.605175 ## iter 140 value 639440.433934 ## iter 150 value 639395.441791 ## iter 160 value 639292.360192 ## iter 170 value 639169.236504 ## iter 180 value 639041.564955 ## iter 190 value 639003.447441 ## final  value 639001.401381  ## converged head(fit_uk_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 England 1.857931e-05 5.550659e-07 NA ## 2              BA.2                18932 England 2.721308e-11 2.004644e-12 NA ## 3            BA.2.1                18932 England 6.177502e-12 9.372815e-13 NA ## 4           BA.2.10                18932 England 7.041416e-11 8.934314e-12 NA ## 5         BA.2.10.1                18932 England 3.593064e-12 1.667422e-12 NA ## 6           BA.2.12                18932 England 1.095066e-12 5.267808e-13 NA ##      asymp.LCL    asymp.UCL DateCollected ## 1 1.749140e-05 1.966722e-05    2021-11-01 ## 2 2.328405e-11 3.114211e-11    2021-11-01 ## 3 4.340464e-12 8.014540e-12    2021-11-01 ## 4 5.290323e-11 8.792510e-11    2021-11-01 ## 5 3.249773e-13 6.861151e-12    2021-11-01 ## 6 6.259417e-14 2.127537e-12    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - United Kingdom","text":"","code":"muller_ukbystate_mfit <- PlotMullerDailyPrevalence(fit_uk_multi_predsbystate, ncol = 3) muller_ukbystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_USA.html","id":"load-preprocessed-data","dir":"Articles","previous_headings":"","what":"Load preprocessed data","title":"Multinomial modeling - USA","text":"load qs object created metadata tar GISAID faster loading. See Introduction vignette see object created.","code":"date <- \"2022_06_13\" gisaid_metadata <- qs::qread(file = paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", date, \".qs\")) # filter our sequences from USA gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>% arrange(State, MonthYearCollected) gisaid_usa$State <- CleanAmericanStates(gisaid_usa$State) gisaid_usa <- gisaid_usa %>% filter(State %in% datasets::state.name)"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_USA.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Load preprocessed data","what":"Plot total sequenced cases","title":"Multinomial modeling - USA","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_usa, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"USA\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_USA.html","id":"get-vocs","dir":"Articles","previous_headings":"Load preprocessed data","what":"Get VOCs","title":"Multinomial modeling - USA","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_usa_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_usa_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 20]  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_usa_shared_dateweek <- SummarizeVariantsDatewise(gisaid_usa_collapsed_sel, by_state = TRUE) head(gisaid_usa_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alabama                18932 Delta                15 ## 2 Alabama                18933 Delta                 9 ## 3 Alabama                18934 Delta                10 ## 4 Alabama                18935 Delta                 8 ## 5 Alabama                18935 Others                1 ## 6 Alabama                18936 Delta                 8 fit_usa_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_usa_shared_dateweek) ## # weights:  689 (624 variable) ## initial  value 4008767.045624  ## iter  10 value 821796.287323 ## iter  20 value 712667.629784 ## iter  30 value 701086.975784 ## iter  40 value 671311.670529 ## iter  50 value 639733.254411 ## iter  60 value 608255.876194 ## iter  70 value 601920.706722 ## iter  80 value 595257.639397 ## iter  90 value 589269.072618 ## iter 100 value 586132.400806 ## iter 110 value 584209.406929 ## iter 120 value 581928.301780 ## iter 130 value 578198.000374 ## iter 140 value 574662.704350 ## iter 150 value 571042.932166 ## iter 160 value 568580.760360 ## iter 170 value 566483.578968 ## iter 180 value 564939.905810 ## iter 190 value 564032.399864 ## iter 200 value 563601.459543 ## iter 210 value 563301.819649 ## iter 220 value 563106.236362 ## iter 230 value 562951.515469 ## iter 240 value 562717.203101 ## iter 250 value 562504.479592 ## iter 260 value 562183.811816 ## iter 270 value 561934.300856 ## iter 280 value 561674.980735 ## iter 290 value 561394.623603 ## iter 300 value 561127.807415 ## iter 310 value 560843.446963 ## iter 320 value 560642.437986 ## iter 330 value 560528.266465 ## iter 340 value 560417.902830 ## iter 350 value 560265.645629 ## iter 360 value 559974.257323 ## iter 370 value 559588.856589 ## iter 380 value 559128.223574 ## iter 390 value 558718.485881 ## iter 400 value 558504.694184 ## iter 410 value 558412.838649 ## iter 420 value 558312.127272 ## iter 430 value 558179.077702 ## iter 440 value 557827.703460 ## iter 450 value 557237.268108 ## iter 460 value 557140.565744 ## iter 470 value 557094.794484 ## iter 480 value 557070.565684 ## iter 490 value 557059.117186 ## iter 500 value 557049.611598 ## iter 510 value 557041.215086 ## iter 520 value 557035.397242 ## iter 530 value 557030.346151 ## final  value 557029.920756  ## converged head(fit_usa_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 Alabama 1.637393e-05 1.394781e-06 NA ## 2              BA.2                18932 Alabama 3.794782e-11 8.248265e-12 NA ## 3            BA.2.1                18932 Alabama 2.638526e-16 3.732871e-16 NA ## 4           BA.2.10                18932 Alabama 5.943555e-11 2.714141e-11 NA ## 5         BA.2.10.1                18932 Alabama 1.187516e-12 1.030154e-12 NA ## 6           BA.2.12                18932 Alabama 2.239878e-15 1.704396e-15 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1  1.364021e-05 1.910765e-05    2021-11-01 ## 2  2.178152e-11 5.411412e-11    2021-11-01 ## 3 -4.677766e-16 9.954818e-16    2021-11-01 ## 4  6.239355e-12 1.126317e-10    2021-11-01 ## 5 -8.315492e-13 3.206581e-12    2021-11-01 ## 6 -1.100678e-15 5.580433e-15    2021-11-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_USA.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - USA","text":"","code":"muller_usabystate_mfit <- PlotMullerDailyPrevalence(fit_usa_multi_predsbystate, ncol = 5) muller_usabystate_mfit ## Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Set3 is 12 ## Returning the palette you asked for with that many colors"},{"path":"http://saket-choudhary.me/covmuller/articles/SouthAfrica_contrast_India.html","id":"get-data","dir":"Articles","previous_headings":"","what":"Get data","title":"Compare growth in India and South Africa","text":"","code":"current_date <- \"2022_06_23\" fpath.tar <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".qs\") gisaid_metadata <- qs::qread(file = fpath.qs) gisaid_metadata <- FormatGISAIDMetadata(gisaid_metadata) %>% filter(pangolin_lineage != \"Unassigned\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"omicron-others\"]] <- omicron   custom_voc_mapping <- list(   `BA\\\\.1` = \"BA.1+\",   `BA\\\\.1\\\\.*` = \"BA.1+\",   `BA\\\\.2\\\\.10` = \"BA.2.10+\",   `BA\\\\.2\\\\.10\\\\.*` = \"BA.2.10+\",   `BA\\\\.2\\\\.12` = \"BA.2.12+\",   `BA\\\\.2\\\\.12\\\\.*` = \"BA.2.12+\",   `BA\\\\.2` = \"BA.2\",   `BA\\\\.3` = \"BA.3\",   `BA\\\\.4` = \"BA.4\",   `BA\\\\.5` = \"BA.5\" )  month_prevalence <- CollapseLineageToVOCs(   variant_df = gisaid_metadata,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE ) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL   confirmed.tmp <- COVID19::covid19(country = \"South Africa\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long_southafrica <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_metadata_2022 <- gisaid_metadata %>%   filter(MonthYearCollected >= \"Oct 2021\") %>%   filter(pangolin_lineage != \"\") %>%   filter(Country %in% c(\"South Africa\", \"India\"))   gisaid_southafrica <- gisaid_metadata_2022 %>% filter(Country == \"South Africa\") gisaid_southafrica$State <- \"South Africa\" gisaid_southafrica$Country <- \"X\"   gisaid_india <- gisaid_metadata_2022 %>% filter(Country == \"India\") gisaid_india$State <- \"India\" gisaid_india$Country <- \"X\"  gisaid_sel <- rbind(gisaid_southafrica, gisaid_india) %>% arrange(State, MonthYearCollected)   gisaid_sel_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_sel,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )   gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_sel_dateweek <- SummarizeVariantsDatewise(gisaid_sel_collapsed, by_state = TRUE)   fit <- FitMultinomStatewiseDaily(gisaid_sel_dateweek) ## # weights:  50 (36 variable) ## initial  value 237688.951394  ## iter  10 value 76402.447143 ## iter  20 value 71558.147334 ## iter  30 value 60106.315599 ## iter  40 value 53112.025772 ## iter  50 value 52746.259092 ## iter  60 value 52642.994605 ## iter  70 value 52596.174228 ## iter  80 value 52575.983625 ## iter  90 value 52566.933703 ## iter 100 value 52556.833338 ## iter 110 value 52545.984448 ## iter 120 value 52544.754824 ## final  value 52544.546267  ## converged head(fit) ##   lineage_collapsed DateCollectedNumeric State         prob           SE df ## 1             Alpha                18901 India 1.067901e-04 1.056234e-04 NA ## 2             BA.1+                18901 India 1.882223e-06 3.108046e-07 NA ## 3              BA.2                18901 India 1.060575e-10 2.117504e-11 NA ## 4              BA.3                18901 India 6.616690e-09 4.090813e-09 NA ## 5              BA.4                18901 India 2.336427e-30 8.544824e-30 NA ## 6              BA.5                18901 India 3.519003e-32 2.115192e-31 NA ##       asymp.LCL    asymp.UCL DateCollected ## 1 -1.002280e-04 3.138082e-04    2021-10-01 ## 2  1.273057e-06 2.491388e-06    2021-10-01 ## 3  6.455523e-11 1.475599e-10    2021-10-01 ## 4 -1.401157e-09 1.463454e-08    2021-10-01 ## 5 -1.441112e-29 1.908397e-29    2021-10-01 ## 6 -3.793800e-31 4.497601e-31    2021-10-01 muller <- PlotMullerDailyPrevalence(fit) muller gisaid_southafrica <- gisaid_metadata_2022 %>% filter(Country == \"South Africa\")  gisaid_india <- gisaid_metadata_2022 %>% filter(Country == \"India\")  gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  collapsed_unique_variants <- union(unique(gisaid_india_collapsed$lineage_collapsed), unique(gisaid_southafrica_collapsed$lineage_collapsed))  colors_to_use <- c(\"#ebac23\",\"#b80058\",\"#008cf9\",\"#006e00\",\"#00bbad\",\"#d163e6\",\"#b24502\",\"#ff9287\",\"#5954d6\",\"#00c6f8\",\"#878500\",\"#00a76c\") names(colors_to_use) <- collapsed_unique_variants  gisaid_southafrica_weekwise <- SummarizeVariantsWeekwise(gisaid_southafrica_collapsed)   gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india_collapsed)  cases_southafrica <- confirmed_subset_dateweekwise_long_southafrica %>% filter(WeekYearCollected >= tsibble::yearweek(\"2021 W44\"))  cases_india <- confirmed_subset_dateweekwise_long_india %>% filter(WeekYearCollected >= tsibble::yearweek(\"2021 W44\")) preds_southafrica <- FitMultinomWeekly(gisaid_southafrica_weekwise, cases_southafrica) ## # weights:  36 (24 variable) ## initial  value 37383.578959  ## iter  10 value 13689.088433 ## iter  20 value 10937.294976 ## iter  30 value 10469.212237 ## iter  40 value 10365.604245 ## iter  50 value 10332.840688 ## iter  60 value 10330.283550 ## iter  70 value 10316.857026 ## iter  80 value 10313.639828 ## iter  90 value 10312.799993 ## final  value 10312.663326  ## converged preds_india <- FitMultinomWeekly(gisaid_india_weekwise, cases_india) ## # weights:  36 (24 variable) ## initial  value 189429.322486  ## iter  10 value 53201.790847 ## iter  20 value 47007.131992 ## iter  30 value 42517.823899 ## iter  40 value 42394.803379 ## iter  50 value 42370.005201 ## iter  60 value 42360.698937 ## iter  70 value 42353.748243 ## iter  80 value 42350.616342 ## iter  90 value 42343.217528 ## final  value 42337.781396  ## converged sa_anim <- PlotVariantPrevalenceAnimated(preds_southafrica, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\", colors = colors_to_use) gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_compare.gif\"), animation = sa_anim)   india_anim <- PlotVariantPrevalenceAnimated(preds_india, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\", colors = colors_to_use) gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_compare.gif\"), animation = india_anim)  india_mgif <- magick::image_read(india_anim) southafrica_mgif <- magick::image_read(sa_anim)    final_gif <- image_append(c(india_mgif[1], southafrica_mgif[1])) for (i in 2:length(india_mgif)) {   combined <- image_append(c(india_mgif[i], southafrica_mgif[i]))   final_gif <- c(final_gif, combined) }  gganimate::anim_save(filename = here::here(\"docs/articles/SA_IN_animated.gif\"), animation = final_gif)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-monthly-cases-for-aizawl","dir":"Articles","previous_headings":"","what":"Get monthly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Aizawl\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State   District value ##   <yearmon> <chr>   <chr>    <dbl> ## 1 Apr 2020  Mizoram Aizawl       1 ## 2 May 2020  Mizoram Aizawl       0 ## 3 Jun 2020  Mizoram Aizawl      46 ## 4 Jul 2020  Mizoram Aizawl     190 ## 5 Aug 2020  Mizoram Aizawl     362 ## 6 Sep 2020  Mizoram Aizawl     770"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"plot-monthly-cases-for-aizawl","dir":"Articles","previous_headings":"Get monthly cases for Aizawl","what":"Plot monthly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Aizawl (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-weekly-cases-for-aizawl","dir":"Articles","previous_headings":"","what":"Get weekly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Aizawl\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Aizawl (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"overall-how-much-has-aizawl-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Aizawl","what":"Overall, how much has Aizawl sequenced over months?","title":"Animation of projected weekly cases - Aizawl (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- 'Confirmed'  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long =  chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Aizawl (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Aizawl (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Aizawl\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Aizawl\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  24 (15 variable) ## initial  value 7374.881975  ## iter  10 value 783.050219 ## iter  20 value 715.295055 ## iter  30 value 709.176445 ## iter  40 value 707.825594 ## iter  50 value 705.899928 ## iter  60 value 704.071145 ## iter  70 value 703.711274 ## iter  80 value 703.652189 ## iter  90 value 703.458387 ## iter 100 value 703.444590 ## iter 110 value 703.369971 ## iter 120 value 703.315363 ## iter 130 value 703.293181 ## iter 140 value 703.240242 ## iter 150 value 703.171403 ## iter 160 value 703.152697 ## iter 170 value 703.121573 ## iter 180 value 703.042093 ## iter 190 value 703.008743 ## iter 200 value 702.963220 ## iter 210 value 702.872569 ## iter 220 value 702.856110 ## iter 230 value 702.839803 ## iter 240 value 702.748302 ## iter 250 value 702.707888 ## iter 260 value 702.668191 ## iter 270 value 702.570106 ## iter 280 value 702.225248 ## iter 290 value 702.055776 ## iter 300 value 701.856035 ## iter 310 value 701.742590 ## final  value 701.742096  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Aizawl\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Aizawl\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  20 (12 variable) ## initial  value 1730.145756  ## iter  10 value 676.979733 ## iter  20 value 655.486213 ## iter  30 value 651.507990 ## iter  40 value 651.404955 ## final  value 651.394652  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Aizawl\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Aizawl\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  20 (12 variable) ## initial  value 1730.145756  ## iter  10 value 676.979733 ## iter  20 value 655.486213 ## iter  30 value 651.507990 ## iter  40 value 651.404955 ## final  value 651.394652  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) head(Bengaluru_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [3] ##   MonthYear State     District        value ##   <yearmon> <chr>     <chr>           <dbl> ## 1 Apr 2020  Karnataka Bengaluru Rural     6 ## 2 Apr 2020  Karnataka Bengaluru Urban   141 ## 3 May 2020  Karnataka Bengaluru Rural     9 ## 4 May 2020  Karnataka Bengaluru Urban   218 ## 5 Jun 2020  Karnataka Bengaluru Rural   114 ## 6 Jun 2020  Karnataka Bengaluru Urban  4196"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"plot-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"Get monthly cases for Bengaluru","what":"Plot monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"p1 <- BarPlot(Bengaluru_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Bengaluru (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-weekly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get weekly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Bengaluru\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Bengaluru_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"overall-how-much-has-bengaluru-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Bengaluru","what":"Overall, how much has Bengaluru sequenced over months?","title":"Animation of projected weekly cases - Bengaluru (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases %>% select(MonthYear, value) Bengaluru_monthly_cases_tmp$State <- \"India\" Bengaluru_monthly_cases_tmp$type <- \"Confirmed\"  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>% group_by(MonthYear, State, type) %>% summarise(value = sum(value))  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Bengaluru_seq_stats,   confirmed_long = Bengaluru_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Bengaluru (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Bengaluru\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 19037.287314  ## iter  10 value 6303.120552 ## iter  20 value 4170.777527 ## iter  30 value 4078.843941 ## iter  40 value 4045.447137 ## iter  50 value 4039.413261 ## iter  60 value 4035.816760 ## iter  70 value 4024.250963 ## iter  80 value 4008.095652 ## iter  90 value 4002.440207 ## iter 100 value 3998.241950 ## iter 110 value 3997.103188 ## iter 120 value 3996.790315 ## iter 130 value 3996.417775 ## iter 140 value 3996.366111 ## iter 150 value 3996.358535 ## iter 160 value 3996.310012 ## iter 170 value 3996.234891 ## iter 180 value 3996.105314 ## iter 190 value 3996.080644 ## iter 200 value 3996.055390 ## iter 210 value 3996.042294 ## iter 220 value 3996.015192 ## iter 230 value 3996.005343 ## iter 240 value 3995.995461 ## iter 250 value 3995.981532 ## iter 260 value 3995.936698 ## iter 270 value 3995.924849 ## iter 280 value 3995.894620 ## iter 290 value 3995.882470 ## iter 300 value 3995.864349 ## iter 310 value 3995.820183 ## iter 320 value 3995.794504 ## iter 330 value 3995.771967 ## iter 340 value 3995.765504 ## iter 350 value 3995.746774 ## iter 360 value 3995.741156 ## iter 370 value 3995.733199 ## iter 380 value 3995.705351 ## iter 390 value 3995.658044 ## iter 400 value 3995.631763 ## iter 410 value 3995.614206 ## iter 420 value 3995.609606 ## iter 430 value 3995.599841 ## iter 440 value 3995.587823 ## iter 450 value 3995.582781 ## iter 460 value 3995.573991 ## iter 470 value 3995.551699 ## iter 480 value 3995.515447 ## iter 490 value 3995.500335 ## iter 500 value 3995.490889 ## iter 510 value 3995.476847 ## final  value 3995.472813  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Oct 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 11167.578345  ## iter  10 value 4098.565574 ## iter  20 value 3827.660179 ## iter  30 value 3821.983857 ## iter  40 value 3807.357145 ## iter  50 value 3803.162146 ## iter  60 value 3801.547885 ## iter  70 value 3801.503738 ## final  value 3801.501660  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Oct 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 11167.578345  ## iter  10 value 4098.565574 ## iter  20 value 3827.660179 ## iter  30 value 3821.983857 ## iter  40 value 3807.357145 ## iter  50 value 3803.162146 ## iter  60 value 3801.547885 ## iter  70 value 3801.503738 ## final  value 3801.501660  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"] gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- \"Unknown\"   gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"state-of-origin-of-ba4ba-5-sequences","dir":"Articles","previous_headings":"","what":"State of origin of BA/4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>% filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>% pull(State) %>% table() %>% as.data.frame() %>% arrange(desc(Freq)) %>% DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"city-of-origin-of-ba-4ba-5-sequences","dir":"Articles","previous_headings":"","what":"City of origin of BA.4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>% filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>% pull(custom_city) %>% table() %>% as.data.frame() %>% arrange(desc(Freq)) %>% DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-monthly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Chennai\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State      District value ##   <yearmon> <chr>      <chr>    <dbl> ## 1 Apr 2020  Tamil Nadu Chennai    910 ## 2 May 2020  Tamil Nadu Chennai  13889 ## 3 Jun 2020  Tamil Nadu Chennai  43528 ## 4 Jul 2020  Tamil Nadu Chennai  41467 ## 5 Aug 2020  Tamil Nadu Chennai  35803 ## 6 Sep 2020  Tamil Nadu Chennai  31779"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"plot-monthly-cases-for-chennai","dir":"Articles","previous_headings":"Get monthly cases for Chennai","what":"Plot monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Chennai (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-weekly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Chennai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"overall-how-much-has-chennai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Chennai","what":"Overall, how much has Chennai sequenced over months?","title":"Animation of projected weekly cases - Chennai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- 'Confirmed'  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long =  chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Chennai (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Chennai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  48 (33 variable) ## initial  value 9800.471827  ## iter  10 value 4814.309823 ## iter  20 value 3511.369870 ## iter  30 value 3116.689300 ## iter  40 value 3061.169091 ## iter  50 value 3055.044267 ## iter  60 value 3044.502906 ## iter  70 value 3033.566429 ## iter  80 value 3032.234547 ## iter  90 value 3025.114347 ## iter 100 value 3024.311942 ## iter 110 value 3022.614252 ## iter 120 value 3019.890450 ## iter 130 value 3015.987680 ## iter 140 value 3015.834678 ## iter 150 value 3015.724126 ## iter 160 value 3014.786321 ## iter 170 value 3014.167782 ## iter 180 value 3013.245815 ## iter 190 value 3012.949666 ## iter 200 value 3011.779214 ## iter 210 value 3009.544368 ## iter 220 value 3009.107982 ## iter 230 value 3007.243243 ## iter 240 value 3006.984498 ## iter 250 value 3006.873345 ## iter 260 value 3006.363949 ## final  value 3005.380840  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 7761.986998  ## iter  10 value 3526.058125 ## iter  20 value 2880.904501 ## iter  30 value 2802.187789 ## iter  40 value 2792.078408 ## iter  50 value 2790.178831 ## iter  60 value 2789.602075 ## iter  70 value 2789.424906 ## iter  80 value 2789.236703 ## iter  90 value 2788.958132 ## iter 100 value 2788.733781 ## iter 110 value 2787.905856 ## iter 120 value 2787.826182 ## iter 130 value 2787.458856 ## iter 140 value 2787.388946 ## iter 150 value 2787.369719 ## iter 160 value 2787.315607 ## iter 170 value 2786.757297 ## iter 180 value 2786.674277 ## iter 190 value 2786.321067 ## iter 200 value 2786.201129 ## iter 210 value 2786.181526 ## iter 220 value 2786.042339 ## iter 230 value 2786.007482 ## iter 240 value 2785.992195 ## iter 250 value 2785.946106 ## iter 260 value 2785.935163 ## iter 270 value 2785.929250 ## iter 280 value 2785.924785 ## iter 290 value 2785.907798 ## iter 300 value 2785.644912 ## iter 310 value 2785.640536 ## iter 320 value 2785.638357 ## iter 330 value 2785.632763 ## iter 340 value 2785.560571 ## iter 350 value 2785.527314 ## final  value 2785.516415  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Chennai\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 7761.986998  ## iter  10 value 3526.058125 ## iter  20 value 2880.904501 ## iter  30 value 2802.187789 ## iter  40 value 2792.078408 ## iter  50 value 2790.178831 ## iter  60 value 2789.602075 ## iter  70 value 2789.424906 ## iter  80 value 2789.236703 ## iter  90 value 2788.958132 ## iter 100 value 2788.733781 ## iter 110 value 2787.905856 ## iter 120 value 2787.826182 ## iter 130 value 2787.458856 ## iter 140 value 2787.388946 ## iter 150 value 2787.369719 ## iter 160 value 2787.315607 ## iter 170 value 2786.757297 ## iter 180 value 2786.674277 ## iter 190 value 2786.321067 ## iter 200 value 2786.201129 ## iter 210 value 2786.181526 ## iter 220 value 2786.042339 ## iter 230 value 2786.007482 ## iter 240 value 2785.992195 ## iter 250 value 2785.946106 ## iter 260 value 2785.935163 ## iter 270 value 2785.929250 ## iter 280 value 2785.924785 ## iter 290 value 2785.907798 ## iter 300 value 2785.644912 ## iter 310 value 2785.640536 ## iter 320 value 2785.638357 ## iter 330 value 2785.632763 ## iter 340 value 2785.560571 ## iter 350 value 2785.527314 ## final  value 2785.516415  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-monthly-cases-for-delhi","dir":"Articles","previous_headings":"","what":"Get monthly cases for Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Delhi\") head(NewDelhi_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State District  value ##   <yearmon> <chr> <chr>     <dbl> ## 1 Apr 2020  Delhi Delhi      3515 ## 2 May 2020  Delhi Delhi     16329 ## 3 Jun 2020  Delhi Delhi     67516 ## 4 Jul 2020  Delhi Delhi     48238 ## 5 Aug 2020  Delhi Delhi     39150 ## 6 Sep 2020  Delhi Delhi    104967"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"plot-monthly-cases-for-new-delhi","dir":"Articles","previous_headings":"Get monthly cases for Delhi","what":"Plot monthly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"p1 <- BarPlot(NewDelhi_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - New Delhi (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-weekly-cases-for-new-delhi","dir":"Articles","previous_headings":"","what":"Get weekly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"New Delhi\"), rename_country_as_state = TRUE)   p2 <- BarPlot(NewDelhi_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"overall-how-much-has-new-delhi-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for New Delhi","what":"Overall, how much has New Delhi sequenced over months?","title":"Animation of projected weekly cases - New Delhi (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases %>% select(MonthYear, value) NewDelhi_monthly_cases_cases_tmp$State <- \"India\" NewDelhi_monthly_cases_cases_tmp$type <- \"Confirmed\"  NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = NewDelhi_seq_stats,   confirmed_long = NewDelhi_monthly_cases_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New Delhi (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"New Delhi\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Delhi\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 3695.167620  ## iter  10 value 1376.690338 ## iter  20 value 1037.365074 ## iter  30 value 945.884886 ## iter  40 value 923.013763 ## iter  50 value 919.915783 ## iter  60 value 914.335875 ## iter  70 value 909.076262 ## iter  80 value 907.823898 ## iter  90 value 906.667579 ## iter 100 value 906.402037 ## iter 110 value 906.319905 ## iter 120 value 905.903921 ## iter 130 value 905.860903 ## iter 130 value 905.860898 ## final  value 905.860898  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Delhi\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Oct 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 1381.446551  ## iter  10 value 640.465582 ## iter  20 value 573.330094 ## iter  30 value 567.861608 ## iter  40 value 567.319925 ## iter  50 value 566.190308 ## iter  60 value 565.997401 ## iter  70 value 565.986765 ## iter  80 value 565.977909 ## iter  90 value 565.954341 ## iter 100 value 565.929345 ## iter 110 value 565.907603 ## iter 120 value 565.900391 ## final  value 565.893310  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Delhi\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Oct 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 1381.446551  ## iter  10 value 640.465582 ## iter  20 value 573.330094 ## iter  30 value 567.861608 ## iter  40 value 567.319925 ## iter  50 value 566.190308 ## iter  60 value 565.997401 ## iter  70 value 565.986765 ## iter  80 value 565.977909 ## iter  90 value 565.954341 ## iter 100 value 565.929345 ## iter 110 value 565.907603 ## iter 120 value 565.900391 ## final  value 565.893310  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-variants-data-for-germany","dir":"Articles","previous_headings":"","what":"Get variants data for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_germany <- gisaid_metadata %>%   filter(Country == \"Germany\") %>%   filter(Host == \"Human\") # format metadata gisaid_germany <- FormatGISAIDMetadata(gisaid_germany) %>% filter(State!=\"\") %>% filter(pangolin_lineage!=\"Unassigned\")  gisaid_germany <- gisaid_germany %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL   custom_voc_mapping <- list(   `BA.1.17` = \"BA.1.17\",   `BA.1.14` = \"BA.1.14\",   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_germany <- gisaid_germany %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_germany <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-weekly-cases-for-germany","dir":"Articles","previous_headings":"","what":"Get weekly cases for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"confirmed.tmp <- COVID19::covid19(country = \"Germany\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"Germany\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Germany","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  76 (54 variable) ## initial  value 1927409.144690  ## iter  10 value 865300.401519 ## iter  20 value 589166.656753 ## iter  30 value 564252.697723 ## iter  40 value 498314.325623 ## iter  50 value 435907.831016 ## iter  60 value 414514.078933 ## iter  70 value 410762.768425 ## iter  80 value 404903.490221 ## iter  90 value 402857.119355 ## iter 100 value 401328.451372 ## iter 110 value 400675.161838 ## iter 120 value 400605.813207 ## iter 130 value 400202.200248 ## iter 140 value 399763.183796 ## iter 150 value 399368.476826 ## iter 160 value 398964.801350 ## iter 170 value 398568.049056 ## iter 180 value 398439.887295 ## iter 190 value 398210.394834 ## iter 200 value 398057.156104 ## iter 210 value 397932.876018 ## final  value 397875.517555  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_subset <- gisaid_germany %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany_subset)  voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  56 (39 variable) ## initial  value 1111639.562725  ## iter  10 value 407675.556770 ## iter  20 value 372279.211950 ## iter  30 value 342062.131194 ## iter  40 value 329394.683479 ## iter  50 value 323537.495171 ## iter  60 value 323206.439488 ## iter  70 value 323110.378104 ## iter  80 value 323073.550924 ## iter  90 value 323071.571191 ## iter 100 value 323065.036375 ## iter 110 value 323051.115694 ## iter 120 value 323014.615916 ## iter 130 value 322999.950595 ## iter 130 value 322999.947769 ## iter 130 value 322999.947769 ## final  value 322999.947769  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - India","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases - India","text":"","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - India","text":"Look cases October, 2021 :  Look cases last weeks:","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  48 (33 variable) ## initial  value 437162.172177  ## iter  10 value 224237.222829 ## iter  20 value 169030.398967 ## iter  30 value 126738.739556 ## iter  40 value 118052.682874 ## iter  50 value 116508.691385 ## iter  60 value 115867.387533 ## iter  70 value 115677.705734 ## iter  80 value 115659.740280 ## iter  90 value 115515.926537 ## iter 100 value 115332.259195 ## iter 110 value 115202.029261 ## iter 120 value 115057.955424 ## iter 130 value 114986.275116 ## final  value 114934.529515  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 166710.020356  ## iter  10 value 87302.789090 ## iter  20 value 78217.838643 ## iter  30 value 74596.846096 ## iter  40 value 74330.139768 ## iter  50 value 74299.047604 ## iter  60 value 74298.064399 ## iter  70 value 74291.601954 ## iter  80 value 74277.691772 ## final  value 74277.668527  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Mar 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 15174.035763  ## iter  10 value 4785.399551 ## iter  20 value 4142.624388 ## iter  30 value 4080.550004 ## iter  40 value 4072.405664 ## iter  50 value 4071.351250 ## iter  60 value 4069.122952 ## iter  70 value 4069.016899 ## iter  80 value 4068.720947 ## iter  90 value 4068.591777 ## iter 100 value 4068.511850 ## final  value 4068.511649  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Jaipur\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State     District value ##   <yearmon> <chr>     <chr>    <dbl> ## 1 Apr 2020  Rajasthan Jaipur     907 ## 2 May 2020  Rajasthan Jaipur    1084 ## 3 Jun 2020  Rajasthan Jaipur    1327 ## 4 Jul 2020  Rajasthan Jaipur    2100 ## 5 Aug 2020  Rajasthan Jaipur    5373 ## 6 Sep 2020  Rajasthan Jaipur   10697"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"plot-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"Get monthly cases for Jaipur","what":"Plot monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Jaipur (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-weekly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get weekly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Jaipur\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"overall-how-much-has-jaipur-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Jaipur","what":"Overall, how much has Jaipur sequenced over months?","title":"Animation of projected weekly cases - Jaipur (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- 'Confirmed'  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long =  chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Jaipur (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Jaipur\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 8043.279883  ## iter  10 value 4465.852461 ## iter  20 value 3389.099026 ## iter  30 value 3285.651897 ## iter  40 value 3280.755767 ## iter  50 value 3280.625694 ## iter  60 value 3280.376872 ## iter  70 value 3278.920977 ## iter  80 value 3272.454815 ## final  value 3271.074641  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 6446.800324  ## iter  10 value 3218.627889 ## iter  20 value 2925.625838 ## iter  30 value 2917.847548 ## iter  40 value 2917.254586 ## iter  50 value 2916.925229 ## iter  60 value 2916.267161 ## iter  70 value 2916.180079 ## final  value 2916.179605  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Jaipur\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  28 (18 variable) ## initial  value 6446.800324  ## iter  10 value 3218.627889 ## iter  20 value 2925.625838 ## iter  30 value 2917.847548 ## iter  40 value 2917.254586 ## iter  50 value 2916.925229 ## iter  60 value 2916.267161 ## iter  70 value 2916.180079 ## final  value 2916.179605  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Mumbai\") head(Mumbai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  Maharashtra Mumbai    7061 ## 2 May 2020  Maharashtra Mumbai   32625 ## 3 Jun 2020  Maharashtra Mumbai   37972 ## 4 Jul 2020  Maharashtra Mumbai   36626 ## 5 Aug 2020  Maharashtra Mumbai   32340 ## 6 Sep 2020  Maharashtra Mumbai   59463"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"plot-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"Get monthly cases for Mumbai","what":"Plot monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"p1 <- BarPlot(Mumbai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Mumbai (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-weekly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Mumbai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Mumbai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"overall-how-much-has-mumbai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Mumbai","what":"Overall, how much has Mumbai sequenced over months?","title":"Animation of projected weekly cases - Mumbai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases %>% select(MonthYear, value) Mumbai_monthly_cases_tmp$State <- \"India\" Mumbai_monthly_cases_tmp$type <- 'Confirmed'  Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Mumbai_seq_stats,   confirmed_long =  Mumbai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Mumbai (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Mumbai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  40 (27 variable) ## initial  value 9332.377382  ## iter  10 value 2946.641415 ## iter  20 value 2099.676723 ## iter  30 value 2018.721175 ## iter  40 value 2008.089154 ## iter  50 value 2004.858719 ## iter  60 value 2004.094999 ## iter  70 value 2003.551321 ## iter  80 value 2001.269004 ## iter  90 value 1990.535583 ## iter 100 value 1986.542587 ## iter 110 value 1983.187521 ## iter 120 value 1982.617969 ## iter 130 value 1982.029809 ## iter 140 value 1980.647359 ## iter 150 value 1979.698014 ## iter 160 value 1978.522951 ## iter 170 value 1970.068718 ## iter 180 value 1969.399447 ## iter 190 value 1968.679293 ## iter 200 value 1965.635917 ## iter 210 value 1964.990403 ## iter 220 value 1964.200325 ## iter 230 value 1964.163348 ## iter 240 value 1964.111270 ## iter 250 value 1963.142209 ## iter 260 value 1962.618011 ## iter 270 value 1961.521873 ## iter 280 value 1961.050952 ## iter 290 value 1960.829509 ## iter 300 value 1960.298430 ## iter 310 value 1960.028371 ## iter 320 value 1959.094691 ## iter 330 value 1958.896206 ## iter 340 value 1958.669156 ## iter 350 value 1958.620521 ## iter 360 value 1958.322191 ## iter 370 value 1958.107461 ## iter 380 value 1957.476962 ## final  value 1956.907223  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 5031.644282  ## iter  10 value 2005.720507 ## iter  20 value 1714.227004 ## iter  30 value 1701.726068 ## iter  40 value 1700.263108 ## iter  50 value 1699.978043 ## iter  60 value 1699.896318 ## iter  70 value 1699.667033 ## iter  80 value 1699.310258 ## iter  90 value 1698.729660 ## iter 100 value 1698.080487 ## iter 110 value 1697.812868 ## iter 120 value 1697.577889 ## iter 130 value 1697.517465 ## iter 140 value 1697.492550 ## iter 150 value 1697.477388 ## iter 160 value 1697.471363 ## iter 170 value 1697.449468 ## iter 180 value 1697.427791 ## iter 190 value 1697.372179 ## iter 200 value 1697.130902 ## iter 210 value 1696.933686 ## iter 220 value 1696.887484 ## iter 230 value 1696.873018 ## iter 240 value 1696.855718 ## iter 250 value 1696.838064 ## iter 260 value 1696.826335 ## iter 270 value 1696.818224 ## iter 280 value 1696.800091 ## iter 290 value 1696.765152 ## iter 300 value 1696.649740 ## iter 310 value 1696.576901 ## iter 320 value 1696.558079 ## iter 330 value 1696.543394 ## iter 340 value 1696.537338 ## final  value 1696.531568  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Mumbai\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 5031.644282  ## iter  10 value 2005.720507 ## iter  20 value 1714.227004 ## iter  30 value 1701.726068 ## iter  40 value 1700.263108 ## iter  50 value 1699.978043 ## iter  60 value 1699.896318 ## iter  70 value 1699.667033 ## iter  80 value 1699.310258 ## iter  90 value 1698.729660 ## iter 100 value 1698.080487 ## iter 110 value 1697.812868 ## iter 120 value 1697.577889 ## iter 130 value 1697.517465 ## iter 140 value 1697.492550 ## iter 150 value 1697.477388 ## iter 160 value 1697.471363 ## iter 170 value 1697.449468 ## iter 180 value 1697.427791 ## iter 190 value 1697.372179 ## iter 200 value 1697.130902 ## iter 210 value 1696.933686 ## iter 220 value 1696.887484 ## iter 230 value 1696.873018 ## iter 240 value 1696.855718 ## iter 250 value 1696.838064 ## iter 260 value 1696.826335 ## iter 270 value 1696.818224 ## iter 280 value 1696.800091 ## iter 290 value 1696.765152 ## iter 300 value 1696.649740 ## iter 310 value 1696.576901 ## iter 320 value 1696.558079 ## iter 330 value 1696.543394 ## iter 340 value 1696.537338 ## final  value 1696.531568  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York City","text":"","code":"counties <- c(\"New York\", \"New York City\", \"New York County\", \"Queens County\", \"Bronx County\", \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Richmond County\")  # The Bronx is Bronx County (ANSI / FIPS 36005) # Brooklyn is Kings County (ANSI / FIPS 36047) # Manhattan is New York County (ANSI / FIPS 36061) # Queens is Queens County (ANSI / FIPS 36081) # Staten Island is Richmond County (ANSI / FIPS 36085) fips.list <- c(36005, 36047, 36061, 36081, 36085)  gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")   gisaid_NYC <- gisaid_NY %>% filter(District %in% counties)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_NYC <- gisaid_NYC %>% filter(pangolin_lineage != \"None\")  gisaid_NYC <- CollapseLineageToVOCs(   variant_df = gisaid_NYC,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York City","text":"","code":"all_county_cases <- refresh_covid19nytimes_counties()  confirmed <- all_county_cases %>%   filter(location == \"New York City,New York\") %>%   filter(data_type == \"cases_total\") %>%   arrange(date)  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York City","text":"Look cases October, 2021 :  Look cases Jan, 2022:","code":"voc_to_keep <- gisaid_NYC_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NYC_weekwise <- gisaid_NYC_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NYC_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  68 (48 variable) ## initial  value 290903.013314  ## iter  10 value 169433.369634 ## iter  20 value 110782.940188 ## iter  30 value 97363.721785 ## iter  40 value 84953.121217 ## iter  50 value 77678.287506 ## iter  60 value 75615.315457 ## iter  70 value 75182.495500 ## iter  80 value 75116.447014 ## iter  90 value 74962.987904 ## iter 100 value 74884.111453 ## iter 110 value 74877.560114 ## iter 120 value 74838.823516 ## iter 130 value 74788.180027 ## iter 140 value 74768.299792 ## iter 150 value 74759.328565 ## iter 160 value 74666.747980 ## iter 170 value 74358.614982 ## iter 180 value 74326.364420 ## iter 190 value 74242.225879 ## iter 200 value 74238.398321 ## iter 210 value 74237.715709 ## iter 220 value 74236.637717 ## iter 230 value 74213.674503 ## iter 240 value 74155.009330 ## iter 250 value 74146.075138 ## iter 260 value 74110.858277 ## iter 270 value 74071.916701 ## iter 280 value 74064.330486 ## iter 290 value 74038.369313 ## iter 300 value 74027.845203 ## iter 310 value 74026.856838 ## iter 320 value 74021.436030 ## iter 330 value 74019.241825 ## iter 340 value 74008.735157 ## iter 350 value 74001.275360 ## iter 360 value 73987.705362 ## iter 370 value 73971.305200 ## iter 380 value 73963.994086 ## iter 390 value 73919.153263 ## iter 400 value 73916.239898 ## iter 410 value 73913.933456 ## iter 420 value 73910.007307 ## iter 430 value 73907.600244 ## iter 440 value 73903.983071 ## iter 450 value 73902.034351 ## iter 460 value 73900.476471 ## iter 470 value 73899.419948 ## iter 480 value 73895.633423 ## iter 490 value 73893.625804 ## final  value 73893.613669  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\", date_breaks = \"14 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_subset <- gisaid_NYC %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC_subset)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 145180.671014  ## iter  10 value 70005.150004 ## iter  20 value 57439.632082 ## iter  30 value 48446.287190 ## iter  40 value 45656.902959 ## iter  50 value 45532.926112 ## iter  60 value 45507.296845 ## iter  70 value 45499.615110 ## iter  80 value 45498.690670 ## iter  90 value 45497.677656 ## iter 100 value 45496.570991 ## iter 110 value 45495.042642 ## iter 120 value 45494.796914 ## iter 130 value 45493.939154 ## iter 130 value 45493.938803 ## iter 130 value 45493.938803 ## final  value 45493.938803  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear >= \"Jan 2022\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_subset <- gisaid_NYC %>% filter(MonthYearCollected >= \"Jan 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC_subset)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 110702.591248  ## iter  10 value 53345.388945 ## iter  20 value 46276.525288 ## iter  30 value 40581.397171 ## iter  40 value 39340.329591 ## iter  50 value 39095.890153 ## iter  60 value 39065.343711 ## iter  70 value 39044.985630 ## iter  80 value 39044.178400 ## iter  90 value 39041.401523 ## iter 100 value 39026.675138 ## iter 110 value 39022.966817 ## iter 120 value 39021.732937 ## iter 130 value 39021.656042 ## final  value 39021.655263  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York State","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_NY <- gisaid_NY %>% filter(pangolin_lineage != \"None\")  gisaid_NY <- CollapseLineageToVOCs(   variant_df = gisaid_NY,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York State","text":"","code":"all_state_cases <- refresh_covid19nytimes_states()  confirmed <- all_state_cases %>%   filter(location == \"New York\") %>%   filter(data_type == \"cases_total\") %>%   arrange(date)  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York State","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_NY_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NY_weekwise <- gisaid_NY_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NY_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  68 (48 variable) ## initial  value 621502.178792  ## iter  10 value 351227.995515 ## iter  20 value 272029.747470 ## iter  30 value 248484.039424 ## iter  40 value 206006.576436 ## iter  50 value 167802.908863 ## iter  60 value 149248.303888 ## iter  70 value 148166.452622 ## iter  80 value 147789.092298 ## iter  90 value 147269.621512 ## iter 100 value 147218.015573 ## iter 110 value 147212.890086 ## iter 120 value 147166.338433 ## iter 130 value 147094.224396 ## iter 140 value 147066.551842 ## iter 150 value 146990.021503 ## iter 160 value 146944.331526 ## iter 170 value 146798.154877 ## iter 180 value 146666.913681 ## iter 190 value 146650.845952 ## iter 200 value 146533.952428 ## iter 210 value 146533.032949 ## iter 220 value 146517.348556 ## iter 230 value 146488.178306 ## iter 240 value 146443.611605 ## iter 250 value 146436.245054 ## iter 260 value 146412.037145 ## iter 270 value 146391.444724 ## iter 280 value 146371.248226 ## iter 290 value 146334.502261 ## final  value 146315.190092  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY <- gisaid_NY %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 309805.736562  ## iter  10 value 122417.637601 ## iter  20 value 116787.950306 ## iter  30 value 102194.708831 ## iter  40 value 95688.834888 ## iter  50 value 95226.357992 ## iter  60 value 95073.608526 ## iter  70 value 95018.424499 ## iter  80 value 95016.684760 ## iter  90 value 95009.373796 ## iter 100 value 95004.485492 ## iter 110 value 95001.192341 ## iter 120 value 94999.359327 ## final  value 94998.327943  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-monthly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Pune\") head(pune_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District  value ##   <yearmon> <chr>       <chr>     <dbl> ## 1 Apr 2020  Maharashtra Pune       1248 ## 2 May 2020  Maharashtra Pune       6671 ## 3 Jun 2020  Maharashtra Pune      14408 ## 4 Jul 2020  Maharashtra Pune      66904 ## 5 Aug 2020  Maharashtra Pune      85874 ## 6 Sep 2020  Maharashtra Pune     117959"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"plot-monthly-cases-for-pune","dir":"Articles","previous_headings":"Get monthly cases for Pune","what":"Plot monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"p1 <- BarPlot(pune_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Pune (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-weekly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get weekly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Pune\"), rename_country_as_state = TRUE)   p2 <- BarPlot(pune_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"overall-how-much-has-pune-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Pune","what":"Overall, how much has Pune sequenced over months?","title":"Animation of projected weekly cases - Pune (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"pune_monthly_cases_tmp <- pune_monthly_cases %>% select(MonthYear, value) pune_monthly_cases_tmp$State <- \"India\" pune_monthly_cases_tmp$type <- 'Confirmed'  pune_monthly_cases_tmp <- pune_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = pune_seq_stats,   confirmed_long =  pune_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Pune (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Pune\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Pune\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 18996.014941  ## iter  10 value 7472.136692 ## iter  20 value 5275.712110 ## iter  30 value 4629.309359 ## iter  40 value 4502.729395 ## iter  50 value 4474.503689 ## iter  60 value 4459.700553 ## iter  70 value 4454.813694 ## iter  80 value 4452.021652 ## iter  90 value 4451.588374 ## iter 100 value 4450.607887 ## iter 110 value 4448.001754 ## iter 120 value 4446.567660 ## iter 130 value 4442.230532 ## iter 140 value 4435.909165 ## final  value 4435.168787  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Pune\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Pune\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 7507.810099  ## iter  10 value 2840.936740 ## iter  20 value 2524.816675 ## iter  30 value 2504.230894 ## iter  40 value 2494.955607 ## iter  50 value 2490.481749 ## iter  60 value 2487.644642 ## iter  70 value 2486.839267 ## iter  80 value 2486.358245 ## iter  90 value 2485.582413 ## iter 100 value 2485.251944 ## iter 110 value 2484.917473 ## iter 120 value 2484.458735 ## iter 130 value 2484.276221 ## iter 140 value 2484.154923 ## iter 150 value 2483.885463 ## iter 160 value 2483.803705 ## iter 170 value 2483.577800 ## iter 180 value 2483.270001 ## iter 190 value 2483.032321 ## iter 200 value 2482.786996 ## iter 210 value 2482.704401 ## iter 220 value 2482.602604 ## iter 230 value 2482.558395 ## iter 240 value 2482.484234 ## iter 250 value 2482.450146 ## iter 260 value 2482.419235 ## iter 270 value 2482.355692 ## iter 280 value 2482.320680 ## iter 290 value 2482.271236 ## iter 300 value 2482.217803 ## iter 310 value 2482.161552 ## iter 320 value 2482.135031 ## iter 330 value 2482.078153 ## iter 340 value 2482.046158 ## iter 350 value 2482.014430 ## iter 360 value 2481.963971 ## final  value 2481.901666  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Pune\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Pune\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 7507.810099  ## iter  10 value 2840.936740 ## iter  20 value 2524.816675 ## iter  30 value 2504.230894 ## iter  40 value 2494.955607 ## iter  50 value 2490.481749 ## iter  60 value 2487.644642 ## iter  70 value 2486.839267 ## iter  80 value 2486.358245 ## iter  90 value 2485.582413 ## iter 100 value 2485.251944 ## iter 110 value 2484.917473 ## iter 120 value 2484.458735 ## iter 130 value 2484.276221 ## iter 140 value 2484.154923 ## iter 150 value 2483.885463 ## iter 160 value 2483.803705 ## iter 170 value 2483.577800 ## iter 180 value 2483.270001 ## iter 190 value 2483.032321 ## iter 200 value 2482.786996 ## iter 210 value 2482.704401 ## iter 220 value 2482.602604 ## iter 230 value 2482.558395 ## iter 240 value 2482.484234 ## iter 250 value 2482.450146 ## iter 260 value 2482.419235 ## iter 270 value 2482.355692 ## iter 280 value 2482.320680 ## iter 290 value 2482.271236 ## iter 300 value 2482.217803 ## iter 310 value 2482.161552 ## iter 320 value 2482.135031 ## iter 330 value 2482.078153 ## iter 340 value 2482.046158 ## iter 350 value 2482.014430 ## iter 360 value 2481.963971 ## final  value 2481.901666  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-variants-data-for-south-africa","dir":"Articles","previous_headings":"","what":"Get variants data for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_sa <- gisaid_metadata %>%   filter(Country == \"South Africa\") %>%   filter(Host == \"Human\") # format metadata gisaid_sa <- FormatGISAIDMetadata(gisaid_sa) gisaid_sa$State <- CleanSouthAfricanStates(gisaid_sa$State)  gisaid_sa <- gisaid_sa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL   custom_voc_mapping <- list(   `BA.1.17` = \"BA.1.17\",   `BA.1.14` = \"BA.1.14\",   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_sa <- gisaid_sa %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_sa <- CollapseLineageToVOCs(   variant_df = gisaid_sa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-weekly-cases-for-south-africa","dir":"Articles","previous_headings":"","what":"Get weekly cases for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - South Africa","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 99738.055977  ## iter  10 value 42604.961497 ## iter  20 value 32555.298481 ## iter  30 value 24020.941616 ## iter  40 value 23085.373973 ## iter  50 value 23035.439218 ## iter  60 value 23000.238450 ## iter  70 value 22978.319817 ## iter  80 value 22967.891171 ## iter  90 value 22872.423296 ## iter 100 value 22842.843088 ## iter 110 value 22718.944676 ## iter 120 value 22634.693468 ## iter 130 value 22633.634058 ## iter 140 value 22630.248340 ## iter 150 value 22604.775599 ## iter 160 value 22594.817915 ## iter 170 value 22578.217841 ## iter 180 value 22556.676209 ## iter 190 value 22501.367125 ## iter 200 value 22494.007972 ## iter 210 value 22492.484157 ## iter 220 value 22489.575940 ## iter 230 value 22483.907352 ## iter 240 value 22479.876024 ## iter 250 value 22477.802111 ## iter 260 value 22477.755760 ## iter 270 value 22476.706038 ## iter 280 value 22475.804159 ## iter 290 value 22473.810999 ## iter 300 value 22472.369481 ## iter 310 value 22468.214315 ## iter 310 value 22468.214121 ## final  value 22468.211964  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_subset <- gisaid_sa %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa_subset)  voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  32 (21 variable) ## initial  value 33466.532172  ## iter  10 value 14113.949737 ## iter  20 value 11869.000358 ## iter  30 value 11550.923904 ## iter  40 value 11478.241016 ## iter  50 value 11464.305448 ## iter  60 value 11439.966205 ## iter  70 value 11430.147845 ## final  value 11429.252220  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-variants-data-for-uk","dir":"Articles","previous_headings":"","what":"Get variants data for UK","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_uk <- gisaid_metadata %>%   filter(Country == \"United Kingdom\") %>%   filter(Host == \"Human\") # format metadata gisaid_uk <- FormatGISAIDMetadata(gisaid_uk)  gisaid_uk <- gisaid_uk %>% filter(State != \"\")  gisaid_uk <- gisaid_uk %>%   filter(pangolin_lineage != \"Unknown\") %>%   arrange(State, MonthYearCollected) %>%   filter(!is.na(MonthYearCollected))  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL  custom_voc_mapping <- list(   `B.1.177` = \"B.1.177\",   `BA.1.15` = \"BA.1.15+\",   `BA.1.15.1` = \"BA.1.15+\",   `BA.1.15.2` = \"BA.1.15+\",   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" )  gisaid_uk <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-daily-case-data","dir":"Articles","previous_headings":"","what":"Get daily case data","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"cases.struct <- list(   date = \"date\",   areaName = \"areaName\",   newCasesByPublishDate = \"newCasesByPublishDate\" ) all_nations <- c(   \"areaType=nation\" ) cases_data <- get_data(   filters = all_nations,   structure = cases.struct ) %>% rename(new_cases = newCasesByPublishDate)   confirmed <- cases_data %>%   arrange(date) %>%   group_by(date) %>%   summarise(daily_cases = sum(new_cases))  confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - United Kingdom","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_uk_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_uk_weekwise <- gisaid_uk_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  uk_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_uk_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  80 (57 variable) ## initial  value 8109558.106605  ## iter  10 value 3168779.150985 ## iter  20 value 2639078.776015 ## iter  30 value 2597010.022589 ## iter  40 value 2383001.055930 ## iter  50 value 1991485.984645 ## iter  60 value 1500484.859076 ## iter  70 value 1365830.819159 ## iter  80 value 1341185.672985 ## iter  90 value 1337089.681252 ## iter 100 value 1335359.522609 ## iter 110 value 1333153.974601 ## iter 120 value 1332171.015518 ## iter 130 value 1331409.493271 ## iter 140 value 1330657.777671 ## iter 150 value 1329594.690434 ## iter 160 value 1327047.315727 ## iter 170 value 1324533.995416 ## iter 180 value 1323048.937876 ## iter 190 value 1321776.741390 ## iter 200 value 1321491.320762 ## iter 210 value 1321413.567757 ## iter 220 value 1321233.710061 ## iter 230 value 1321114.667943 ## final  value 1321108.024612  ## converged the_anim <- PlotVariantPrevalenceAnimated(uk_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and gov.uk<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk <- gisaid_uk %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  56 (39 variable) ## initial  value 3981801.781752  ## iter  10 value 1546296.245495 ## iter  20 value 1394479.359188 ## iter  30 value 1169388.503921 ## iter  40 value 1128411.867116 ## iter  50 value 1085906.313232 ## iter  60 value 1081370.775349 ## iter  70 value 1081006.653231 ## iter  80 value 1080771.601168 ## iter  90 value 1080721.122428 ## iter 100 value 1080525.934701 ## iter 110 value 1080368.392492 ## iter 120 value 1080100.522513 ## iter 130 value 1080090.207480 ## final  value 1080090.176443  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and gov.uk<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-variants-data-for-usa","dir":"Articles","previous_headings":"","what":"Get variants data for USA","title":"Animation of projected weekly cases - USA","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\" ) gisaid_usa <- gisaid_usa %>% filter(pangolin_lineage != \"None\")  gisaid_usa <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-weekly-cases-for-usa","dir":"Articles","previous_headings":"","what":"Get weekly cases for USA","title":"Animation of projected weekly cases - USA","text":"","code":"all_state_cases <- refresh_covid19nytimes_states()  confirmed.tmp <- all_state_cases %>%   filter(data_type == \"cases_total\") %>%   arrange(date) confirmed <- confirmed.tmp %>%   group_by(date) %>%   summarise(value = sum(value))  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - USA","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  64 (45 variable) #> initial  value 9623688.725959  #> iter  10 value 4146596.088840 #> iter  20 value 3081924.081420 #> iter  30 value 2837106.378777 #> iter  40 value 2555869.826282 #> iter  50 value 1953441.692321 #> iter  60 value 1733811.266910 #> iter  70 value 1700255.439249 #> iter  80 value 1695888.821600 #> iter  90 value 1691995.331550 #> iter 100 value 1691288.192723 #> iter 110 value 1690639.216977 #> iter 120 value 1670791.342521 #> iter 130 value 1620072.109325 #> iter 140 value 1607504.142444 #> iter 150 value 1597868.843813 #> iter 160 value 1596663.480429 #> iter 170 value 1595514.033259 #> final  value 1595473.840542  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm=T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  44 (30 variable) #> initial  value 3911223.764728  #> iter  10 value 1101083.853981 #> iter  20 value 958160.333150 #> iter  30 value 862747.839946 #> iter  40 value 789917.002195 #> iter  50 value 783028.680382 #> iter  60 value 781564.648319 #> iter  70 value 781442.937540 #> iter  80 value 781274.941102 #> iter  90 value 780832.227489 #> final  value 780824.402141  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_06_23.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\") %>% filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city==\"\"] <- gisaid_india$District[gisaid_india$custom_city==\"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City=Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Kolkata\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  West Bengal Kolkata    184 ## 2 May 2020  West Bengal Kolkata   1941 ## 3 Jun 2020  West Bengal Kolkata   3859 ## 4 Jul 2020  West Bengal Kolkata  15655 ## 5 Aug 2020  West Bengal Kolkata  18518 ## 6 Sep 2020  West Bengal Kolkata  16255"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"plot-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"Get monthly cases for Kolkata","what":"Plot monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Kolkata (India)\", caption = \"**Source: covid19bharat.org<br>**\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-weekly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get weekly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Kolkata\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org <br>**\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"overall-how-much-has-kolkata-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Kolkata","what":"Overall, how much has Kolkata sequenced over months?","title":"Animation of projected weekly cases - Kolkata (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- 'Confirmed'  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State,   value,      type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long =  chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Kolkata (India)","text":"Look cases October, 2021 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Kolkata\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%    filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  36 (24 variable) ## initial  value 9072.340280  ## iter  10 value 4611.724013 ## iter  20 value 3444.612387 ## iter  30 value 3394.389101 ## iter  40 value 3386.318904 ## iter  50 value 3384.335803 ## iter  60 value 3383.279510 ## iter  70 value 3382.599233 ## iter  80 value 3382.327511 ## iter  90 value 3381.389218 ## iter 100 value 3380.666069 ## iter 110 value 3380.628336 ## iter 120 value 3380.518383 ## iter 130 value 3380.453543 ## iter 140 value 3380.301550 ## final  value 3380.128980  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%     filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  20 (12 variable) ## initial  value 4557.928168  ## iter  10 value 3031.979028 ## iter  20 value 2996.772343 ## final  value 2995.669935  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%     filter(District %in% c(\"Kolkata\")) %>%    group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>% filter(MonthYearCollected > \"Oct 2021\")  %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  20 (12 variable) ## initial  value 4557.928168  ## iter  10 value 3031.979028 ## iter  20 value 2996.772343 ## final  value 2995.669935  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org<br>**\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saket Choudhary. Maintainer.","code":""},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choudhary S (2022). covmuller: R package perform modeling virus prevalence data GISAID. https://saketkc.github.io/covmuller, http://saket-choudhary./covmuller/.","code":"@Manual{,   title = {covmuller: R package to perform modeling on virus prevalence data from GISAID},   author = {Saket Choudhary},   year = {2022},   note = {https://saketkc.github.io/covmuller, http://saket-choudhary.me/covmuller/}, }"},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"covmuller","dir":"","previous_headings":"","what":"R package to perform modeling on virus prevalence data from GISAID","title":"R package to perform modeling on virus prevalence data from GISAID","text":"Covmuller R-package designed analysis sequencing metadata deposited GISAID. )","code":""},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"R package to perform modeling on virus prevalence data from GISAID","text":"Covmuller currently supports following features: Read preprocess metadata file downloaded GISAID: Vignette Plot variant prevalence: Vignette India USA Canada UK Australia SouthAfrica India New York state South Africa United Kingdom USA Aizawl (India) Bengaluru (India) Chennai (India) Delhi (India) Jaipur (India) Mumbai (India) Pune (India) New York City (USA) Compare prevalence countries: India South Africa","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from the USA â€” CleanAmericanStates","title":"Clean states from the USA â€” CleanAmericanStates","text":"Clean states USA","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from the USA â€” CleanAmericanStates","text":"","code":"CleanAmericanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from the USA â€” CleanAmericanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from the USA â€” CleanAmericanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from Canada â€” CleanCanadaStates","title":"Clean states from Canada â€” CleanCanadaStates","text":"Clean states Canada","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from Canada â€” CleanCanadaStates","text":"","code":"CleanCanadaStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from Canada â€” CleanCanadaStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from Canada â€” CleanCanadaStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Indian States â€” CleanIndianStates","title":"Clean Indian States â€” CleanIndianStates","text":"Clean Indian States","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Indian States â€” CleanIndianStates","text":"","code":"CleanIndianStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Indian States â€” CleanIndianStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Indian States â€” CleanIndianStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from South Africa â€” CleanSouthAfricanStates","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"Clean states South Africa","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"","code":"CleanSouthAfricanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"Collpase pangolin lineage list VOCs","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"","code":"CollapseLineageToVOCs(   variant_df,   vocs = GetVOCs(),   custom_voc_mapping = NULL,   summarize = TRUE )"},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"variant_df dataframe \"pangolin_lineage\" column vocs named list VOC (variant concernt) name key list lineages VOC. method replace lineages VOC name. custom_voc_mapping named vector custom mapping naming lineages. See example.","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"dataframe new column \"lineage_collpased\".","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"","code":"CombineSequencedCases(   cases_sequenced,   confirmed_long,   prune_oversequenced = TRUE,   month.min = NULL,   month.max = NULL,   max.percent = 100 )"},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"cases_sequenced long dataframe per state sequenced cases prune_oversequenced Whether round percentages 100 100. Default TRUE cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert monthwise counts to prevalence â€” CountsToPrevalence","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"Convert monthwise counts prevalence","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"","code":"CountsToPrevalence(variant_df)"},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"dataframe monthwise prevalence variants","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set them â€” CovmullerTheme","title":"Set them â€” CovmullerTheme","text":"Set ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set them â€” CovmullerTheme","text":"","code":"CovmullerTheme()"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"Filter GISAID India Metadata India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"","code":"FilterGISAIDIndia(gisaid_metadata_all)"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"gisaid_metadata_all dataframe GISAID metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"dataframe Indian entries Human date known","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"Format metadata.tar.x file downloaded GISAID missing columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"","code":"FormatGISAIDMetadata(   df,   collection_col = \"Collection date\",   submission_col = \"Submission date\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"df GISAID metadata dataframe collection_col Name column representing date collection (Collection date) submission_col Name column representing date submission (Submission date)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"data frame following extra columns: DateCollected, MonthYearCollected, YearCollected, MonthCollected, WeekCollected DateCollectedNumeric, MonthYearCollectedNumeric DateSubmitted, MonthYearSubmitted, YearSubmitted, MonthSubmitted, WeekSubmitted DateSubmittedNumeric, MonthYearSubmittedNumeric","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"Geocode given address get latitude, longitude Gooogle","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"","code":"GeocodeAddress(address, api.key = NULL, restrict.to = NULL)"},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"address String address geocode api.key API key Google Maps restrict.Country name search restricted , Currently supports 'India'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"dataframe geocoded address","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine filetype â€” GetFiletype","title":"Determine filetype â€” GetFiletype","text":"Determine filetype","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine filetype â€” GetFiletype","text":"","code":"GetFiletype(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine filetype â€” GetFiletype","text":"path Path file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine filetype â€” GetFiletype","text":"Extension file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"Get daily confirmed cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"","code":"GetIndiaConfirmedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"Get India monthwose cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"","code":"GetIndiaConfirmedCasesMonthlyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"","code":"GetIndiaConfirmedCasesWeeklyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"Get daily cases India given status type","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"","code":"GetIndiaDailyCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   status = \"Confirmed\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"url URL fetch data status One \"Confirmed\", \"Recovered\", \"Deceased\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily statewise data for India â€” GetIndiaDailyData","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"'Status' column one 'Confirmed', 'Deceased' 'Recovered'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"","code":"GetIndiaDailyData(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"Get daily deceased cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"","code":"GetIndiaDeceasedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data for India â€” GetIndiaHospitalization","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"Get hospitalization data India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"","code":"GetIndiaHospitalization(url = \"\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of Indian name states â€” GetIndianStates","title":"Get a list of Indian name states â€” GetIndianStates","text":"Get list Indian name states","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of Indian name states â€” GetIndianStates","text":"","code":"GetIndianStates()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of Indian name states â€” GetIndianStates","text":"list state abbreviation key full name value","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"Get MonthYear (zoo) dataframe string formatted data column","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"","code":"GetMonthYear(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"datecol vector string formatted dates datefmt Format date (default Y-m-d)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"vector dates converted MonthYear format (zoo::.yearmon)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants of concern â€” GetVOCs","title":"Get variants of concern â€” GetVOCs","text":"Get variants concern","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants of concern â€” GetVOCs","text":"","code":"GetVOCs()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants of concern â€” GetVOCs","text":"list variants concern pangolin lineage","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"Plot heatmap cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"","code":"PlotSequencedPropHeatmap(df)"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"heatmap total percentage cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"Read instrument metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"","code":"ReadAuspiceInstrument(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"dataframe instrument related metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"Read metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"","code":"ReadAuspiceMetadata(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"dataframe collated metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"Read metadata downloaded GISAID","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"","code":"ReadGISAIDMetada(path, showProgress = FALSE, ...)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"path Path tar.xz metadata.txt downloaded GISAID showProgress Whether print progress bars fread ... parameters data.table::fread","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"data frame parsed metadata extra columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"function removes: 1. Commas space 2. Hyphen space 3. Multiple dots single space 4. Multiple spacies single space 5. NA \"UNKNOWN\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"","code":"SanitizeColumn(col)"},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"col String vector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"string vector sanitized entries","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"","code":"SummarizeVariantsDatewise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"Summarize total number variants per month","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"","code":"SummarizeVariantsMonthwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"","code":"SummarizeVariantsWeekwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"Get total sequenced samples per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"","code":"TotalSequencesPerMonthCountrywise(variant_df, rename_country_as_state = TRUE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"dataframe sequencing statistics per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"Get total number sequenced samples per month Country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"","code":"TotalSequencesPerMonthStatewise(variant_df, drop_country = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"dataframe sequencing statistics per state per country","code":""}]
