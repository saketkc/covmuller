[{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"get-cases-data","dir":"Articles","previous_headings":"","what":"Get cases data","title":"Introduction to covmuller","text":"use covid19bharat.org get tally daily confirmed cases summarize monthly level.","code":"indian_state_cases <- GetIndiaConfirmedCasesMonthlyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. india_cases <- indian_state_cases %>%   filter(State == \"India\") %>%   filter(value > 1) head(india_cases) ##   MonthYear State   value      type ## 1  Mar 2020 India    1635 Confirmed ## 2  Apr 2020 India   33232 Confirmed ## 3  May 2020 India  155781 Confirmed ## 4  Jun 2020 India  395044 Confirmed ## 5  Jul 2020 India 1111273 Confirmed ## 6  Aug 2020 India 1990350 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-cases-for-india","dir":"Articles","previous_headings":"Get cases data","what":"Plot cases for India","title":"Introduction to covmuller","text":"easy visualize monthly case counts bar plot:","code":"p1 <- BarPlot(india_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - India\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"read-variant-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Read variant data from GISAID","title":"Introduction to covmuller","text":"utilize GISAID data look prevalence variants. access data, GISAID requires registration.","code":"current_date <- \"2024_01_06\" fpath.tar <- paste0(\"~/data/epicov/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/data/epicov/metadata_tsv_\", current_date, \".qs\")  if (file.exists(fpath.qs)) {   gisaid_metadata <- qs::qread(file = fpath.qs) } else {   gisaid_metadata <- ReadGISAIDMetada(path = fpath.tar)   qs::qsave(gisaid_metadata, fpath.qs) }"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot total sequenced cases","title":"Introduction to covmuller","text":"can look absolute number cases sequenced country filtering information metadata made available GISAID (includes countries). , visualize total sequenced cases coming India:","code":"gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata) country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p2 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from India\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"overall-how-much-has-india-sequenced-over-months","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Overall, how much has India sequenced over months?","title":"Introduction to covmuller","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:  context, can combine three plots :","code":"#india_cases_long <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"India\") GetIndiaCases <- function(){     data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")     confirmed <- data %>% select(date, India) colnames(confirmed)[2] <- c(\"cases\") confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_weekwise <- confirmed %>%       group_by(MonthYear) %>%       summarise(value = sum(cases, na.rm=T)) %>%       arrange(MonthYear) } india_cases_long <- GetIndiaCases() india_cases_long$State <- \"India\" india_cases_long$type <- \"Confirmed\"  india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = country_seq_stats,   confirmed_long = india_cases_long ) p3 <- BarPlot(india_sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from India\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-proportion-of-cases-that-been-deposited-from-each-state","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot proportion of cases that been deposited from each state","title":"Introduction to covmuller","text":"can break proportion sequenced cases state level:","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india, drop_country = TRUE) seq_stats <- rbind(country_seq_stats, state_seq_stats) state_cases_long <- GetIndiaConfirmedCasesMonthlyLong() india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = seq_stats,   confirmed_long = state_cases_long,   month.min = \"Jan 2022\",   month.max = \"Feb 2023\",   max.percent = 5 )  india_sequencing_proportion$State <- factor(   x = india_sequencing_proportion$State,   levels = as.character(GetIndianStates()) ) p4 <- PlotSequencedPropHeatmap(india_sequencing_proportion) # p4"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-prevalence","dir":"Articles","previous_headings":"","what":"Plot Prevalence","title":"Introduction to covmuller","text":"Finally, look prevalence variants variants concern (VOCs):  animated version prevalence plot, check VariantAnimation.","code":"india_month_counts <- SummarizeVariantsMonthwise(gisaid_india) india_month_counts$State <- \"India\" india_month_prevalence <- CountsToPrevalence(india_month_counts) vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB\",   `XBB.1.5` = \"XBB\",   `XBB.1` = \"XBB\",   `XBB.1.*` = \"XBB\",   `XBB.*` = \"XBB\",   `XBB.*.*` = \"XBB\",   `XBB.*.*.*` = \"XBB\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `EG.5` = \"EG.5\",   `EG.5.1` = \"EG.5\",   `EG.5.1.1` = \"EG.5\",   `EG.5.*` = \"EG.5\",   `EG.5.1` = \"EG.5\",   # `EG.6.*` = \"EG.6\",   # `EG.6.1` = \"EG.6\",   `FL.1.*` = \"FL.1\",   `FU.1` = \"FU.1\",   `FU.1.*` = \"FU.1\",   `GE.1` = \"GE.1\",   `GE.1.*` = \"GE.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) india_month_prevalence <- CollapseLineageToVOCs(   variant_df = india_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(india_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_germany, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_germany) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - Germany","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_germany_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_germany_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_germany_shared_dateweek <- SummarizeVariantsDatewise(gisaid_germany_collapsed_sel, by_state = TRUE) head(gisaid_germany_shared_dateweek) ## # A tibble: 6 × 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Baden-Wurttemberg                19266 BA.4                 10 ## 2 Baden-Wurttemberg                19266 BA.5                153 ## 3 Baden-Wurttemberg                19266 BQ.1+                 2 ## 4 Baden-Wurttemberg                19266 Others               48 ## 5 Baden-Wurttemberg                19267 BA.4                  2 ## 6 Baden-Wurttemberg                19267 BA.5                 91 fit_germany_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_germany_shared_dateweek) ## # weights:  147 (120 variable) ## initial  value 214694.212655  ## iter  10 value 128940.649309 ## iter  20 value 128270.523205 ## iter  30 value 126553.561035 ## iter  40 value 123924.245209 ## iter  50 value 122918.857526 ## iter  60 value 121111.531245 ## iter  70 value 120274.375261 ## iter  80 value 119735.460597 ## iter  90 value 119407.599061 ## iter 100 value 119327.025136 ## iter 110 value 119242.896523 ## iter 120 value 119227.107564 ## iter 130 value 119226.199353 ## iter 140 value 119225.883228 ## final  value 119225.875616  ## converged head(fit_germany_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State        prob ## 1              BA.2                19266 Baden-Wurttemberg 0.003581340 ## 2           BA.2.75                19266 Baden-Wurttemberg 0.005350137 ## 3              BA.4                19266 Baden-Wurttemberg 0.020258522 ## 4              BA.5                19266 Baden-Wurttemberg 0.635943839 ## 5             BQ.1+                19266 Baden-Wurttemberg 0.042728322 ## 6            Others                19266 Baden-Wurttemberg 0.291929325 ##             SE df   asymp.LCL   asymp.UCL DateCollected ## 1 0.0004764749 NA 0.002647466 0.004515213    2022-10-01 ## 2 0.0007694157 NA 0.003842110 0.006858164    2022-10-01 ## 3 0.0017280344 NA 0.016871637 0.023645407    2022-10-01 ## 4 0.0051981698 NA 0.625755614 0.646132065    2022-10-01 ## 5 0.0012972195 NA 0.040185819 0.045270826    2022-10-01 ## 6 0.0046132606 NA 0.282887500 0.300971149    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Germany","text":"","code":"muller_germanybystate_mfit <- PlotMullerDailyPrevalence(fit_germany_multi_predsbystate, ncol = 3) muller_germanybystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Australia","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_australia, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Australia\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Australia","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_australia_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_australia,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_australia_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_australia_shared_dateweek <- SummarizeVariantsDatewise(gisaid_australia_collapsed_sel, by_state = TRUE) head(gisaid_australia_shared_dateweek) ## # A tibble: 6 × 4 ##   State                        DateCollectedNumeric lineage_collapsed     n ##   <chr>                                       <dbl> <chr>             <int> ## 1 Australian Capital Territory                19266 BA.4                  1 ## 2 Australian Capital Territory                19266 BA.5                  1 ## 3 Australian Capital Territory                19268 BA.2.75               5 ## 4 Australian Capital Territory                19268 BA.4                  3 ## 5 Australian Capital Territory                19268 BA.5                 53 ## 6 Australian Capital Territory                19268 BQ.1+                 1 fit_australia_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_australia_shared_dateweek) ## # weights:  77 (60 variable) ## initial  value 132983.499586  ## iter  10 value 70885.196493 ## iter  20 value 69491.958134 ## iter  30 value 66369.678716 ## iter  40 value 64586.649394 ## iter  50 value 63457.231670 ## iter  60 value 62727.926737 ## iter  70 value 62563.974632 ## iter  80 value 62559.948870 ## iter  90 value 62558.547817 ## final  value 62558.527416  ## converged head(fit_australia_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric                        State ## 1              BA.2                19266 Australian Capital Territory ## 2           BA.2.75                19266 Australian Capital Territory ## 3              BA.4                19266 Australian Capital Territory ## 4              BA.5                19266 Australian Capital Territory ## 5             BQ.1+                19266 Australian Capital Territory ## 6            Others                19266 Australian Capital Territory ##         prob          SE df  asymp.LCL  asymp.UCL DateCollected ## 1 0.01567598 0.004168452 NA 0.00750596 0.02384599    2022-10-01 ## 2 0.03242476 0.006811341 NA 0.01907478 0.04577475    2022-10-01 ## 3 0.05603610 0.010193260 NA 0.03605767 0.07601452    2022-10-01 ## 4 0.67582248 0.016718818 NA 0.64305420 0.70859076    2022-10-01 ## 5 0.03812374 0.003283711 NA 0.03168778 0.04455969    2022-10-01 ## 6 0.18018376 0.010292901 NA 0.16001005 0.20035748    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Australia","text":"","code":"muller_australiabystate_mfit <- PlotMullerDailyPrevalence(fit_australia_multi_predsbystate, ncol = 3) muller_australiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Canada","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_canada, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Canada\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Canada","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_canada_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_canada,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed %>% filter(MonthYearCollected >= \"Oct 2022\")  vocs_to_keep <- table(gisaid_canada_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_canada_shared_dateweek <- SummarizeVariantsDatewise(gisaid_canada_collapsed_sel, by_state = TRUE) head(gisaid_canada_shared_dateweek) ## # A tibble: 6 × 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alberta                19266 BA.4                  2 ## 2 Alberta                19266 BA.5                 50 ## 3 Alberta                19266 BQ.1+                 6 ## 4 Alberta                19266 Others               16 ## 5 Alberta                19267 BA.2.75               3 ## 6 Alberta                19267 BA.4                  4 fit_canada_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_canada_shared_dateweek) ## # weights:  91 (72 variable) ## initial  value 293824.648867  ## iter  10 value 138099.523242 ## iter  20 value 132480.710534 ## iter  30 value 130470.881460 ## iter  40 value 127123.974909 ## iter  50 value 125198.919763 ## iter  60 value 123848.012129 ## iter  70 value 121884.996593 ## iter  80 value 121024.750251 ## iter  90 value 121008.497780 ## iter 100 value 121007.219372 ## iter 110 value 121003.965529 ## iter 120 value 121002.509158 ## iter 130 value 120999.763524 ## iter 140 value 120997.003430 ## iter 150 value 120971.362274 ## iter 160 value 120969.925196 ## iter 170 value 120968.577843 ## iter 180 value 120967.913563 ## iter 190 value 120967.420815 ## iter 200 value 120966.936762 ## iter 210 value 120966.532841 ## iter 220 value 120956.818499 ## iter 220 value 120956.818196 ## iter 220 value 120956.818196 ## final  value 120956.818196  ## converged head(fit_canada_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State        prob           SE df ## 1              BA.2                19266 Alberta 0.004432086 0.0007571616 NA ## 2           BA.2.75                19266 Alberta 0.005135577 0.0009591931 NA ## 3              BA.4                19266 Alberta 0.057679860 0.0044403589 NA ## 4              BA.5                19266 Alberta 0.736347724 0.0067759509 NA ## 5             BQ.1+                19266 Alberta 0.070418558 0.0023230324 NA ## 6            Others                19266 Alberta 0.124683851 0.0039668118 NA ##     asymp.LCL   asymp.UCL DateCollected ## 1 0.002948076 0.005916095    2022-10-01 ## 2 0.003255593 0.007015561    2022-10-01 ## 3 0.048976917 0.066382804    2022-10-01 ## 4 0.723067104 0.749628343    2022-10-01 ## 5 0.065865498 0.074971617    2022-10-01 ## 6 0.116909043 0.132458660    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Canada","text":"","code":"muller_canadabystate_mfit <- PlotMullerDailyPrevalence(fit_canada_multi_predsbystate, ncol = 3) muller_canadabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - India","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - India","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State == \"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Total sequences deposited\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - India","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed_sel <- gisaid_india_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") vocs_to_keep <- table(gisaid_india_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_india_collapsed_sel <- gisaid_india_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_india_shared_dateweek <- SummarizeVariantsDatewise(gisaid_india_collapsed_sel, by_state = TRUE) head(gisaid_india_shared_dateweek) ## # A tibble: 6 × 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Andhra Pradesh                   19448 XBB                   1 ## 2 Andhra Pradesh                   19506 XBB                   1 ## 3 Arunachal Pradesh                19361 XBB                   1 ## 4 Arunachal Pradesh                19459 XBB                   1 ## 5 Arunachal Pradesh                19556 XBB                   1 ## 6 Arunachal Pradesh                19611 Others                1 fit_india_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_india_shared_dateweek) ## # weights:  204 (165 variable) ## initial  value 32601.063543  ## iter  10 value 11168.313716 ## iter  20 value 10426.362731 ## iter  30 value 10001.722170 ## iter  40 value 9829.519019 ## iter  50 value 9696.310498 ## iter  60 value 9635.871217 ## iter  70 value 9611.586663 ## iter  80 value 9602.172662 ## iter  90 value 9601.187611 ## iter 100 value 9601.080202 ## iter 110 value 9601.033091 ## final  value 9601.032693  ## converged head(fit_india_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric          State         prob ## 1              BA.2                19266 Andhra Pradesh 9.703398e-05 ## 2           BA.2.75                19266 Andhra Pradesh 3.738934e-05 ## 3            BA.2.X                19266 Andhra Pradesh 7.829592e-08 ## 4             BQ.1+                19266 Andhra Pradesh 8.958103e-08 ## 5            Others                19266 Andhra Pradesh 2.212004e-03 ## 6               XBB                19266 Andhra Pradesh 9.976534e-01 ##             SE df     asymp.LCL    asymp.UCL DateCollected ## 1 8.666929e-05 NA -7.283471e-05 2.669027e-04    2022-10-01 ## 2 1.102124e-04 NA -1.786230e-04 2.534017e-04    2022-10-01 ## 3 4.582453e-08 NA -1.151852e-08 1.681104e-07    2022-10-01 ## 4 6.058657e-07 NA -1.097894e-06 1.277056e-06    2022-10-01 ## 5 1.816076e-03 NA -1.347439e-03 5.771447e-03    2022-10-01 ## 6 1.874744e-03 NA  9.939790e-01 1.001328e+00    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - India","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_southafrica, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_southafrica) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - South Africa","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_southafrica_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_southafrica_shared_dateweek <- SummarizeVariantsDatewise(gisaid_southafrica_collapsed_sel, by_state = TRUE) head(gisaid_southafrica_shared_dateweek) ## # A tibble: 6 × 4 ##   State        DateCollectedNumeric lineage_collapsed     n ##   <chr>                       <dbl> <chr>             <int> ## 1 Eastern Cape                19276 BA.2                  1 ## 2 Eastern Cape                19277 BA.2                  1 ## 3 Eastern Cape                19299 Others                1 ## 4 Eastern Cape                19300 BA.5                  1 ## 5 Eastern Cape                19317 BA.5                  1 ## 6 Eastern Cape                19340 BQ.1+                 1 fit_southafrica_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_southafrica_shared_dateweek) ## # weights:  72 (55 variable) ## initial  value 12153.504480  ## iter  10 value 7695.561138 ## iter  20 value 6918.759558 ## iter  30 value 6584.623472 ## iter  40 value 6455.092247 ## iter  50 value 6386.635522 ## iter  60 value 6355.335943 ## iter  70 value 6341.021861 ## iter  80 value 6336.444097 ## final  value 6336.443864  ## converged head(fit_southafrica_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric        State         prob           SE ## 1              BA.2                19266 Eastern Cape 3.431723e-03 1.917611e-03 ## 2              BA.4                19266 Eastern Cape 1.958512e-07 3.304034e-07 ## 3              BA.5                19266 Eastern Cape 6.430605e-01 5.624097e-02 ## 4             BQ.1+                19266 Eastern Cape 6.155499e-03 1.675723e-03 ## 5            Others                19266 Eastern Cape 3.459190e-01 5.503635e-02 ## 6               XBB                19266 Eastern Cape 1.433064e-03 3.977732e-04 ##   df     asymp.LCL    asymp.UCL DateCollected ## 1 NA -3.267254e-04 7.190172e-03    2022-10-01 ## 2 NA -4.517276e-07 8.434300e-07    2022-10-01 ## 3 NA  5.328302e-01 7.532908e-01    2022-10-01 ## 4 NA  2.871142e-03 9.439856e-03    2022-10-01 ## 5 NA  2.380498e-01 4.537883e-01    2022-10-01 ## 6 NA  6.534431e-04 2.212685e-03    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - South Africa","text":"","code":"muller_southafricabystate_mfit <- PlotMullerDailyPrevalence(fit_southafrica_multi_predsbystate, ncol = 3) muller_southafricabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - United Kingdom","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_uk, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"United Kingdom\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - United Kingdom","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_uk_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_uk_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_uk_shared_dateweek <- SummarizeVariantsDatewise(gisaid_uk_collapsed_sel, by_state = TRUE) head(gisaid_uk_shared_dateweek) ## # A tibble: 6 × 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 England                19266 BA.2                  1 ## 2 England                19266 BA.2.75              13 ## 3 England                19266 BA.4                 17 ## 4 England                19266 BA.5                236 ## 5 England                19266 BQ.1+                44 ## 6 England                19266 Others              114 fit_uk_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_uk_shared_dateweek) ## # weights:  49 (36 variable) ## initial  value 320602.318428  ## iter  10 value 189064.441464 ## iter  20 value 182488.735919 ## iter  30 value 170108.912633 ## iter  40 value 165538.740152 ## iter  50 value 162524.899956 ## iter  60 value 162352.946426 ## iter  70 value 162333.412026 ## iter  80 value 162322.811219 ## final  value 162322.758327  ## converged head(fit_uk_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State        prob           SE df ## 1              BA.2                19266 England 0.002204785 0.0002710844 NA ## 2           BA.2.75                19266 England 0.021503834 0.0014464831 NA ## 3              BA.4                19266 England 0.057401287 0.0020362052 NA ## 4              BA.5                19266 England 0.579996426 0.0039782954 NA ## 5             BQ.1+                19266 England 0.138019837 0.0022330305 NA ## 6            Others                19266 England 0.198702350 0.0027124363 NA ##     asymp.LCL   asymp.UCL DateCollected ## 1 0.001673469 0.002736101    2022-10-01 ## 2 0.018668779 0.024338888    2022-10-01 ## 3 0.053410398 0.061392176    2022-10-01 ## 4 0.572199110 0.587793742    2022-10-01 ## 5 0.133643178 0.142396496    2022-10-01 ## 6 0.193386072 0.204018627    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - United Kingdom","text":"","code":"muller_ukbystate_mfit <- PlotMullerDailyPrevalence(fit_uk_multi_predsbystate, ncol = 3) muller_ukbystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Bengaluru_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [3] ##   MonthYear State     District        value ##   <yearmon> <chr>     <chr>           <dbl> ## 1 Apr 2020  Karnataka Bengaluru Rural     6 ## 2 Apr 2020  Karnataka Bengaluru Urban   141 ## 3 May 2020  Karnataka Bengaluru Rural     9 ## 4 May 2020  Karnataka Bengaluru Urban   218 ## 5 Jun 2020  Karnataka Bengaluru Rural   114 ## 6 Jun 2020  Karnataka Bengaluru Urban  4196"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"plot-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"Get monthly cases for Bengaluru","what":"Plot monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"p1 <- BarPlot(Bengaluru_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Bengaluru (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-weekly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get weekly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Bengaluru\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Bengaluru_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"overall-how-much-has-bengaluru-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Bengaluru","what":"Overall, how much has Bengaluru sequenced over months?","title":"Animation of projected weekly cases - Bengaluru (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases %>% select(MonthYear, value) Bengaluru_monthly_cases_tmp$State <- \"India\" Bengaluru_monthly_cases_tmp$type <- \"Confirmed\"  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>%   group_by(MonthYear, State, type) %>%   summarise(value = sum(value))  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Bengaluru_seq_stats,   confirmed_long = Bengaluru_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Bengaluru (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Bengaluru\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 27280.854519  ## iter  10 value 12654.212777 ## iter  20 value 6673.400386 ## iter  30 value 5900.795573 ## iter  40 value 5579.611334 ## iter  50 value 5437.754669 ## iter  60 value 5289.623501 ## iter  70 value 5089.205002 ## iter  80 value 4828.414224 ## iter  90 value 4722.853943 ## iter 100 value 4716.025496 ## iter 110 value 4708.762723 ## iter 120 value 4703.187810 ## iter 130 value 4702.317236 ## iter 140 value 4700.036796 ## iter 150 value 4698.415788 ## iter 160 value 4691.593838 ## iter 170 value 4666.532038 ## iter 180 value 4647.199881 ## iter 190 value 4645.953019 ## iter 200 value 4644.413950 ## iter 210 value 4640.908953 ## iter 220 value 4639.913612 ## iter 230 value 4639.756261 ## iter 240 value 4639.163231 ## iter 250 value 4637.083952 ## iter 260 value 4636.794363 ## iter 270 value 4635.805418 ## iter 280 value 4634.778858 ## iter 290 value 4634.437882 ## iter 300 value 4634.244651 ## final  value 4632.478620  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 13260.587551  ## iter  10 value 4244.312127 ## iter  20 value 3571.482803 ## iter  30 value 3494.250103 ## iter  40 value 3457.604725 ## iter  50 value 3444.861697 ## iter  60 value 3440.569061 ## iter  70 value 3439.411840 ## iter  80 value 3438.525153 ## iter  90 value 3438.196092 ## iter 100 value 3437.826340 ## iter 110 value 3437.265419 ## iter 120 value 3437.234425 ## iter 130 value 3437.191321 ## iter 140 value 3437.012394 ## iter 150 value 3436.953845 ## iter 160 value 3436.881184 ## iter 170 value 3436.695579 ## iter 180 value 3436.659370 ## iter 190 value 3436.612976 ## iter 200 value 3436.592489 ## iter 210 value 3436.564673 ## iter 220 value 3436.539005 ## final  value 3436.537103  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 13260.587551  ## iter  10 value 4244.312127 ## iter  20 value 3571.482803 ## iter  30 value 3494.250103 ## iter  40 value 3457.604725 ## iter  50 value 3444.861697 ## iter  60 value 3440.569061 ## iter  70 value 3439.411840 ## iter  80 value 3438.525153 ## iter  90 value 3438.196092 ## iter 100 value 3437.826340 ## iter 110 value 3437.265419 ## iter 120 value 3437.234425 ## iter 130 value 3437.191321 ## iter 140 value 3437.012394 ## iter 150 value 3436.953845 ## iter 160 value 3436.881184 ## iter 170 value 3436.695579 ## iter 180 value 3436.659370 ## iter 190 value 3436.612976 ## iter 200 value 3436.592489 ## iter 210 value 3436.564673 ## iter 220 value 3436.539005 ## final  value 3436.537103  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"] gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- \"Unknown\"   gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"state-of-origin-of-ba4ba-5-sequences","dir":"Articles","previous_headings":"","what":"State of origin of BA/4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>%   filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>%   pull(State) %>%   table() %>%   as.data.frame() %>%   arrange(desc(Freq)) %>%   DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"city-of-origin-of-ba-4ba-5-sequences","dir":"Articles","previous_headings":"","what":"City of origin of BA.4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>%   filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>%   pull(custom_city) %>%   table() %>%   as.data.frame() %>%   arrange(desc(Freq)) %>%   DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-monthly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Chennai\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(chennai_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State      District value ##   <yearmon> <chr>      <chr>    <dbl> ## 1 Apr 2020  Tamil Nadu Chennai    910 ## 2 May 2020  Tamil Nadu Chennai  13889 ## 3 Jun 2020  Tamil Nadu Chennai  43528 ## 4 Jul 2020  Tamil Nadu Chennai  41467 ## 5 Aug 2020  Tamil Nadu Chennai  35803 ## 6 Sep 2020  Tamil Nadu Chennai  31779"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"plot-monthly-cases-for-chennai","dir":"Articles","previous_headings":"Get monthly cases for Chennai","what":"Plot monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Chennai (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-weekly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Chennai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"overall-how-much-has-chennai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Chennai","what":"Overall, how much has Chennai sequenced over months?","title":"Animation of projected weekly cases - Chennai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"Chennai\")) state_month_counts$State <- \"Chennai\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Chennai (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Chennai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  48 (33 variable) ## initial  value 15605.213761  ## iter  10 value 9346.725587 ## iter  20 value 6735.265161 ## iter  30 value 6252.767740 ## iter  40 value 5962.591363 ## iter  50 value 5839.616667 ## iter  60 value 5688.700478 ## iter  70 value 5646.847872 ## iter  80 value 5644.264029 ## iter  90 value 5635.112092 ## iter 100 value 5632.626406 ## iter 110 value 5611.731368 ## iter 120 value 5608.160319 ## iter 130 value 5602.430986 ## iter 140 value 5602.085418 ## iter 150 value 5601.992062 ## iter 160 value 5601.547330 ## iter 170 value 5599.095961 ## iter 180 value 5597.310934 ## iter 190 value 5596.025887 ## iter 200 value 5586.144855 ## iter 210 value 5582.730045 ## iter 220 value 5582.206277 ## iter 230 value 5581.641031 ## iter 240 value 5580.844557 ## iter 250 value 5578.550303 ## iter 260 value 5577.858001 ## iter 270 value 5577.656828 ## iter 280 value 5577.632627 ## iter 290 value 5577.545752 ## iter 300 value 5577.491586 ## iter 310 value 5577.422957 ## iter 320 value 5576.188106 ## iter 330 value 5571.337205 ## final  value 5569.995066  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Chennai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 9646.732682  ## iter  10 value 4436.449277 ## iter  20 value 3750.586782 ## iter  30 value 3524.118672 ## iter  40 value 3477.534654 ## iter  50 value 3461.347353 ## iter  60 value 3457.749224 ## iter  70 value 3455.803570 ## iter  80 value 3455.186713 ## iter  90 value 3453.396263 ## iter 100 value 3451.684841 ## iter 110 value 3448.796346 ## iter 120 value 3448.681536 ## iter 130 value 3448.621780 ## iter 140 value 3448.598491 ## iter 150 value 3448.517228 ## iter 160 value 3448.295038 ## iter 170 value 3448.240697 ## iter 180 value 3448.196202 ## iter 190 value 3448.104299 ## iter 200 value 3448.042618 ## iter 210 value 3448.020950 ## iter 220 value 3447.924799 ## iter 230 value 3447.797141 ## iter 240 value 3447.738687 ## iter 250 value 3447.697683 ## iter 260 value 3447.677071 ## iter 270 value 3447.658190 ## iter 280 value 3447.631436 ## iter 290 value 3447.563336 ## iter 300 value 3447.544602 ## final  value 3447.504293  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Chennai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 9646.732682  ## iter  10 value 4436.449277 ## iter  20 value 3750.586782 ## iter  30 value 3524.118672 ## iter  40 value 3477.534654 ## iter  50 value 3461.347353 ## iter  60 value 3457.749224 ## iter  70 value 3455.803570 ## iter  80 value 3455.186713 ## iter  90 value 3453.396263 ## iter 100 value 3451.684841 ## iter 110 value 3448.796346 ## iter 120 value 3448.681536 ## iter 130 value 3448.621780 ## iter 140 value 3448.598491 ## iter 150 value 3448.517228 ## iter 160 value 3448.295038 ## iter 170 value 3448.240697 ## iter 180 value 3448.196202 ## iter 190 value 3448.104299 ## iter 200 value 3448.042618 ## iter 210 value 3448.020950 ## iter 220 value 3447.924799 ## iter 230 value 3447.797141 ## iter 240 value 3447.738687 ## iter 250 value 3447.697683 ## iter 260 value 3447.677071 ## iter 270 value 3447.658190 ## iter 280 value 3447.631436 ## iter 290 value 3447.563336 ## iter 300 value 3447.544602 ## final  value 3447.504293  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-monthly-cases-for-delhi","dir":"Articles","previous_headings":"","what":"Get monthly cases for Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Delhi\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(NewDelhi_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State District  value ##   <yearmon> <chr> <chr>     <dbl> ## 1 Apr 2020  Delhi Delhi      3515 ## 2 May 2020  Delhi Delhi     16329 ## 3 Jun 2020  Delhi Delhi     67516 ## 4 Jul 2020  Delhi Delhi     48238 ## 5 Aug 2020  Delhi Delhi     39150 ## 6 Sep 2020  Delhi Delhi    104967"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"plot-monthly-cases-for-new-delhi","dir":"Articles","previous_headings":"Get monthly cases for Delhi","what":"Plot monthly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"p1 <- BarPlot(NewDelhi_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - New Delhi (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-weekly-cases-for-new-delhi","dir":"Articles","previous_headings":"","what":"Get weekly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"New Delhi\"), rename_country_as_state = TRUE)   p2 <- BarPlot(NewDelhi_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"overall-how-much-has-new-delhi-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for New Delhi","what":"Overall, how much has New Delhi sequenced over months?","title":"Animation of projected weekly cases - New Delhi (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases %>% select(MonthYear, value) NewDelhi_monthly_cases_cases_tmp$State <- \"India\" NewDelhi_monthly_cases_cases_tmp$type <- \"Confirmed\"  NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = NewDelhi_seq_stats,   confirmed_long = NewDelhi_monthly_cases_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"New Delhi\")) state_month_counts$State <- \"New Delhi\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New Delhi (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"New Delhi\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Delhi\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 4302.364550  ## iter  10 value 1572.411772 ## iter  20 value 1123.483648 ## iter  30 value 1016.583002 ## iter  40 value 997.937340 ## iter  50 value 984.531287 ## iter  60 value 942.126087 ## iter  70 value 936.966776 ## iter  80 value 921.123735 ## iter  90 value 918.589362 ## iter 100 value 917.222816 ## iter 110 value 909.578643 ## iter 120 value 904.889260 ## iter 130 value 884.024214 ## iter 140 value 881.895719 ## iter 150 value 881.535082 ## iter 160 value 881.350480 ## iter 170 value 878.123292 ## iter 180 value 877.551373 ## iter 190 value 877.435277 ## iter 200 value 876.955929 ## iter 210 value 876.591703 ## iter 220 value 876.355812 ## iter 230 value 876.240571 ## iter 240 value 876.146171 ## iter 250 value 875.879568 ## iter 260 value 874.704121 ## iter 270 value 874.555953 ## iter 280 value 873.851993 ## iter 290 value 873.794558 ## iter 300 value 873.698469 ## iter 310 value 873.641393 ## iter 320 value 873.618964 ## iter 330 value 873.563836 ## iter 340 value 873.404404 ## iter 350 value 873.070723 ## iter 360 value 872.952783 ## iter 370 value 872.816999 ## iter 380 value 872.170816 ## iter 390 value 872.049590 ## iter 400 value 871.972108 ## iter 410 value 871.951503 ## iter 420 value 871.881288 ## iter 430 value 871.370594 ## iter 440 value 871.228169 ## iter 450 value 871.155279 ## iter 460 value 870.875899 ## iter 470 value 870.809158 ## iter 480 value 870.796543 ## iter 490 value 870.783298 ## iter 500 value 870.681166 ## iter 510 value 870.615325 ## iter 520 value 870.569202 ## iter 530 value 870.547611 ## iter 540 value 870.523364 ## iter 550 value 870.476211 ## iter 560 value 870.405940 ## iter 570 value 870.397399 ## iter 580 value 870.384061 ## iter 590 value 870.356252 ## iter 600 value 870.257649 ## final  value 870.225558  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Delhi\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 987.259468  ## iter  10 value 209.938281 ## iter  20 value 191.017827 ## iter  30 value 189.292215 ## iter  40 value 188.434340 ## iter  50 value 187.750904 ## iter  60 value 187.394283 ## iter  70 value 187.164293 ## iter  80 value 187.015105 ## iter  90 value 186.962660 ## iter 100 value 186.868844 ## iter 110 value 186.823994 ## iter 120 value 186.791548 ## iter 130 value 186.759796 ## iter 140 value 186.719025 ## iter 150 value 186.694064 ## iter 160 value 186.685413 ## iter 170 value 186.677086 ## iter 180 value 186.655211 ## iter 190 value 186.632648 ## iter 200 value 186.619366 ## iter 210 value 186.607642 ## iter 220 value 186.588133 ## iter 230 value 186.576262 ## iter 240 value 186.566091 ## iter 250 value 186.539792 ## iter 260 value 186.514579 ## iter 270 value 186.512583 ## iter 280 value 186.498376 ## final  value 186.498347  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2021.gif\"), animation = the_anim) gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 987.259468  ## iter  10 value 209.938281 ## iter  20 value 191.017827 ## iter  30 value 189.292215 ## iter  40 value 188.434340 ## iter  50 value 187.750904 ## iter  60 value 187.394283 ## iter  70 value 187.164293 ## iter  80 value 187.015105 ## iter  90 value 186.962660 ## iter 100 value 186.868844 ## iter 110 value 186.823994 ## iter 120 value 186.791548 ## iter 130 value 186.759796 ## iter 140 value 186.719025 ## iter 150 value 186.694064 ## iter 160 value 186.685413 ## iter 170 value 186.677086 ## iter 180 value 186.655211 ## iter 190 value 186.632648 ## iter 200 value 186.619366 ## iter 210 value 186.607642 ## iter 220 value 186.588133 ## iter 230 value 186.576262 ## iter 240 value 186.566091 ## iter 250 value 186.539792 ## iter 260 value 186.514579 ## iter 270 value 186.512583 ## iter 280 value 186.498376 ## final  value 186.498347  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-variants-data-for-germany","dir":"Articles","previous_headings":"","what":"Get variants data for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_germany <- gisaid_metadata %>%   filter(Country == \"Germany\") %>%   filter(Host == \"Human\") # format metadata gisaid_germany <- FormatGISAIDMetadata(gisaid_germany) %>%   filter(State != \"\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_germany <- gisaid_germany %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_germany <- gisaid_germany %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_germany <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Germany","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_germany) state_month_counts$State <- \"Germany\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-weekly-cases-for-germany","dir":"Articles","previous_headings":"","what":"Get weekly cases for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"confirmed.tmp <- COVID19::covid19(country = \"Germany\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"Germany\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Germany","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  64 (45 variable) ## initial  value 2540642.267503  ## iter  10 value 1439781.343747 ## iter  20 value 1203509.803881 ## iter  30 value 1076173.635804 ## iter  40 value 916393.737790 ## iter  50 value 728492.332291 ## iter  60 value 618735.586083 ## iter  70 value 604650.675566 ## iter  80 value 601314.156450 ## iter  90 value 599086.228527 ## iter 100 value 598617.445986 ## iter 110 value 598093.042912 ## iter 120 value 590857.812676 ## iter 130 value 585940.447420 ## iter 140 value 585700.260797 ## iter 150 value 585590.978341 ## iter 160 value 585581.473952 ## iter 170 value 585579.439515 ## iter 180 value 585577.873180 ## final  value 585576.956959  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_subset <- gisaid_germany %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany_subset)  voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 1367131.215043  ## iter  10 value 751129.978401 ## iter  20 value 656878.821612 ## iter  30 value 569777.083255 ## iter  40 value 452934.360689 ## iter  50 value 436424.073478 ## iter  60 value 432485.179961 ## iter  70 value 431792.714514 ## iter  80 value 430002.612707 ## iter  90 value 429084.144547 ## iter 100 value 429072.081520 ## iter 110 value 429071.839593 ## final  value 429071.789430  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-monthly-cases-for-gujarat","dir":"Articles","previous_headings":"","what":"Get monthly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"Gujarat_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Gujarat\") ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Gujarat_monthly_cases) ##   MonthYear   State value      type ## 1  Mar 2020 Gujarat    74 Confirmed ## 2  Apr 2020 Gujarat  4321 Confirmed ## 3  May 2020 Gujarat 12399 Confirmed ## 4  Jun 2020 Gujarat 15849 Confirmed ## 5  Jul 2020 Gujarat 28795 Confirmed ## 6  Aug 2020 Gujarat 34997 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"plot-monthly-cases-for-gujarat","dir":"Articles","previous_headings":"Get monthly cases for Gujarat","what":"Plot monthly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"p1 <- BarPlot(Gujarat_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Gujarat (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-weekly-cases-for-gujarat","dir":"Articles","previous_headings":"","what":"Get weekly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"Gujarat_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Gujarat\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Gujarat_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Gujarat (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"overall-how-much-has-gujarat-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Gujarat","what":"Overall, how much has Gujarat sequenced over months?","title":"Animation of projected weekly cases - Gujarat (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Gujarat_monthly_cases_tmp <- Gujarat_monthly_cases %>% select(MonthYear, value) Gujarat_monthly_cases_tmp$State <- \"India\" Gujarat_monthly_cases_tmp$type <- \"Confirmed\"  Gujarat_monthly_cases_tmp <- Gujarat_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Gujarat_seq_stats,   confirmed_long = Gujarat_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Gujarat (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Gujarat\")) state_month_counts$State <- \"Gujarat\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Gujarat (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Gujarat\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Gujarat\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 38640.962070  ## iter  10 value 17759.952908 ## iter  20 value 14347.803913 ## iter  30 value 11362.069687 ## iter  40 value 10695.975150 ## iter  50 value 9755.786459 ## iter  60 value 9449.246347 ## iter  70 value 9378.784771 ## iter  80 value 9366.042309 ## iter  90 value 9351.427926 ## iter 100 value 9312.264518 ## iter 110 value 9291.386341 ## iter 120 value 9256.895177 ## iter 130 value 9230.775866 ## iter 140 value 9216.550459 ## iter 150 value 9212.037122 ## iter 160 value 9211.831833 ## iter 170 value 9206.494014 ## iter 180 value 9202.033116 ## iter 190 value 9195.233384 ## iter 200 value 9188.224251 ## iter 210 value 9170.247435 ## iter 220 value 9154.461570 ## iter 230 value 9154.398472 ## iter 240 value 9152.989149 ## iter 250 value 9149.746698 ## iter 260 value 9147.608038 ## iter 270 value 9147.047755 ## iter 280 value 9145.711788 ## iter 290 value 9143.106523 ## final  value 9142.192394  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Gujarat\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Gujarat\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 21292.004355  ## iter  10 value 10036.215284 ## iter  20 value 7983.060175 ## iter  30 value 6743.491050 ## iter  40 value 6607.165393 ## iter  50 value 6574.997157 ## iter  60 value 6547.487320 ## iter  70 value 6535.516383 ## iter  80 value 6515.568899 ## iter  90 value 6505.480685 ## iter 100 value 6502.367356 ## iter 110 value 6501.048101 ## final  value 6501.027250  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Gujarat\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Gujarat\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 21292.004355  ## iter  10 value 10036.215284 ## iter  20 value 7983.060175 ## iter  30 value 6743.491050 ## iter  40 value 6607.165393 ## iter  50 value 6574.997157 ## iter  60 value 6547.487320 ## iter  70 value 6535.516383 ## iter  80 value 6515.568899 ## iter  90 value 6505.480685 ## iter 100 value 6502.367356 ## iter 110 value 6501.048101 ## final  value 6501.027250  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - India","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB\",   `XBB.1.5` = \"XBB\",   `XBB.1` = \"XBB\",   `XBB.1.*` = \"XBB\",   `XBB.*` = \"XBB\",   `XBB.*.*` = \"XBB\",   `XBB.*.*.*` = \"XBB\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `EG.5` = \"EG.5\",   `EG.5.1` = \"EG.5\",   `EG.5.1.1` = \"EG.5\",   `EG.5.*` = \"EG.5\",   `EG.5.1` = \"EG.5\",   # `EG.6.*` = \"EG.6\",   # `EG.6.1` = \"EG.6\",   `FL.1.*` = \"FL.1\",   `FU.1` = \"FU.1\",   `FU.1.*` = \"FU.1\",   `GE.1` = \"GE.1\",   `GE.1.*` = \"GE.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - India","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india) state_month_counts$State <- \"India\" state_month_prevalence <- CountsToPrevalence(state_month_counts) state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases - India","text":"","code":"GetIndiaCases <- function(){     data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")     confirmed <- data %>% select(date, India) colnames(confirmed)[2] <- c(\"cases\") confirmed$MonthYear <- GetMonthYear(confirmed$date) confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed_subset_weekwise <- confirmed %>%       group_by(WeekYear) %>%       summarise(cases = mean(cases, na.rm=T)) %>%       arrange(WeekYear) confirmed_subset_weekwise$cases <- ceiling(confirmed_subset_weekwise$cases)   confirmed_subset_dateweekwise_long_india <- confirmed_subset_weekwise %>%   rename(n = cases) %>%     rename(WeekYearCollected = WeekYear) }   confirmed_subset_dateweekwise_long_india <- GetIndiaCases() gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - India","text":"Look cases January, 2022 :  Look cases last months:  Look cases last months:","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  48 (33 variable) ## initial  value 604075.836750  ## iter  10 value 235976.544538 ## iter  20 value 212153.986350 ## iter  30 value 139945.899603 ## iter  40 value 113679.123438 ## iter  50 value 110022.638477 ## iter  60 value 105815.066736 ## iter  70 value 105574.562342 ## iter  80 value 105519.115583 ## iter  90 value 105361.517688 ## iter 100 value 105099.307257 ## iter 110 value 104547.584253 ## iter 120 value 104524.822283 ## iter 130 value 104494.169133 ## final  value 104488.598072  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**\", date_breaks = \"28 days\") # , trans_y=\"log10\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated.gif\"), animation = the_anim) ##confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() # confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>% #   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>% #   group_by(WeekYear) %>% #   summarise(n = sum(value)) %>% #   arrange(WeekYear) %>% #   rename(WeekYearCollected = WeekYear)  confirmed_subset_dateweekwise_long_india <- GetIndiaCases()  %>%     filter(WeekYearCollected >= tsibble::yearweek(\"2021 W35\"))  gisaid_india <- gisaid_india %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  36 (24 variable) ## initial  value 238633.969671  ## iter  10 value 53468.204824 ## iter  20 value 48360.564173 ## iter  30 value 43074.521263 ## iter  40 value 40511.831383 ## iter  50 value 40172.835897 ## iter  60 value 40105.642898 ## iter  70 value 39956.344863 ## iter  80 value 39940.148446 ## iter  90 value 39936.680911 ## iter 100 value 39926.672331 ## iter 110 value 39926.481012 ## iter 120 value 39926.335257 ## iter 130 value 39926.122636 ## iter 140 value 39925.839577 ## final  value 39925.688679  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") # , trans_y=\"log10\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2021.gif\"), animation = the_anim) # confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() # confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>% #   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>% #   group_by(WeekYear) %>% #   summarise(n = sum(value)) %>% #   arrange(WeekYear) %>% #   rename(WeekYearCollected = WeekYear)  confirmed_subset_dateweekwise_long_india <- GetIndiaCases()  %>%     filter(WeekYearCollected >= tsibble::yearweek(\"2022 W12\"))  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Mar 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  40 (27 variable) ## initial  value 137494.263658  ## iter  10 value 59667.195110 ## iter  20 value 45372.087080 ## iter  30 value 30876.635199 ## iter  40 value 29085.722597 ## iter  50 value 28704.364634 ## iter  60 value 28693.026859 ## iter  70 value 28689.713778 ## iter  80 value 28680.256583 ## iter  90 value 28669.112660 ## iter 100 value 28666.788923 ## iter 110 value 28665.775623 ## final  value 28665.767585  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2022.gif\"), animation = the_anim) #confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  # confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>% #   filter(WeekYear >= tsibble::yearweek(\"2022 W39\")) %>% #   group_by(WeekYear) %>% #   summarise(n = sum(value)) %>% #   arrange(WeekYear) %>% #   rename(WeekYearCollected = WeekYear) confirmed_subset_dateweekwise_long_india <- GetIndiaCases()  %>%     filter(WeekYearCollected >= tsibble::yearweek(\"2022 W39\"))  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Mar 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  40 (27 variable) ## initial  value 137494.263658  ## iter  10 value 59667.195110 ## iter  20 value 45372.087080 ## iter  30 value 30876.635199 ## iter  40 value 29085.722597 ## iter  50 value 28704.364634 ## iter  60 value 28693.026859 ## iter  70 value 28689.713778 ## iter  80 value 28680.256583 ## iter  90 value 28669.112660 ## iter 100 value 28666.788923 ## iter 110 value 28665.775623 ## final  value 28665.767585  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_latest.gif\"), animation = the_anim) #confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  # confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>% #   filter(WeekYear >= tsibble::yearweek(\"2022 W39\")) %>% #   group_by(WeekYear) %>% #   summarise(n = sum(value)) %>% #   arrange(WeekYear) %>% #   rename(WeekYearCollected = WeekYear) confirmed_subset_dateweekwise_long_india <- GetIndiaCases()  %>%     filter(WeekYearCollected >= tsibble::yearweek(\"2023 W23\"))  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"June 2023\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  20 (12 variable) ## initial  value 965.662747  ## iter  10 value 439.891976 ## iter  20 value 426.029384 ## iter  30 value 425.646309 ## iter  40 value 425.517244 ## iter  50 value 424.390486 ## iter  60 value 424.136875 ## iter  70 value 424.133369 ## iter  80 value 424.129239 ## iter  90 value 424.127845 ## iter 100 value 424.127218 ## iter 110 value 424.125652 ## iter 120 value 424.125261 ## iter 130 value 424.121714 ## iter 140 value 424.120022 ## iter 150 value 424.119016 ## iter 160 value 424.115816 ## iter 170 value 424.115442 ## iter 180 value 424.112147 ## iter 190 value 424.111079 ## iter 200 value 424.109666 ## iter 210 value 424.107205 ## iter 220 value 424.106795 ## iter 230 value 424.103937 ## iter 240 value 424.102394 ## iter 250 value 424.101509 ## iter 260 value 424.099739 ## iter 270 value 424.099431 ## iter 280 value 424.096761 ## iter 290 value 424.094860 ## iter 300 value 424.094294 ## iter 310 value 424.092641 ## iter 320 value 424.092446 ## iter 330 value 424.091340 ## iter 340 value 424.090828 ## iter 350 value 424.082070 ## iter 360 value 424.068863 ## final  value 424.068456  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Jaipur\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(chennai_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State     District value ##   <yearmon> <chr>     <chr>    <dbl> ## 1 Apr 2020  Rajasthan Jaipur     907 ## 2 May 2020  Rajasthan Jaipur    1084 ## 3 Jun 2020  Rajasthan Jaipur    1327 ## 4 Jul 2020  Rajasthan Jaipur    2100 ## 5 Aug 2020  Rajasthan Jaipur    5373 ## 6 Sep 2020  Rajasthan Jaipur   10697"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"plot-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"Get monthly cases for Jaipur","what":"Plot monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Jaipur (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-weekly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get weekly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Jaipur\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"overall-how-much-has-jaipur-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Jaipur","what":"Overall, how much has Jaipur sequenced over months?","title":"Animation of projected weekly cases - Jaipur (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Jaipur (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Jaipur\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  40 (27 variable) ## initial  value 11706.342613  ## iter  10 value 4681.457858 ## iter  20 value 3325.044410 ## iter  30 value 2938.538953 ## iter  40 value 2903.499413 ## iter  50 value 2893.454462 ## iter  60 value 2886.934015 ## iter  70 value 2881.288738 ## iter  80 value 2878.495549 ## iter  90 value 2872.100772 ## iter 100 value 2865.587078 ## iter 110 value 2864.104513 ## iter 120 value 2864.001574 ## iter 130 value 2863.350780 ## iter 140 value 2862.395382 ## iter 150 value 2861.821554 ## iter 160 value 2861.059578 ## iter 170 value 2860.837644 ## iter 180 value 2860.742589 ## iter 190 value 2860.225128 ## iter 200 value 2859.887634 ## iter 210 value 2859.745341 ## iter 220 value 2859.447069 ## final  value 2859.442954  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Jaipur\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 8342.861720  ## iter  10 value 2201.853970 ## iter  20 value 1760.387081 ## iter  30 value 1741.001963 ## iter  40 value 1738.075480 ## iter  50 value 1737.470349 ## iter  60 value 1737.383133 ## iter  70 value 1737.021345 ## iter  80 value 1736.696090 ## iter  90 value 1735.985709 ## iter 100 value 1735.223423 ## iter 110 value 1735.215896 ## iter 120 value 1735.153141 ## iter 130 value 1735.093217 ## iter 140 value 1735.066843 ## iter 150 value 1735.054569 ## iter 160 value 1735.047039 ## iter 170 value 1735.045111 ## iter 180 value 1735.038829 ## iter 190 value 1734.946306 ## final  value 1734.930932  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Jaipur\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 8342.861720  ## iter  10 value 2201.853970 ## iter  20 value 1760.387081 ## iter  30 value 1741.001963 ## iter  40 value 1738.075480 ## iter  50 value 1737.470349 ## iter  60 value 1737.383133 ## iter  70 value 1737.021345 ## iter  80 value 1736.696090 ## iter  90 value 1735.985709 ## iter 100 value 1735.223423 ## iter 110 value 1735.215896 ## iter 120 value 1735.153141 ## iter 130 value 1735.093217 ## iter 140 value 1735.066843 ## iter 150 value 1735.054569 ## iter 160 value 1735.047039 ## iter 170 value 1735.045111 ## iter 180 value 1735.038829 ## iter 190 value 1734.946306 ## final  value 1734.930932  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-monthly-cases-for-maharashtra","dir":"Articles","previous_headings":"","what":"Get monthly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"Maharashtra_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Maharashtra\") ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Maharashtra_monthly_cases) ##   MonthYear       State  value      type ## 1  Mar 2020 Maharashtra    302 Confirmed ## 2  Apr 2020 Maharashtra  10196 Confirmed ## 3  May 2020 Maharashtra  57157 Confirmed ## 4  Jun 2020 Maharashtra 107106 Confirmed ## 5  Jul 2020 Maharashtra 247357 Confirmed ## 6  Aug 2020 Maharashtra 370423 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"plot-monthly-cases-for-maharashtra","dir":"Articles","previous_headings":"Get monthly cases for Maharashtra","what":"Plot monthly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"p1 <- BarPlot(Maharashtra_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Maharashtra (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-weekly-cases-for-maharashtra","dir":"Articles","previous_headings":"","what":"Get weekly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"Maharashtra_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Maharashtra\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Maharashtra_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Maharashtra (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"overall-how-much-has-maharashtra-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Maharashtra","what":"Overall, how much has Maharashtra sequenced over months?","title":"Animation of projected weekly cases - Maharashtra (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Maharashtra_monthly_cases_tmp <- Maharashtra_monthly_cases %>% select(MonthYear, value) Maharashtra_monthly_cases_tmp$State <- \"India\" Maharashtra_monthly_cases_tmp$type <- \"Confirmed\"  Maharashtra_monthly_cases_tmp <- Maharashtra_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Maharashtra_seq_stats,   confirmed_long = Maharashtra_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Maharashtra (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Maharashtra\")) state_month_counts$State <- \"Maharashtra\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Maharashtra (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Maharashtra\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Maharashtra\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  56 (39 variable) ## initial  value 92023.929084  ## iter  10 value 43148.604723 ## iter  20 value 37192.554439 ## iter  30 value 28920.802661 ## iter  40 value 23163.196553 ## iter  50 value 22380.484147 ## iter  60 value 21936.981508 ## iter  70 value 21594.682451 ## iter  80 value 21390.868929 ## iter  90 value 21377.189386 ## iter 100 value 21187.212420 ## iter 110 value 21070.780691 ## iter 120 value 21019.407379 ## iter 130 value 20893.391633 ## iter 140 value 20858.098987 ## iter 150 value 20821.592576 ## final  value 20814.325287  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Maharashtra\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Maharashtra\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 37716.494746  ## iter  10 value 16998.392223 ## iter  20 value 14115.560398 ## iter  30 value 12637.114844 ## iter  40 value 12171.147475 ## iter  50 value 12110.006507 ## iter  60 value 12090.619760 ## iter  70 value 12083.662636 ## iter  80 value 12069.983645 ## iter  90 value 12039.444856 ## iter 100 value 12033.113264 ## iter 110 value 12032.103922 ## iter 120 value 12030.543442 ## final  value 12030.368635  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Maharashtra\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Maharashtra\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 37716.494746  ## iter  10 value 16998.392223 ## iter  20 value 14115.560398 ## iter  30 value 12637.114844 ## iter  40 value 12171.147475 ## iter  50 value 12110.006507 ## iter  60 value 12090.619760 ## iter  70 value 12083.662636 ## iter  80 value 12069.983645 ## iter  90 value 12039.444856 ## iter 100 value 12033.113264 ## iter 110 value 12032.103922 ## iter 120 value 12030.543442 ## final  value 12030.368635  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Mumbai\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Mumbai_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  Maharashtra Mumbai    7061 ## 2 May 2020  Maharashtra Mumbai   32625 ## 3 Jun 2020  Maharashtra Mumbai   37972 ## 4 Jul 2020  Maharashtra Mumbai   36626 ## 5 Aug 2020  Maharashtra Mumbai   32340 ## 6 Sep 2020  Maharashtra Mumbai   59463"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"plot-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"Get monthly cases for Mumbai","what":"Plot monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"p1 <- BarPlot(Mumbai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Mumbai (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-weekly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Mumbai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Mumbai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"overall-how-much-has-mumbai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Mumbai","what":"Overall, how much has Mumbai sequenced over months?","title":"Animation of projected weekly cases - Mumbai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases %>% select(MonthYear, value) Mumbai_monthly_cases_tmp$State <- \"India\" Mumbai_monthly_cases_tmp$type <- \"Confirmed\"  Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Mumbai_seq_stats,   confirmed_long = Mumbai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"Mumbai\")) state_month_counts$State <- \"Mumbai\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Mumbai (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Mumbai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 15574.329797  ## iter  10 value 7180.065979 ## iter  20 value 4687.044311 ## iter  30 value 4136.486563 ## iter  40 value 3969.175266 ## iter  50 value 3825.992578 ## iter  60 value 3799.447246 ## iter  70 value 3780.892669 ## iter  80 value 3777.022187 ## iter  90 value 3766.742649 ## iter 100 value 3759.681911 ## iter 110 value 3750.156800 ## iter 120 value 3732.670839 ## iter 130 value 3732.047471 ## iter 140 value 3729.770426 ## iter 150 value 3727.391408 ## iter 160 value 3725.303330 ## iter 170 value 3721.171763 ## iter 180 value 3718.983600 ## iter 190 value 3718.679393 ## iter 200 value 3718.266131 ## iter 210 value 3717.388299 ## iter 220 value 3716.550086 ## iter 230 value 3714.654290 ## iter 240 value 3711.627573 ## iter 250 value 3709.147146 ## iter 260 value 3707.628286 ## iter 270 value 3706.024935 ## iter 280 value 3705.084712 ## iter 290 value 3704.698938 ## iter 300 value 3704.246989 ## final  value 3703.258517  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Mumbai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 8236.346878  ## iter  10 value 3535.607096 ## iter  20 value 2813.442453 ## iter  30 value 2610.377376 ## iter  40 value 2578.461798 ## iter  50 value 2569.905312 ## iter  60 value 2553.883708 ## iter  70 value 2552.515452 ## iter  80 value 2550.730665 ## iter  90 value 2548.764127 ## iter 100 value 2546.005380 ## iter 110 value 2544.766794 ## iter 120 value 2544.734442 ## iter 130 value 2544.663193 ## iter 140 value 2544.585915 ## iter 150 value 2544.447931 ## iter 160 value 2544.395797 ## iter 170 value 2544.295029 ## iter 180 value 2544.210785 ## iter 190 value 2544.163845 ## iter 200 value 2544.089318 ## iter 210 value 2543.958257 ## iter 220 value 2543.905407 ## final  value 2543.903712  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Mumbai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 8236.346878  ## iter  10 value 3535.607096 ## iter  20 value 2813.442453 ## iter  30 value 2610.377376 ## iter  40 value 2578.461798 ## iter  50 value 2569.905312 ## iter  60 value 2553.883708 ## iter  70 value 2552.515452 ## iter  80 value 2550.730665 ## iter  90 value 2548.764127 ## iter 100 value 2546.005380 ## iter 110 value 2544.766794 ## iter 120 value 2544.734442 ## iter 130 value 2544.663193 ## iter 140 value 2544.585915 ## iter 150 value 2544.447931 ## iter 160 value 2544.395797 ## iter 170 value 2544.295029 ## iter 180 value 2544.210785 ## iter 190 value 2544.163845 ## iter 200 value 2544.089318 ## iter 210 value 2543.958257 ## iter 220 value 2543.905407 ## final  value 2543.903712  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York City","text":"","code":"counties <- c(\"New York\", \"New York City\", \"New York County\", \"Queens County\", \"Bronx County\", \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Richmond County\")  gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")   gisaid_NYC <- gisaid_NY %>% filter(District %in% counties)  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB\",   `XBB.1.5` = \"XBB\",   `XBB.1` = \"XBB\",   `XBB.1.*` = \"XBB\",   `XBB.*` = \"XBB\",   `XBB.*.*` = \"XBB\",   `XBB.*.*.*` = \"XBB\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `EG.5` = \"EG.5\",   `EG.5.1` = \"EG.5\",   `EG.5.1.1` = \"EG.5\",   `EG.5.*` = \"EG.5\",   `EG.5.1` = \"EG.5\",   # `EG.6.*` = \"EG.6\",   # `EG.6.1` = \"EG.6\",   `FL.1.*` = \"FL.1\",   `FU.1` = \"FU.1\",   `FU.1.*` = \"FU.1\",   `GJ.1.2` = \"GJ.1\",   `GJ.1.*` = \"GJ.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" )  gisaid_NYC <- gisaid_NYC %>% filter(pangolin_lineage != \"None\")  gisaid_NYC <- CollapseLineageToVOCs(   variant_df = gisaid_NYC,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York City","text":"","code":"confirmed <- read_csv(\"https://raw.githubusercontent.com/nychealth/coronavirus-data/master/trends/data-by-day.csv\") %>% select(date_of_interest, CASE_COUNT) colnames(confirmed) <- c(\"date\", \"daily_cases\") confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date, datefmt = \"%m/%d/%Y\")  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_NYC_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New York City","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_NYC) state_month_counts$State <- \"NYC\" state_month_prevalence <- CountsToPrevalence(state_month_counts)   state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York City","text":"Look cases 2023:","code":"voc_to_keep <- gisaid_NYC_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NYC_weekwise <- gisaid_NYC_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NYC_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  68 (48 variable) ## initial  value 434439.267751  ## iter  10 value 173016.817439 ## iter  20 value 155358.398122 ## iter  30 value 136840.988847 ## iter  40 value 113494.176289 ## iter  50 value 95852.757915 ## iter  60 value 91113.508463 ## iter  70 value 88721.981195 ## iter  80 value 85254.092934 ## iter  90 value 82776.065312 ## iter 100 value 80818.029442 ## iter 110 value 80752.389195 ## iter 120 value 80594.854959 ## iter 130 value 80209.950165 ## iter 140 value 80090.170987 ## iter 150 value 79944.617960 ## iter 160 value 79888.464142 ## iter 170 value 79869.544153 ## iter 180 value 79815.785262 ## iter 190 value 79744.247569 ## final  value 79731.355495  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and NYC Health**<br>\", date_breaks = \"14 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"April 2023\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_subset <- gisaid_NYC %>% filter(MonthYearCollected > \"April 2023\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC_subset)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 8703.771652  ## iter  10 value 5783.480286 ## iter  20 value 5322.331902 ## iter  30 value 5286.886121 ## iter  40 value 5283.574339 ## iter  50 value 5282.366585 ## iter  60 value 5281.513676 ## iter  70 value 5281.440509 ## iter  80 value 5281.368720 ## iter  90 value 5281.243714 ## iter 100 value 5280.561320 ## iter 110 value 5280.405977 ## final  value 5280.337345  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and NYC Health**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York State","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB\",   `XBB.1.5` = \"XBB\",   `XBB.1` = \"XBB\",   `XBB.1.*` = \"XBB\",   `XBB.*` = \"XBB\",   `XBB.*.*` = \"XBB\",   `XBB.*.*.*` = \"XBB\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `EG.5` = \"EG.5\",   `EG.5.1` = \"EG.5\",   `EG.5.1.1` = \"EG.5\",   `EG.5.*` = \"EG.5\",   `EG.5.1` = \"EG.5\",   # `EG.6.*` = \"EG.6\",   # `EG.6.1` = \"EG.6\",   `FL.1.*` = \"FL.1\",   `FU.1` = \"FU.1\",   `FU.1.*` = \"FU.1\",   `GJ.1.2` = \"GJ.1\",   `GJ.1.*` = \"GJ.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_NY <- gisaid_NY %>% filter(pangolin_lineage != \"None\")  gisaid_NY <- CollapseLineageToVOCs(   variant_df = gisaid_NY,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York State","text":"","code":"confirmed <- covid19(country = \"USA\", level = 2) %>%   filter(administrative_area_level_2 == \"New York\") %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) ## We have invested a lot of time and effort in creating COVID-19 Data ## Hub, please cite the following when using it: ##  ##   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open ##   Source Software 5(51):2376, doi: 10.21105/joss.02376 ##  ## The implementation details and the latest version of the data are ## described in: ##  ##   Guidotti, E., (2022), \"A worldwide epidemiological database for ##   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: ##   10.1038/s41597-022-01245-1 ## To print citations in BibTeX format use: ##  > print(citation('COVID19'), bibtex=TRUE) ##  ## To hide this message use 'verbose = FALSE'. confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New York State","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_NY) state_month_counts$State <- \"New York\" state_month_prevalence <- CountsToPrevalence(state_month_counts) state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York State","text":"Look cases february, 2022 :","code":"voc_to_keep <- gisaid_NY_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NY_weekwise <- gisaid_NY_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NY_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  76 (54 variable) ## initial  value 1015148.337969  ## iter  10 value 631419.083049 ## iter  20 value 519405.483874 ## iter  30 value 479055.198438 ## iter  40 value 396379.020074 ## iter  50 value 299460.481058 ## iter  60 value 233840.400269 ## iter  70 value 210296.211240 ## iter  80 value 201831.548058 ## iter  90 value 200353.795054 ## iter 100 value 195654.342528 ## iter 110 value 193635.679095 ## iter 120 value 193571.888298 ## iter 130 value 192564.660473 ## iter 140 value 189677.376784 ## iter 150 value 188847.339786 ## iter 160 value 188407.572689 ## iter 170 value 188228.517085 ## iter 180 value 188051.004238 ## iter 190 value 187986.730188 ## iter 200 value 187895.963001 ## iter 210 value 187846.501863 ## iter 220 value 187822.569489 ## iter 230 value 187820.681238 ## iter 240 value 187818.372135 ## iter 250 value 187815.193878 ## iter 260 value 187810.848926 ## iter 270 value 187802.398120 ## iter 280 value 187797.954223 ## iter 290 value 187791.287218 ## iter 300 value 187772.889951 ## iter 310 value 187764.794759 ## iter 320 value 187754.657441 ## final  value 187745.638830  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"December 2022\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY <- gisaid_NY %>% filter(MonthYearCollected > \"December 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 79029.773598  ## iter  10 value 53525.444998 ## iter  20 value 45004.053814 ## iter  30 value 39644.736140 ## iter  40 value 39263.697715 ## iter  50 value 39226.255120 ## iter  60 value 39222.519142 ## iter  70 value 39201.051697 ## iter  80 value 39195.738991 ## iter  90 value 39189.650061 ## final  value 39188.627238  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-monthly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Pune\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(pune_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District  value ##   <yearmon> <chr>       <chr>     <dbl> ## 1 Apr 2020  Maharashtra Pune       1248 ## 2 May 2020  Maharashtra Pune       6671 ## 3 Jun 2020  Maharashtra Pune      14408 ## 4 Jul 2020  Maharashtra Pune      66904 ## 5 Aug 2020  Maharashtra Pune      85874 ## 6 Sep 2020  Maharashtra Pune     117959"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"plot-monthly-cases-for-pune","dir":"Articles","previous_headings":"Get monthly cases for Pune","what":"Plot monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"p1 <- BarPlot(pune_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Pune (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-weekly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get weekly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Pune\"), rename_country_as_state = TRUE)   p2 <- BarPlot(pune_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"overall-how-much-has-pune-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Pune","what":"Overall, how much has Pune sequenced over months?","title":"Animation of projected weekly cases - Pune (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"pune_monthly_cases_tmp <- pune_monthly_cases %>% select(MonthYear, value) pune_monthly_cases_tmp$State <- \"India\" pune_monthly_cases_tmp$type <- \"Confirmed\"  pune_monthly_cases_tmp <- pune_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = pune_seq_stats,   confirmed_long = pune_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Pune (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Pune\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Pune\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 26352.289699  ## iter  10 value 12149.978224 ## iter  20 value 8036.150680 ## iter  30 value 6841.077820 ## iter  40 value 6634.932288 ## iter  50 value 6572.953790 ## iter  60 value 6553.776626 ## iter  70 value 6532.473890 ## iter  80 value 6528.822986 ## iter  90 value 6521.000676 ## iter 100 value 6510.634626 ## iter 110 value 6495.292745 ## iter 120 value 6478.731801 ## iter 130 value 6438.698652 ## iter 140 value 6430.709226 ## iter 150 value 6423.568222 ## iter 160 value 6422.558746 ## iter 170 value 6418.758640 ## iter 180 value 6415.494973 ## iter 190 value 6410.831263 ## iter 200 value 6405.327805 ## iter 210 value 6399.681903 ## iter 220 value 6397.266154 ## iter 230 value 6397.162142 ## iter 240 value 6396.441913 ## iter 250 value 6395.923755 ## iter 260 value 6394.985592 ## iter 270 value 6393.571037 ## iter 280 value 6392.945737 ## iter 290 value 6391.914254 ## iter 300 value 6391.118501 ## iter 310 value 6390.816678 ## iter 320 value 6390.355939 ## iter 330 value 6389.818836 ## iter 340 value 6389.438125 ## iter 350 value 6388.701170 ## iter 360 value 6388.253118 ## iter 370 value 6387.363307 ## iter 380 value 6387.096305 ## iter 390 value 6386.465474 ## iter 400 value 6386.372159 ## iter 410 value 6385.898503 ## iter 420 value 6385.629354 ## iter 430 value 6385.346768 ## iter 440 value 6383.930734 ## iter 450 value 6383.719758 ## iter 460 value 6383.302070 ## iter 470 value 6383.090451 ## iter 480 value 6382.947928 ## iter 490 value 6382.739038 ## iter 500 value 6382.572585 ## iter 510 value 6382.324834 ## iter 520 value 6382.284026 ## iter 530 value 6382.260446 ## iter 540 value 6382.176967 ## iter 550 value 6381.975426 ## iter 560 value 6381.812013 ## iter 570 value 6381.693596 ## iter 580 value 6380.940985 ## iter 590 value 6380.704090 ## iter 600 value 6380.646240 ## iter 610 value 6380.144123 ## iter 620 value 6380.026803 ## iter 630 value 6379.905817 ## iter 640 value 6379.780094 ## iter 650 value 6379.662825 ## final  value 6379.573208  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Pune\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Pune\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 10200.646490  ## iter  10 value 4378.879798 ## iter  20 value 3793.374664 ## iter  30 value 3558.822124 ## iter  40 value 3501.290486 ## iter  50 value 3489.570912 ## iter  60 value 3478.714401 ## iter  70 value 3478.393867 ## iter  80 value 3475.846506 ## iter  90 value 3473.608510 ## iter 100 value 3469.873682 ## iter 110 value 3466.262149 ## iter 120 value 3463.743740 ## iter 130 value 3463.251829 ## iter 140 value 3462.813786 ## iter 150 value 3462.467938 ## iter 160 value 3462.188804 ## iter 170 value 3462.068295 ## iter 180 value 3461.959438 ## final  value 3461.917495  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Pune\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Pune\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 10200.646490  ## iter  10 value 4378.879798 ## iter  20 value 3793.374664 ## iter  30 value 3558.822124 ## iter  40 value 3501.290486 ## iter  50 value 3489.570912 ## iter  60 value 3478.714401 ## iter  70 value 3478.393867 ## iter  80 value 3475.846506 ## iter  90 value 3473.608510 ## iter 100 value 3469.873682 ## iter 110 value 3466.262149 ## iter 120 value 3463.743740 ## iter 130 value 3463.251829 ## iter 140 value 3462.813786 ## iter 150 value 3462.467938 ## iter 160 value 3462.188804 ## iter 170 value 3462.068295 ## iter 180 value 3461.959438 ## final  value 3461.917495  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"get-variants-data-for-singapore","dir":"Articles","previous_headings":"","what":"Get variants data for Singapore","title":"Animation of projected weekly cases - Singapore","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_singapore <- gisaid_metadata %>%   filter(Country == \"Singapore\") %>%   filter(Host == \"Human\") # format metadata gisaid_singapore <- FormatGISAIDMetadata(gisaid_singapore) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_singapore <- gisaid_singapore %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `XBB` = \"XBB\",   `XBB.1.5` = \"XBB\",   `XBB.1` = \"XBB\",   `XBB.1.*` = \"XBB\",   `XBB.*` = \"XBB\",   `XBB.*.*` = \"XBB\",   `XBB.*.*.*` = \"XBB\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `EG.5` = \"EG.5\",   `EG.5.1` = \"EG.5\",   `EG.5.1.1` = \"EG.5\",   `EG.5.*` = \"EG.5\",   `EG.5.1` = \"EG.5\",   # `EG.6.*` = \"EG.6\",   # `EG.6.1` = \"EG.6\",   `FL.1.*` = \"FL.1\",   `FU.1` = \"FU.1\",   `FU.1.*` = \"FU.1\",   `GJ.1.2` = \"GJ.1\",   `GJ.1.*` = \"GJ.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_singapore <- gisaid_singapore %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_singapore <- CollapseLineageToVOCs(   variant_df = gisaid_singapore,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Singapore","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_singapore) state_month_counts$State <- \"Singapore\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"get-weekly-cases-for-singapore","dir":"Articles","previous_headings":"","what":"Get weekly cases for Singapore","title":"Animation of projected weekly cases - Singapore","text":"","code":"confirmed.tmp <- COVID19::covid19(country = \"Singapore\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"Singapore\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Singapore","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 112777.488301  ## iter  10 value 70998.320382 ## iter  20 value 55535.244117 ## iter  30 value 42155.896095 ## iter  40 value 31119.632795 ## iter  50 value 29716.136575 ## iter  60 value 27605.309762 ## iter  70 value 26758.262210 ## iter  80 value 26576.313059 ## iter  90 value 25740.921595 ## iter 100 value 25588.913380 ## iter 110 value 25489.968014 ## iter 120 value 25361.022517 ## iter 130 value 25294.446471 ## iter 140 value 25291.699956 ## iter 150 value 25291.304910 ## iter 160 value 25289.325507 ## iter 170 value 25282.195065 ## iter 180 value 25279.311776 ## iter 190 value 25276.626246 ## iter 200 value 25271.838161 ## iter 210 value 25265.997838 ## iter 220 value 25265.938086 ## iter 230 value 25265.753266 ## iter 240 value 25265.544276 ## iter 250 value 25264.969913 ## iter 260 value 25264.508453 ## iter 270 value 25264.235455 ## iter 280 value 25264.222840 ## iter 290 value 25264.194407 ## iter 300 value 25264.182133 ## iter 310 value 25264.136921 ## iter 320 value 25264.003535 ## iter 330 value 25263.809103 ## final  value 25263.735676  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"December 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_singapore_subset <- gisaid_singapore %>% filter(MonthYearCollected > \"December 2021\") gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore_subset)  voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 77993.162270  ## iter  10 value 33531.245289 ## iter  20 value 25485.472230 ## iter  30 value 24344.069554 ## iter  40 value 23377.223683 ## iter  50 value 23297.991483 ## iter  60 value 23278.379205 ## iter  70 value 23274.388286 ## iter  80 value 23266.063041 ## iter  90 value 23263.701704 ## iter 100 value 23262.301307 ## iter 110 value 23261.670890 ## iter 120 value 23261.591752 ## iter 130 value 23261.537258 ## iter 140 value 23261.181934 ## iter 150 value 23260.935032 ## iter 160 value 23260.631141 ## iter 170 value 23260.076337 ## iter 180 value 23260.002005 ## iter 190 value 23259.799813 ## iter 200 value 23259.549668 ## iter 210 value 23259.434331 ## iter 220 value 23258.909203 ## final  value 23258.791206  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-variants-data-for-south-africa","dir":"Articles","previous_headings":"","what":"Get variants data for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_sa <- gisaid_metadata %>%   filter(Country == \"South Africa\") %>%   filter(Host == \"Human\") # format metadata gisaid_sa <- FormatGISAIDMetadata(gisaid_sa) gisaid_sa$State <- CleanSouthAfricanStates(gisaid_sa$State)  gisaid_sa <- gisaid_sa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `XBB` = \"XBB\",   `XBB.1.5` = \"XBB\",   `XBB.1` = \"XBB\",   `XBB.1.*` = \"XBB\",   `XBB.*` = \"XBB\",   `XBB.*.*` = \"XBB\",   `XBB.*.*.*` = \"XBB\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `EG.5` = \"EG.5\",   `EG.5.1` = \"EG.5\",   `EG.5.1.1` = \"EG.5\",   `EG.5.*` = \"EG.5\",   `EG.5.1` = \"EG.5\",   # `EG.6.*` = \"EG.6\",   # `EG.6.1` = \"EG.6\",   `FL.1.*` = \"FL.1\",   `FU.1` = \"FU.1\",   `FU.1.*` = \"FU.1\",   `GJ.1.2` = \"GJ.1\",   `GJ.1.*` = \"GJ.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_sa <- gisaid_sa %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_sa <- CollapseLineageToVOCs(   variant_df = gisaid_sa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-weekly-cases-for-south-africa","dir":"Articles","previous_headings":"","what":"Get weekly cases for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - South Africa","text":"Look cases December, 2021 :","code":"voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 97577.428935  ## iter  10 value 55154.515637 ## iter  20 value 27745.616633 ## iter  30 value 19320.442106 ## iter  40 value 19074.963353 ## iter  50 value 18037.261827 ## iter  60 value 17761.240412 ## iter  70 value 17755.556967 ## iter  80 value 17717.403434 ## iter  90 value 17618.849335 ## iter 100 value 17616.957595 ## iter 110 value 17594.139994 ## iter 120 value 17580.872937 ## iter 130 value 17578.935221 ## iter 140 value 17575.180065 ## iter 150 value 17561.415964 ## iter 160 value 17559.971069 ## iter 170 value 17559.071790 ## iter 180 value 17553.115864 ## iter 190 value 17552.670738 ## final  value 17552.668116  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"December 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_subset <- gisaid_sa %>% filter(MonthYearCollected > \"December 2021\") gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa_subset)  voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  16 (9 variable) ## initial  value 28414.875520  ## iter  10 value 6243.071215 ## iter  20 value 5008.362379 ## iter  30 value 4922.237907 ## final  value 4921.335322  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-monthly-cases-for-tamilnadu","dir":"Articles","previous_headings":"","what":"Get monthly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"Tamilnadu_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Tamil Nadu\") ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Tamilnadu_monthly_cases) ##   MonthYear      State  value      type ## 1  Mar 2020 Tamil Nadu    124 Confirmed ## 2  Apr 2020 Tamil Nadu   2199 Confirmed ## 3  May 2020 Tamil Nadu  20010 Confirmed ## 4  Jun 2020 Tamil Nadu  67834 Confirmed ## 5  Jul 2020 Tamil Nadu 155692 Confirmed ## 6  Aug 2020 Tamil Nadu 182182 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"plot-monthly-cases-for-tamilnadu","dir":"Articles","previous_headings":"Get monthly cases for Tamilnadu","what":"Plot monthly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"p1 <- BarPlot(Tamilnadu_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Tamilnadu (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-weekly-cases-for-tamilnadu","dir":"Articles","previous_headings":"","what":"Get weekly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"Tamilnadu_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Tamil Nadu\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Tamilnadu_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Tamilnadu (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"overall-how-much-has-tamilnadu-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Tamilnadu","what":"Overall, how much has Tamilnadu sequenced over months?","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Tamilnadu_monthly_cases_tmp <- Tamilnadu_monthly_cases %>% select(MonthYear, value) Tamilnadu_monthly_cases_tmp$State <- \"India\" Tamilnadu_monthly_cases_tmp$type <- \"Confirmed\"  Tamilnadu_monthly_cases_tmp <- Tamilnadu_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Tamilnadu_seq_stats,   confirmed_long = Tamilnadu_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Tamilnadu (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Tamil Nadu\")) state_month_counts$State <- \"Tamil Nadu\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Tamil Nadu\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 48882.804855  ## iter  10 value 22261.083247 ## iter  20 value 16795.407813 ## iter  30 value 14581.674819 ## iter  40 value 13685.708514 ## iter  50 value 13450.947012 ## iter  60 value 13385.513385 ## iter  70 value 13270.613242 ## iter  80 value 13159.881372 ## iter  90 value 13086.982518 ## iter 100 value 13029.959873 ## iter 110 value 13016.284117 ## iter 120 value 13004.515557 ## iter 130 value 12983.865946 ## iter 140 value 12968.678386 ## iter 150 value 12964.228832 ## iter 160 value 12963.962687 ## iter 170 value 12960.911855 ## iter 180 value 12956.023478 ## iter 190 value 12952.260955 ## iter 200 value 12951.643359 ## iter 210 value 12947.955830 ## iter 220 value 12945.278964 ## iter 220 value 12945.278842 ## final  value 12945.278842  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Tamil Nadu\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 21887.988050  ## iter  10 value 12913.556566 ## iter  20 value 10039.840106 ## iter  30 value 9160.350931 ## iter  40 value 9024.790026 ## iter  50 value 8994.142902 ## iter  60 value 8989.212071 ## iter  70 value 8986.497678 ## iter  80 value 8983.372214 ## iter  90 value 8977.915907 ## iter 100 value 8973.008756 ## iter 110 value 8970.750450 ## iter 120 value 8970.597054 ## final  value 8970.575063  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Tamil Nadu\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 21887.988050  ## iter  10 value 12913.556566 ## iter  20 value 10039.840106 ## iter  30 value 9160.350931 ## iter  40 value 9024.790026 ## iter  50 value 8994.142902 ## iter  60 value 8989.212071 ## iter  70 value 8986.497678 ## iter  80 value 8983.372214 ## iter  90 value 8977.915907 ## iter 100 value 8973.008756 ## iter 110 value 8970.750450 ## iter 120 value 8970.597054 ## final  value 8970.575063  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-monthly-cases-for-telangana","dir":"Articles","previous_headings":"","what":"Get monthly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"Telangana_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Telangana\") ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Telangana_monthly_cases) ##   MonthYear     State value      type ## 1  Mar 2020 Telangana    97 Confirmed ## 2  Apr 2020 Telangana   941 Confirmed ## 3  May 2020 Telangana  1660 Confirmed ## 4  Jun 2020 Telangana 13641 Confirmed ## 5  Jul 2020 Telangana 46364 Confirmed ## 6  Aug 2020 Telangana 61750 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"plot-monthly-cases-for-telangana","dir":"Articles","previous_headings":"Get monthly cases for Telangana","what":"Plot monthly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"p1 <- BarPlot(Telangana_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Telangana (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-weekly-cases-for-telangana","dir":"Articles","previous_headings":"","what":"Get weekly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"Telangana_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Telangana\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Telangana_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Telangana (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"overall-how-much-has-telangana-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Telangana","what":"Overall, how much has Telangana sequenced over months?","title":"Animation of projected weekly cases - Telangana (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Telangana_monthly_cases_tmp <- Telangana_monthly_cases %>% select(MonthYear, value) Telangana_monthly_cases_tmp$State <- \"India\" Telangana_monthly_cases_tmp$type <- \"Confirmed\"  Telangana_monthly_cases_tmp <- Telangana_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Telangana_seq_stats,   confirmed_long = Telangana_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Telangana (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Telangana\")) state_month_counts$State <- \"Telangana\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Telangana (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Telangana\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Telangana\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  60 (42 variable) ## initial  value 53619.393982  ## iter  10 value 20154.531472 ## iter  20 value 15687.664547 ## iter  30 value 12108.054248 ## iter  40 value 11597.304252 ## iter  50 value 11283.343463 ## iter  60 value 11204.782808 ## iter  70 value 11187.634497 ## iter  80 value 11178.025018 ## iter  90 value 11172.513747 ## iter 100 value 11169.598277 ## iter 110 value 11160.554027 ## iter 120 value 11156.394683 ## iter 130 value 11146.402140 ## iter 140 value 11123.055827 ## iter 150 value 11113.935759 ## iter 160 value 11107.484856 ## iter 170 value 11103.149835 ## final  value 11103.130856  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Telangana\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Telangana\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 20286.194008  ## iter  10 value 7257.332005 ## iter  20 value 5875.291576 ## iter  30 value 5568.428139 ## iter  40 value 5539.667031 ## iter  50 value 5527.818322 ## iter  60 value 5522.374997 ## iter  70 value 5521.089292 ## iter  80 value 5518.958355 ## iter  90 value 5514.596580 ## iter 100 value 5513.700343 ## iter 110 value 5512.638653 ## iter 120 value 5512.390664 ## iter 130 value 5512.125998 ## iter 140 value 5512.096798 ## iter 150 value 5512.077955 ## iter 160 value 5512.045935 ## iter 170 value 5512.002319 ## iter 180 value 5511.929255 ## iter 190 value 5511.899297 ## iter 200 value 5511.889324 ## iter 210 value 5511.873786 ## iter 220 value 5511.860573 ## iter 230 value 5511.846093 ## iter 240 value 5511.839277 ## final  value 5511.833946  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Telangana\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Telangana\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 20286.194008  ## iter  10 value 7257.332005 ## iter  20 value 5875.291576 ## iter  30 value 5568.428139 ## iter  40 value 5539.667031 ## iter  50 value 5527.818322 ## iter  60 value 5522.374997 ## iter  70 value 5521.089292 ## iter  80 value 5518.958355 ## iter  90 value 5514.596580 ## iter 100 value 5513.700343 ## iter 110 value 5512.638653 ## iter 120 value 5512.390664 ## iter 130 value 5512.125998 ## iter 140 value 5512.096798 ## iter 150 value 5512.077955 ## iter 160 value 5512.045935 ## iter 170 value 5512.002319 ## iter 180 value 5511.929255 ## iter 190 value 5511.899297 ## iter 200 value 5511.889324 ## iter 210 value 5511.873786 ## iter 220 value 5511.860573 ## iter 230 value 5511.846093 ## iter 240 value 5511.839277 ## final  value 5511.833946  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-variants-data-for-uk","dir":"Articles","previous_headings":"","what":"Get variants data for UK","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_uk <- gisaid_metadata %>%   filter(Country == \"United Kingdom\") %>%   filter(Host == \"Human\") # format metadata gisaid_uk <- FormatGISAIDMetadata(gisaid_uk)  gisaid_uk <- gisaid_uk %>% filter(State != \"\")  gisaid_uk <- gisaid_uk %>%   filter(pangolin_lineage != \"Unknown\") %>%   arrange(State, MonthYearCollected) %>%   filter(!is.na(MonthYearCollected))  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `XBB` = \"XBB\",   `XBB.1.5` = \"XBB\",   `XBB.1` = \"XBB\",   `XBB.1.*` = \"XBB\",   `XBB.*` = \"XBB\",   `XBB.*.*` = \"XBB\",   `XBB.*.*.*` = \"XBB\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `EG.5` = \"EG.5\",   `EG.5.1` = \"EG.5\",   `EG.5.1.1` = \"EG.5\",   `EG.5.*` = \"EG.5\",   `EG.5.1` = \"EG.5\",   # `EG.6.*` = \"EG.6\",   # `EG.6.1` = \"EG.6\",   `FL.1.*` = \"FL.1\",   `FU.1` = \"FU.1\",   `FU.1.*` = \"FU.1\",   `GJ.1.2` = \"GJ.1\",   `GJ.1.*` = \"GJ.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_uk <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-daily-case-data","dir":"Articles","previous_headings":"","what":"Get daily case data","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"if (FALSE) {   cases.struct <- list(     date = \"date\",     areaName = \"areaName\",     newCasesByPublishDate = \"newCasesByPublishDate\"   )   all_nations <- c(     \"areaType=nation\"   )   cases_data <- get_data(     filters = all_nations,     structure = cases.struct   ) %>% rename(new_cases = newCasesByPublishDate)     confirmed <- cases_data %>%     arrange(date) %>%     group_by(date) %>%     summarise(daily_cases = sum(new_cases)) } confirmed <- covid19(country = \"United Kingdom\", level = 1) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) ## We have invested a lot of time and effort in creating COVID-19 Data ## Hub, please cite the following when using it: ##  ##   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open ##   Source Software 5(51):2376, doi: 10.21105/joss.02376 ##  ## The implementation details and the latest version of the data are ## described in: ##  ##   Guidotti, E., (2022), \"A worldwide epidemiological database for ##   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: ##   10.1038/s41597-022-01245-1 ## To print citations in BibTeX format use: ##  > print(citation('COVID19'), bibtex=TRUE) ##  ## To hide this message use 'verbose = FALSE'. confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_uk) state_month_counts$State <- \"UK\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - United Kingdom","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_uk_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_uk_weekwise <- gisaid_uk_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  uk_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_uk_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  60 (42 variable) ## initial  value 8168714.277416  ## iter  10 value 2675917.378547 ## iter  20 value 2475649.541958 ## iter  30 value 2191371.902824 ## iter  40 value 1737428.470707 ## iter  50 value 705922.984654 ## iter  60 value 539468.213043 ## iter  70 value 513231.591157 ## iter  80 value 497537.146588 ## iter  90 value 492710.975631 ## iter 100 value 490594.090104 ## iter 110 value 482589.391834 ## iter 120 value 470810.368778 ## iter 130 value 463123.206401 ## iter 140 value 460998.287373 ## iter 150 value 460676.530944 ## iter 160 value 460403.201064 ## iter 170 value 460292.334399 ## iter 180 value 460267.981518 ## iter 190 value 460253.845325 ## iter 200 value 459935.914657 ## iter 210 value 459432.721085 ## iter 220 value 459408.624055 ## iter 230 value 459370.597384 ## iter 240 value 459330.462401 ## iter 250 value 459310.876298 ## final  value 459283.271146  ## converged the_anim <- PlotVariantPrevalenceAnimated(uk_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and gov.uk**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"December 2022\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk <- gisaid_uk %>% filter(MonthYearCollected > \"December 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 213143.967349  ## iter  10 value 120464.538659 ## iter  20 value 111721.846807 ## iter  30 value 104026.862104 ## iter  40 value 103526.849238 ## iter  50 value 103512.513637 ## iter  60 value 103508.720244 ## iter  70 value 103490.484388 ## iter  80 value 103466.863271 ## iter  90 value 103453.043003 ## final  value 103450.597552  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the UK by variant\", caption = \"**Source: gisaid.org and gov.uk**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-variants-data-for-usa","dir":"Articles","previous_headings":"","what":"Get variants data for USA","title":"Animation of projected weekly cases - USA","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB\",   `XBB.1.5` = \"XBB\",   `XBB.1` = \"XBB\",   `XBB.1.*` = \"XBB\",   `XBB.*` = \"XBB\",   `XBB.*.*` = \"XBB\",   `XBB.*.*.*` = \"XBB\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `EG.5` = \"EG.5\",   `EG.5.1` = \"EG.5\",   `EG.5.1.1` = \"EG.5\",   `EG.5.*` = \"EG.5\",   `EG.5.1` = \"EG.5\",   # `EG.6.*` = \"EG.6\",   # `EG.6.1` = \"EG.6\",   `FL.1.*` = \"FL.1\",   `FU.1` = \"FU.1\",   `FU.1.*` = \"FU.1\",   `GJ.1.2` = \"GJ.1\",   `GJ.1.*` = \"GJ.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_usa <- gisaid_usa %>% filter(pangolin_lineage != \"None\")  gisaid_usa <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-weekly-cases-for-usa","dir":"Articles","previous_headings":"","what":"Get weekly cases for USA","title":"Animation of projected weekly cases - USA","text":"","code":"confirmed <- covid19(country = \"USA\", level = 1) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) #> We have invested a lot of time and effort in creating COVID-19 Data #> Hub, please cite the following when using it: #>  #>   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open #>   Source Software 5(51):2376, doi: 10.21105/joss.02376 #>  #> The implementation details and the latest version of the data are #> described in: #>  #>   Guidotti, E., (2022), \"A worldwide epidemiological database for #>   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: #>   10.1038/s41597-022-01245-1 #> To print citations in BibTeX format use: #>  > print(citation('COVID19'), bibtex=TRUE) #>  #> To hide this message use 'verbose = FALSE'.  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - USA","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_usa) state_month_counts$State <- \"USA\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs()  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - USA","text":"Look cases October,2021 : Look cases past weeks","code":"voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  76 (54 variable) #> initial  value 14579916.659920  #> iter  10 value 6417717.152561 #> iter  20 value 5808359.458541 #> iter  30 value 5716761.344149 #> iter  40 value 5590913.405631 #> iter  50 value 4856769.143665 #> iter  60 value 3541287.995637 #> iter  70 value 2924484.445811 #> iter  80 value 2670182.457000 #> iter  90 value 2621937.227308 #> iter 100 value 2581407.820359 #> iter 110 value 2541831.172884 #> iter 120 value 2535926.714740 #> iter 130 value 2530785.669465 #> iter 140 value 2486123.215769 #> iter 150 value 2431017.998775 #> iter 160 value 2421097.260908 #> iter 170 value 2417595.640605 #> iter 180 value 2416833.550926 #> iter 190 value 2416677.096696 #> iter 200 value 2416295.749794 #> iter 210 value 2416096.670743 #> iter 220 value 2416028.494032 #> iter 230 value 2416027.230789 #> iter 240 value 2416022.663078 #> iter 250 value 2416017.283824 #> iter 260 value 2415976.627160 #> iter 270 value 2415945.205855 #> iter 280 value 2415913.623039 #> iter 290 value 2415892.771801 #> iter 300 value 2415867.700988 #> iter 310 value 2415850.001023 #> iter 320 value 2415808.668964 #> final  value 2415727.213111  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  44 (30 variable) #> initial  value 5753898.376587  #> iter  10 value 2078637.313816 #> iter  20 value 1901907.462077 #> iter  30 value 1738285.282810 #> iter  40 value 1346576.446277 #> iter  50 value 1329364.858188 #> iter  60 value 1319088.367932 #> iter  70 value 1317883.979059 #> iter  80 value 1315305.623910 #> iter  90 value 1309444.545825 #> iter 100 value 1309027.315698 #> iter 110 value 1308928.504852 #> final  value 1308928.479167  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2021.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"December 2022\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"December 2022\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  40 (27 variable) #> initial  value 868908.115862  #> iter  10 value 489308.561254 #> iter  20 value 471241.278566 #> iter  30 value 426482.952689 #> iter  40 value 411957.962380 #> iter  50 value 411580.704887 #> iter  60 value 411477.693624 #> iter  70 value 411432.194876 #> iter  80 value 411252.604184 #> iter  90 value 411194.106351 #> final  value 411187.986026  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Kolkata\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(chennai_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  West Bengal Kolkata    184 ## 2 May 2020  West Bengal Kolkata   1941 ## 3 Jun 2020  West Bengal Kolkata   3859 ## 4 Jul 2020  West Bengal Kolkata  15655 ## 5 Aug 2020  West Bengal Kolkata  18518 ## 6 Sep 2020  West Bengal Kolkata  16255"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"plot-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"Get monthly cases for Kolkata","what":"Plot monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Kolkata (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-weekly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get weekly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Kolkata\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"overall-how-much-has-kolkata-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Kolkata","what":"Overall, how much has Kolkata sequenced over months?","title":"Animation of projected weekly cases - Kolkata (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Kolkata (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Kolkata\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 19793.714192  ## iter  10 value 11958.026254 ## iter  20 value 8969.076534 ## iter  30 value 8212.358245 ## iter  40 value 7968.961897 ## iter  50 value 7833.857771 ## iter  60 value 7699.820127 ## iter  70 value 7556.451226 ## iter  80 value 7521.078175 ## iter  90 value 7497.470463 ## iter 100 value 7457.373818 ## iter 110 value 7430.167591 ## iter 120 value 7420.945390 ## iter 130 value 7416.592398 ## iter 140 value 7402.939306 ## iter 150 value 7399.955351 ## iter 160 value 7399.338317 ## iter 170 value 7396.124794 ## iter 180 value 7392.765466 ## iter 190 value 7390.767294 ## iter 200 value 7388.167311 ## iter 210 value 7384.980688 ## iter 220 value 7374.920491 ## iter 230 value 7374.906174 ## iter 240 value 7373.684642 ## iter 250 value 7371.950903 ## iter 260 value 7370.556413 ## iter 270 value 7369.904982 ## iter 280 value 7369.621382 ## iter 290 value 7368.298788 ## iter 300 value 7367.412349 ## iter 310 value 7367.366752 ## iter 320 value 7366.604947 ## iter 330 value 7366.120161 ## iter 340 value 7365.639197 ## iter 350 value 7365.226836 ## iter 360 value 7364.024895 ## iter 370 value 7362.498358 ## iter 380 value 7362.412320 ## iter 390 value 7362.166246 ## iter 400 value 7361.441761 ## iter 410 value 7360.872382 ## iter 420 value 7360.707309 ## iter 430 value 7360.642932 ## iter 440 value 7360.311165 ## final  value 7360.108270  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Kolkata\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 9578.753987  ## iter  10 value 5623.640653 ## iter  20 value 4992.398914 ## iter  30 value 4873.058616 ## iter  40 value 4851.967501 ## iter  50 value 4825.074160 ## iter  60 value 4821.333594 ## iter  70 value 4820.582704 ## iter  80 value 4819.685563 ## iter  90 value 4818.995745 ## iter 100 value 4818.097771 ## iter 110 value 4815.817325 ## final  value 4815.570415  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Kolkata\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 9578.753987  ## iter  10 value 5623.640653 ## iter  20 value 4992.398914 ## iter  30 value 4873.058616 ## iter  40 value 4851.967501 ## iter  50 value 4825.074160 ## iter  60 value 4821.333594 ## iter  70 value 4820.582704 ## iter  80 value 4819.685563 ## iter  90 value 4818.995745 ## iter 100 value 4818.097771 ## iter 110 value 4815.817325 ## final  value 4815.570415  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saket Choudhary. Maintainer.","code":""},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choudhary S (2024). covmuller: tool model COVID19 variant prevalence using data GISAID. R package version 0.1.2.0001, https://saketkc.github.io/covmuller.","code":"@Manual{,   title = {covmuller: A tool to model COVID19 variant prevalence using data from GISAID},   author = {Saket Choudhary},   year = {2024},   note = {R package version 0.1.2.0001},   url = {https://saketkc.github.io/covmuller}, }"},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"covmuller","dir":"","previous_headings":"","what":"A tool to model COVID19 variant prevalence using data from GISAID","title":"A tool to model COVID19 variant prevalence using data from GISAID","text":"Covmuller R-package designed analysis sequencing metadata deposited GISAID.","code":""},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"A tool to model COVID19 variant prevalence using data from GISAID","text":"Covmuller currently supports following features: Read preprocess metadata file downloaded GISAID: Vignette Plot variant prevalence: Vignette India USA Canada UK Australia SouthAfrica India New York state South Africa United Kingdom USA New York City (USA) Delhi (India) Mumbai (India) Maharashtra (India) Pune (India)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from the USA — CleanAmericanStates","title":"Clean states from the USA — CleanAmericanStates","text":"Clean states USA","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from the USA — CleanAmericanStates","text":"","code":"CleanAmericanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from the USA — CleanAmericanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from the USA — CleanAmericanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from Canada — CleanCanadaStates","title":"Clean states from Canada — CleanCanadaStates","text":"Clean states Canada","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from Canada — CleanCanadaStates","text":"","code":"CleanCanadaStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from Canada — CleanCanadaStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from Canada — CleanCanadaStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Indian States — CleanIndianStates","title":"Clean Indian States — CleanIndianStates","text":"Clean Indian States","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Indian States — CleanIndianStates","text":"","code":"CleanIndianStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Indian States — CleanIndianStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Indian States — CleanIndianStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from South Africa — CleanSouthAfricanStates","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"Clean states South Africa","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"","code":"CleanSouthAfricanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"Collpase pangolin lineage list VOCs","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"","code":"CollapseLineageToVOCs(   variant_df,   vocs = GetVOCs(),   custom_voc_mapping = NULL,   summarize = TRUE )"},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"variant_df dataframe \"pangolin_lineage\" column vocs named list VOC (variant concernt) name key list lineages VOC. method replace lineages VOC name. custom_voc_mapping named vector custom mapping naming lineages. See example.","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"dataframe new column \"lineage_collpased\".","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"","code":"CombineSequencedCases(   cases_sequenced,   confirmed_long,   prune_oversequenced = TRUE,   month.min = NULL,   month.max = NULL,   max.percent = 100 )"},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"cases_sequenced long dataframe per state sequenced cases prune_oversequenced Whether round percentages 100 100. Default TRUE cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert monthwise counts to prevalence — CountsToPrevalence","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"Convert monthwise counts prevalence","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"","code":"CountsToPrevalence(variant_df)"},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"dataframe monthwise prevalence variants","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set them — CovmullerTheme","title":"Set them — CovmullerTheme","text":"Set ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set them — CovmullerTheme","text":"","code":"CovmullerTheme()"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GISAID India Metadata for India — FilterGISAIDIndia","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"Filter GISAID India Metadata India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"","code":"FilterGISAIDIndia(gisaid_metadata_all)"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"gisaid_metadata_all dataframe GISAID metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"dataframe Indian entries Human date known","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"Format metadata.tar.x file downloaded GISAID missing columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"","code":"FormatGISAIDMetadata(   df,   collection_col = \"Collection date\",   submission_col = \"Submission date\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"df GISAID metadata dataframe collection_col Name column representing date collection (Collection date) submission_col Name column representing date submission (Submission date)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"data frame following extra columns: DateCollected, MonthYearCollected, YearCollected, MonthCollected, WeekCollected DateCollectedNumeric, MonthYearCollectedNumeric DateSubmitted, MonthYearSubmitted, YearSubmitted, MonthSubmitted, WeekSubmitted DateSubmittedNumeric, MonthYearSubmittedNumeric","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"Geocode given address get latitude, longitude Gooogle","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"","code":"GeocodeAddress(address, api.key = NULL, restrict.to = NULL)"},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"address String address geocode api.key API key Google Maps restrict.Country name search restricted , Currently supports 'India'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"dataframe geocoded address","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine filetype — GetFiletype","title":"Determine filetype — GetFiletype","text":"Determine filetype","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine filetype — GetFiletype","text":"","code":"GetFiletype(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine filetype — GetFiletype","text":"path Path file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine filetype — GetFiletype","text":"Extension file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"Get daily confirmed cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"","code":"GetIndiaConfirmedCasesCumulative(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"Get India monthwose cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"","code":"GetIndiaConfirmedCasesMonthlyLong(   url = \"http://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"","code":"GetIndiaConfirmedCasesWeeklyLong(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"Get daily cases India given status type","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"","code":"GetIndiaDailyCasesCumulative(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\",   status = \"Confirmed\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"url URL fetch data status One \"Confirmed\", \"Recovered\", \"Deceased\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily statewise data for India — GetIndiaDailyData","title":"Get daily statewise data for India — GetIndiaDailyData","text":"'Status' column one 'Confirmed', 'Deceased' 'Recovered'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily statewise data for India — GetIndiaDailyData","text":"","code":"GetIndiaDailyData(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily statewise data for India — GetIndiaDailyData","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily statewise data for India — GetIndiaDailyData","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"Get daily deceased cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"","code":"GetIndiaDeceasedCasesCumulative(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data for India — GetIndiaHospitalization","title":"Get hospitalization data for India — GetIndiaHospitalization","text":"Get hospitalization data India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data for India — GetIndiaHospitalization","text":"","code":"GetIndiaHospitalization(url = \"\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of Indian name states — GetIndianStates","title":"Get a list of Indian name states — GetIndianStates","text":"Get list Indian name states","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of Indian name states — GetIndianStates","text":"","code":"GetIndianStates()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of Indian name states — GetIndianStates","text":"list state abbreviation key full name value","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"Get MonthYear (zoo) dataframe string formatted data column","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"","code":"GetMonthYear(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"datecol vector string formatted dates datefmt Format date (default Y-m-d)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"vector dates converted MonthYear format (zoo::.yearmon)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants of concern — GetVOCs","title":"Get variants of concern — GetVOCs","text":"Get variants concern","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants of concern — GetVOCs","text":"","code":"GetVOCs()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants of concern — GetVOCs","text":"list variants concern pangolin lineage","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"Plot heatmap cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"","code":"PlotSequencedPropHeatmap(df)"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"heatmap total percentage cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","title":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","text":"Plot heatmap total cases/sequences","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","text":"","code":"PlotTotalHeatmap(df, color_legend = \"Total cases\")"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases (column named 'value')","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","text":"heatmap total cases/sequences","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"Read instrument metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"","code":"ReadAuspiceInstrument(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"dataframe instrument related metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"Read metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"","code":"ReadAuspiceMetadata(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"dataframe collated metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata downloaded from GISAID — ReadGISAIDMetada","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"Read metadata downloaded GISAID","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"","code":"ReadGISAIDMetada(path, showProgress = FALSE, ...)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"path Path tar.xz metadata.txt downloaded GISAID showProgress Whether print progress bars fread ... parameters data.table::fread","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"data frame parsed metadata extra columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"function removes: 1. Commas space 2. Hyphen space 3. Multiple dots single space 4. Multiple spacies single space 5. NA \"UNKNOWN\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"","code":"SanitizeColumn(col)"},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"col String vector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"string vector sanitized entries","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week — SummarizeVariantsDatewise","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"","code":"SummarizeVariantsDatewise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"Summarize total number variants per month","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"","code":"SummarizeVariantsMonthwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"","code":"SummarizeVariantsWeekwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"Get total sequenced samples per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"","code":"TotalSequencesPerMonthCountrywise(variant_df, rename_country_as_state = TRUE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"dataframe sequencing statistics per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","title":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","text":"Get total number sequenced samples per month Country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","text":"","code":"TotalSequencesPerMonthStatewise(variant_df, drop_country = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","text":"dataframe sequencing statistics per state per country","code":""}]
