[{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"get-cases-data","dir":"Articles","previous_headings":"","what":"Get cases data","title":"Introduction to covmuller","text":"use covid19bharat.org get tally daily confirmed cases summarize monthly level.","code":"indian_state_cases <- GetIndiaConfirmedCasesMonthlyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. india_cases <- indian_state_cases %>% filter(State == \"India\") head(india_cases) ##   MonthYear State   value      type ## 1  Mar 2020 India    1635 Confirmed ## 2  Apr 2020 India   33232 Confirmed ## 3  May 2020 India  155781 Confirmed ## 4  Jun 2020 India  395044 Confirmed ## 5  Jul 2020 India 1111273 Confirmed ## 6  Aug 2020 India 1990350 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-cases-for-india","dir":"Articles","previous_headings":"Get cases data","what":"Plot cases for India","title":"Introduction to covmuller","text":"easy visualize monthly case counts bar plot:","code":"p1 <- BarPlot(india_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - India\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"read-variant-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Read variant data from GISAID","title":"Introduction to covmuller","text":"utilize GISAID data look prevalence variants. access data, GISAID requires registration.","code":"current_date <- \"2023_11_06\" fpath.tar <- paste0(\"~/data/epicov/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/data/epicov/metadata_tsv_\", current_date, \".qs\")  if (file.exists(fpath.qs)) {   gisaid_metadata <- qs::qread(file = fpath.qs) } else {   gisaid_metadata <- ReadGISAIDMetada(path = fpath.tar)   qs::qsave(gisaid_metadata, fpath.qs) }"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot total sequenced cases","title":"Introduction to covmuller","text":"can look absolute number cases sequenced country filtering information metadata made available GISAID (includes countries). , visualize total sequenced cases coming India:","code":"gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata) country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p2 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from India\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"overall-how-much-has-india-sequenced-over-months","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Overall, how much has India sequenced over months?","title":"Introduction to covmuller","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:  context, can combine three plots :","code":"india_cases_long <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"India\") ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = country_seq_stats,   confirmed_long = india_cases_long ) p3 <- BarPlot(india_sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from India\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-proportion-of-cases-that-been-deposited-from-each-state","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot proportion of cases that been deposited from each state","title":"Introduction to covmuller","text":"can break proportion sequenced cases state level: terms absolute numbers sequenced:","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india, drop_country = TRUE) seq_stats <- rbind(country_seq_stats, state_seq_stats) state_cases_long <- GetIndiaConfirmedCasesMonthlyLong() india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = seq_stats,   confirmed_long = state_cases_long,   month.min = \"Jan 2022\",   month.max = \"Feb 2023\",   max.percent = 5 )  india_sequencing_proportion$State <- factor(   x = india_sequencing_proportion$State,   levels = as.character(GetIndianStates()) ) p4 <- PlotSequencedPropHeatmap(india_sequencing_proportion) # p4 seq_stats2 <- seq_stats # seq_stats2 <- seq_stats2 %>% filter(MonthYear >= \"July 2022\") seq_stats2$MonthYear <- factor(seq_stats$MonthYear) seq_stats2$State <- factor(   x = seq_stats2$State,   levels = as.character(GetIndianStates()) )  p4.total <- PlotTotalHeatmap(df = seq_stats2) ## [1] 46 p4.total"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-prevalence","dir":"Articles","previous_headings":"","what":"Plot Prevalence","title":"Introduction to covmuller","text":"Finally, look prevalence variants variants concern (VOCs):  animated version prevalence plot, check VariantAnimation.","code":"india_month_counts <- SummarizeVariantsMonthwise(gisaid_india) india_month_counts$State <- \"India\" india_month_prevalence <- CountsToPrevalence(india_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) india_month_prevalence <- CollapseLineageToVOCs(   variant_df = india_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(india_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_germany, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_germany) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - Germany","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_germany_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_germany_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_germany_shared_dateweek <- SummarizeVariantsDatewise(gisaid_germany_collapsed_sel, by_state = TRUE) head(gisaid_germany_shared_dateweek) ## # A tibble: 6 × 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Baden-Wurttemberg                19266 BA.4                 10 ## 2 Baden-Wurttemberg                19266 BA.5                153 ## 3 Baden-Wurttemberg                19266 BQ.1+                 2 ## 4 Baden-Wurttemberg                19266 Others               48 ## 5 Baden-Wurttemberg                19267 BA.4                  2 ## 6 Baden-Wurttemberg                19267 BA.5                 91 fit_germany_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_germany_shared_dateweek) ## # weights:  147 (120 variable) ## initial  value 208883.724950  ## iter  10 value 126387.509768 ## iter  20 value 125693.821384 ## iter  30 value 121985.433166 ## iter  40 value 120662.397853 ## iter  50 value 119894.511670 ## iter  60 value 118575.247026 ## iter  70 value 118027.633106 ## iter  80 value 117674.119089 ## iter  90 value 117443.332217 ## iter 100 value 117388.773235 ## iter 110 value 117358.327189 ## iter 120 value 117357.339119 ## final  value 117357.265999  ## converged head(fit_germany_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State        prob ## 1              BA.2                19266 Baden-Wurttemberg 0.003260193 ## 2           BA.2.75                19266 Baden-Wurttemberg 0.005392956 ## 3              BA.4                19266 Baden-Wurttemberg 0.020216928 ## 4              BA.5                19266 Baden-Wurttemberg 0.635627277 ## 5             BQ.1+                19266 Baden-Wurttemberg 0.041628906 ## 6            Others                19266 Baden-Wurttemberg 0.293756674 ##             SE df   asymp.LCL   asymp.UCL DateCollected ## 1 0.0004574897 NA 0.002363530 0.004156856    2022-10-01 ## 2 0.0007830367 NA 0.003858232 0.006927679    2022-10-01 ## 3 0.0017272762 NA 0.016831529 0.023602327    2022-10-01 ## 4 0.0052075724 NA 0.625420622 0.645833931    2022-10-01 ## 5 0.0012762766 NA 0.039127449 0.044130362    2022-10-01 ## 6 0.0046416018 NA 0.284659301 0.302854046    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Germany","text":"","code":"muller_germanybystate_mfit <- PlotMullerDailyPrevalence(fit_germany_multi_predsbystate, ncol = 3) muller_germanybystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Australia","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_australia, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Australia\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Australia","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_australia_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_australia,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_australia_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_australia_shared_dateweek <- SummarizeVariantsDatewise(gisaid_australia_collapsed_sel, by_state = TRUE) head(gisaid_australia_shared_dateweek) ## # A tibble: 6 × 4 ##   State                        DateCollectedNumeric lineage_collapsed     n ##   <chr>                                       <dbl> <chr>             <int> ## 1 Australian Capital Territory                19266 BA.4                  1 ## 2 Australian Capital Territory                19266 BA.5                  1 ## 3 Australian Capital Territory                19268 BA.2.75               5 ## 4 Australian Capital Territory                19268 BA.4                  3 ## 5 Australian Capital Territory                19268 BA.5                 53 ## 6 Australian Capital Territory                19268 BQ.1+                 1 fit_australia_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_australia_shared_dateweek) ## # weights:  77 (60 variable) ## initial  value 125123.968494  ## iter  10 value 67476.028459 ## iter  20 value 66777.527655 ## iter  30 value 63991.457449 ## iter  40 value 62422.581166 ## iter  50 value 61294.500926 ## iter  60 value 60885.266118 ## iter  70 value 60858.668920 ## iter  80 value 60858.392319 ## iter  80 value 60858.392050 ## iter  80 value 60858.392046 ## final  value 60858.392046  ## converged head(fit_australia_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric                        State ## 1              BA.2                19266 Australian Capital Territory ## 2           BA.2.75                19266 Australian Capital Territory ## 3              BA.4                19266 Australian Capital Territory ## 4              BA.5                19266 Australian Capital Territory ## 5             BQ.1+                19266 Australian Capital Territory ## 6            Others                19266 Australian Capital Territory ##         prob          SE df   asymp.LCL  asymp.UCL DateCollected ## 1 0.01640227 0.004420336 NA 0.007738566 0.02506596    2022-10-01 ## 2 0.03292485 0.006923469 NA 0.019355100 0.04649460    2022-10-01 ## 3 0.05681718 0.010336094 NA 0.036558806 0.07707555    2022-10-01 ## 4 0.67677717 0.016799914 NA 0.643849940 0.70970439    2022-10-01 ## 5 0.03704560 0.003208584 NA 0.030756890 0.04333431    2022-10-01 ## 6 0.17835935 0.010268668 NA 0.158233128 0.19848557    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Australia","text":"","code":"muller_australiabystate_mfit <- PlotMullerDailyPrevalence(fit_australia_multi_predsbystate, ncol = 3) muller_australiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Canada","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_canada, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Canada\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Canada","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_canada_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_canada,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed %>% filter(MonthYearCollected >= \"Oct 2022\")  vocs_to_keep <- table(gisaid_canada_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_canada_shared_dateweek <- SummarizeVariantsDatewise(gisaid_canada_collapsed_sel, by_state = TRUE) head(gisaid_canada_shared_dateweek) ## # A tibble: 6 × 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alberta                19266 BA.4                  2 ## 2 Alberta                19266 BA.5                 50 ## 3 Alberta                19266 BQ.1+                 6 ## 4 Alberta                19266 Others               16 ## 5 Alberta                19267 BA.2.75               3 ## 6 Alberta                19267 BA.4                  4 fit_canada_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_canada_shared_dateweek) ## # weights:  91 (72 variable) ## initial  value 250004.698220  ## iter  10 value 137116.548230 ## iter  20 value 135187.662368 ## iter  30 value 129173.626758 ## iter  40 value 123176.642771 ## iter  50 value 119600.860925 ## iter  60 value 117175.722969 ## iter  70 value 115618.295897 ## iter  80 value 114806.383848 ## iter  90 value 114772.692618 ## iter 100 value 114765.776530 ## iter 110 value 114759.918642 ## iter 120 value 114757.217156 ## iter 130 value 114751.766499 ## iter 140 value 114744.785296 ## iter 150 value 114739.365300 ## iter 160 value 114738.742850 ## iter 170 value 114737.683443 ## iter 180 value 114736.771779 ## iter 190 value 114735.404115 ## iter 200 value 114733.025231 ## iter 210 value 114724.313048 ## final  value 114708.729471  ## converged head(fit_canada_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State        prob           SE df ## 1              BA.2                19266 Alberta 0.005048617 0.0009746843 NA ## 2           BA.2.75                19266 Alberta 0.005169135 0.0009677357 NA ## 3              BA.4                19266 Alberta 0.055714061 0.0043548073 NA ## 4              BA.5                19266 Alberta 0.731000681 0.0069027440 NA ## 5             BQ.1+                19266 Alberta 0.068891888 0.0023017066 NA ## 6            Others                19266 Alberta 0.133561364 0.0042516659 NA ##     asymp.LCL   asymp.UCL DateCollected ## 1 0.003138270 0.006958963    2022-10-01 ## 2 0.003272408 0.007065863    2022-10-01 ## 3 0.047178796 0.064249326    2022-10-01 ## 4 0.717471552 0.744529811    2022-10-01 ## 5 0.064380626 0.073403150    2022-10-01 ## 6 0.125228252 0.141894476    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Canada","text":"","code":"muller_canadabystate_mfit <- PlotMullerDailyPrevalence(fit_canada_multi_predsbystate, ncol = 3) muller_canadabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - India","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - India","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State == \"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Total sequences deposited\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - India","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed_sel <- gisaid_india_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") vocs_to_keep <- table(gisaid_india_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_india_collapsed_sel <- gisaid_india_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_india_shared_dateweek <- SummarizeVariantsDatewise(gisaid_india_collapsed_sel, by_state = TRUE) head(gisaid_india_shared_dateweek) ## # A tibble: 6 × 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Andhra Pradesh                   19448 XBB                   1 ## 2 Andhra Pradesh                   19506 XBB                   1 ## 3 Arunachal Pradesh                19361 XBB                   1 ## 4 Arunachal Pradesh                19459 XBB                   1 ## 5 Arunachal Pradesh                19556 XBB                   1 ## 6 Arunachal Pradesh                19611 Others                1 fit_india_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_india_shared_dateweek) ## # weights:  204 (165 variable) ## initial  value 31816.272895  ## iter  10 value 10623.281197 ## iter  20 value 9746.979894 ## iter  30 value 9490.554897 ## iter  40 value 9394.228773 ## iter  50 value 9355.691047 ## iter  60 value 9333.831000 ## iter  70 value 9322.808203 ## iter  80 value 9319.539317 ## iter  90 value 9318.929953 ## iter 100 value 9318.790339 ## final  value 9318.782090  ## converged head(fit_india_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric          State         prob ## 1              BA.2                19266 Andhra Pradesh 4.891778e-05 ## 2           BA.2.75                19266 Andhra Pradesh 8.471746e-05 ## 3            BA.2.X                19266 Andhra Pradesh 3.729956e-08 ## 4             BQ.1+                19266 Andhra Pradesh 2.898764e-08 ## 5            Others                19266 Andhra Pradesh 6.673174e-04 ## 6               XBB                19266 Andhra Pradesh 9.991990e-01 ##             SE df     asymp.LCL    asymp.UCL DateCollected ## 1 1.529494e-04 NA -2.508576e-04 3.486931e-04    2022-10-01 ## 2 3.275260e-04 NA -5.572217e-04 7.266567e-04    2022-10-01 ## 3 5.052994e-08 NA -6.173730e-08 1.363364e-07    2022-10-01 ## 4 5.430814e-08 NA -7.745436e-08 1.354296e-07    2022-10-01 ## 5 5.332184e-04 NA -3.777714e-04 1.712406e-03    2022-10-01 ## 6 7.670906e-04 NA  9.976955e-01 1.000702e+00    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - India","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_southafrica, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_southafrica) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - South Africa","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_southafrica_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_southafrica_shared_dateweek <- SummarizeVariantsDatewise(gisaid_southafrica_collapsed_sel, by_state = TRUE) head(gisaid_southafrica_shared_dateweek) ## # A tibble: 6 × 4 ##   State        DateCollectedNumeric lineage_collapsed     n ##   <chr>                       <dbl> <chr>             <int> ## 1 Eastern Cape                19276 BA.2                  1 ## 2 Eastern Cape                19277 BA.2                  1 ## 3 Eastern Cape                19299 Others                1 ## 4 Eastern Cape                19300 BA.5                  1 ## 5 Eastern Cape                19317 BA.5                  1 ## 6 Eastern Cape                19340 BQ.1+                 1 fit_southafrica_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_southafrica_shared_dateweek) ## # weights:  72 (55 variable) ## initial  value 11092.782874  ## iter  10 value 6834.557013 ## iter  20 value 5941.993882 ## iter  30 value 5714.941169 ## iter  40 value 5621.674394 ## iter  50 value 5594.948354 ## iter  60 value 5591.826425 ## iter  70 value 5591.513531 ## iter  80 value 5591.427891 ## iter  90 value 5591.380258 ## final  value 5591.378639  ## converged head(fit_southafrica_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric        State         prob           SE ## 1              BA.2                19266 Eastern Cape 2.262100e-02 2.082536e-02 ## 2              BA.4                19266 Eastern Cape 3.731755e-06 2.561014e-06 ## 3              BA.5                19266 Eastern Cape 6.004257e-01 5.980686e-02 ## 4             BQ.1+                19266 Eastern Cape 5.529870e-03 1.499742e-03 ## 5            Others                19266 Eastern Cape 3.710890e-01 5.635504e-02 ## 6               XBB                19266 Eastern Cape 3.306845e-04 1.137620e-04 ##   df     asymp.LCL    asymp.UCL DateCollected ## 1 NA -1.819595e-02 6.343796e-02    2022-10-01 ## 2 NA -1.287740e-06 8.751250e-06    2022-10-01 ## 3 NA  4.832064e-01 7.176450e-01    2022-10-01 ## 4 NA  2.590430e-03 8.469310e-03    2022-10-01 ## 5 NA  2.606352e-01 4.815429e-01    2022-10-01 ## 6 NA  1.077150e-04 5.536540e-04    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - South Africa","text":"","code":"muller_southafricabystate_mfit <- PlotMullerDailyPrevalence(fit_southafrica_multi_predsbystate, ncol = 3) muller_southafricabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - United Kingdom","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_uk, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"United Kingdom\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - United Kingdom","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_uk_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_uk_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_uk_shared_dateweek <- SummarizeVariantsDatewise(gisaid_uk_collapsed_sel, by_state = TRUE) head(gisaid_uk_shared_dateweek) ## # A tibble: 6 × 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 England                19266 BA.2                  1 ## 2 England                19266 BA.2.75              13 ## 3 England                19266 BA.4                 16 ## 4 England                19266 BA.5                235 ## 5 England                19266 BQ.1+                44 ## 6 England                19266 Others              113 fit_uk_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_uk_shared_dateweek) ## # weights:  49 (36 variable) ## initial  value 297944.140652  ## iter  10 value 194056.493824 ## iter  20 value 185957.773692 ## iter  30 value 167400.500683 ## iter  40 value 156580.092215 ## iter  50 value 154989.224843 ## iter  60 value 154953.674614 ## iter  70 value 154943.367885 ## iter  80 value 154942.553372 ## iter  90 value 154942.434318 ## iter 100 value 154942.321877 ## iter 110 value 154942.132939 ## final  value 154942.118177  ## converged head(fit_uk_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State        prob          SE df ## 1              BA.2                19266 England 0.003118208 0.000401476 NA ## 2           BA.2.75                19266 England 0.023474760 0.001443891 NA ## 3              BA.4                19266 England 0.055103932 0.002126803 NA ## 4              BA.5                19266 England 0.579707563 0.004112157 NA ## 5             BQ.1+                19266 England 0.134630945 0.002224046 NA ## 6            Others                19266 England 0.202434538 0.002831633 NA ##    asymp.LCL   asymp.UCL DateCollected ## 1 0.00233133 0.003905087    2022-10-01 ## 2 0.02064479 0.026304735    2022-10-01 ## 3 0.05093548 0.059272389    2022-10-01 ## 4 0.57164788 0.587767243    2022-10-01 ## 5 0.13027189 0.138989995    2022-10-01 ## 6 0.19688464 0.207984436    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - United Kingdom","text":"","code":"muller_ukbystate_mfit <- PlotMullerDailyPrevalence(fit_uk_multi_predsbystate, ncol = 3) muller_ukbystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-monthly-cases-for-aizawl","dir":"Articles","previous_headings":"","what":"Get monthly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Aizawl\") head(chennai_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State   District value ##   <yearmon> <chr>   <chr>    <dbl> ## 1 Apr 2020  Mizoram Aizawl       1 ## 2 May 2020  Mizoram Aizawl       0 ## 3 Jun 2020  Mizoram Aizawl      46 ## 4 Jul 2020  Mizoram Aizawl     190 ## 5 Aug 2020  Mizoram Aizawl     362 ## 6 Sep 2020  Mizoram Aizawl     770"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"plot-monthly-cases-for-aizawl","dir":"Articles","previous_headings":"Get monthly cases for Aizawl","what":"Plot monthly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Aizawl (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-weekly-cases-for-aizawl","dir":"Articles","previous_headings":"","what":"Get weekly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Aizawl\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Aizawl (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"overall-how-much-has-aizawl-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Aizawl","what":"Overall, how much has Aizawl sequenced over months?","title":"Animation of projected weekly cases - Aizawl (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Aizawl (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Aizawl (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Aizawl\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Aizawl\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  24 (15 variable) ## initial  value 7401.758367  ## iter  10 value 292.989943 ## iter  20 value 210.831791 ## iter  30 value 200.305840 ## iter  40 value 199.332956 ## iter  50 value 188.526630 ## iter  60 value 178.595673 ## iter  70 value 177.235575 ## iter  80 value 176.008579 ## iter  90 value 175.379064 ## iter 100 value 175.234862 ## iter 110 value 174.921986 ## iter 120 value 171.094521 ## iter 130 value 170.363744 ## iter 140 value 169.881362 ## iter 150 value 169.500928 ## iter 160 value 169.427967 ## iter 170 value 169.174564 ## iter 180 value 168.252549 ## iter 190 value 167.901858 ## iter 200 value 167.637566 ## iter 210 value 167.524903 ## iter 220 value 167.435990 ## iter 230 value 167.387177 ## iter 240 value 167.176417 ## iter 250 value 166.981283 ## iter 260 value 166.944919 ## iter 270 value 166.919141 ## iter 280 value 166.897910 ## iter 290 value 166.895811 ## iter 300 value 166.865471 ## iter 310 value 166.797565 ## iter 320 value 166.758234 ## iter 330 value 166.704244 ## iter 340 value 166.694112 ## iter 350 value 166.691709 ## iter 360 value 166.677094 ## iter 370 value 166.614894 ## iter 380 value 166.527662 ## iter 390 value 166.503895 ## iter 400 value 166.498572 ## iter 410 value 166.497680 ## iter 420 value 166.485423 ## iter 430 value 166.470229 ## iter 440 value 166.456612 ## iter 450 value 166.444200 ## iter 460 value 166.431648 ## iter 470 value 166.428747 ## iter 480 value 166.417023 ## iter 490 value 166.406138 ## iter 500 value 166.395968 ## iter 510 value 166.388494 ## iter 520 value 166.379239 ## final  value 166.373706  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Aizawl\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Aizawl\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 1515.828511  ## iter  10 value 150.168140 ## iter  20 value 143.520069 ## iter  30 value 142.458310 ## iter  40 value 142.217979 ## iter  50 value 141.356997 ## iter  60 value 140.857909 ## iter  70 value 140.712408 ## iter  80 value 140.573719 ## iter  90 value 140.419909 ## iter 100 value 140.223422 ## iter 110 value 140.183794 ## iter 120 value 140.111011 ## iter 130 value 139.945280 ## iter 140 value 139.845886 ## iter 150 value 139.822344 ## iter 160 value 139.752156 ## iter 170 value 139.734355 ## iter 180 value 139.699133 ## iter 190 value 138.854912 ## iter 200 value 138.751949 ## iter 210 value 138.727486 ## iter 220 value 138.721415 ## iter 230 value 138.720407 ## iter 240 value 138.716888 ## iter 250 value 138.710476 ## iter 260 value 138.706882 ## iter 270 value 138.704170 ## iter 280 value 138.700802 ## iter 290 value 138.699633 ## iter 300 value 138.698282 ## iter 310 value 138.689361 ## iter 320 value 138.682151 ## iter 330 value 138.680449 ## iter 340 value 138.678313 ## iter 350 value 138.677415 ## iter 360 value 138.675804 ## iter 370 value 138.664904 ## iter 380 value 138.573600 ## iter 390 value 138.543126 ## iter 400 value 138.538657 ## final  value 138.538120  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Aizawl\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Aizawl\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 1515.828511  ## iter  10 value 150.168140 ## iter  20 value 143.520069 ## iter  30 value 142.458310 ## iter  40 value 142.217979 ## iter  50 value 141.356997 ## iter  60 value 140.857909 ## iter  70 value 140.712408 ## iter  80 value 140.573719 ## iter  90 value 140.419909 ## iter 100 value 140.223422 ## iter 110 value 140.183794 ## iter 120 value 140.111011 ## iter 130 value 139.945280 ## iter 140 value 139.845886 ## iter 150 value 139.822344 ## iter 160 value 139.752156 ## iter 170 value 139.734355 ## iter 180 value 139.699133 ## iter 190 value 138.854912 ## iter 200 value 138.751949 ## iter 210 value 138.727486 ## iter 220 value 138.721415 ## iter 230 value 138.720407 ## iter 240 value 138.716888 ## iter 250 value 138.710476 ## iter 260 value 138.706882 ## iter 270 value 138.704170 ## iter 280 value 138.700802 ## iter 290 value 138.699633 ## iter 300 value 138.698282 ## iter 310 value 138.689361 ## iter 320 value 138.682151 ## iter 330 value 138.680449 ## iter 340 value 138.678313 ## iter 350 value 138.677415 ## iter 360 value 138.675804 ## iter 370 value 138.664904 ## iter 380 value 138.573600 ## iter 390 value 138.543126 ## iter 400 value 138.538657 ## final  value 138.538120  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Bengaluru_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [3] ##   MonthYear State     District        value ##   <yearmon> <chr>     <chr>           <dbl> ## 1 Apr 2020  Karnataka Bengaluru Rural     6 ## 2 Apr 2020  Karnataka Bengaluru Urban   141 ## 3 May 2020  Karnataka Bengaluru Rural     9 ## 4 May 2020  Karnataka Bengaluru Urban   218 ## 5 Jun 2020  Karnataka Bengaluru Rural   114 ## 6 Jun 2020  Karnataka Bengaluru Urban  4196"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"plot-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"Get monthly cases for Bengaluru","what":"Plot monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"p1 <- BarPlot(Bengaluru_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Bengaluru (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-weekly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get weekly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Bengaluru\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Bengaluru_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"overall-how-much-has-bengaluru-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Bengaluru","what":"Overall, how much has Bengaluru sequenced over months?","title":"Animation of projected weekly cases - Bengaluru (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases %>% select(MonthYear, value) Bengaluru_monthly_cases_tmp$State <- \"India\" Bengaluru_monthly_cases_tmp$type <- \"Confirmed\"  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>%   group_by(MonthYear, State, type) %>%   summarise(value = sum(value))  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Bengaluru_seq_stats,   confirmed_long = Bengaluru_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Bengaluru (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Bengaluru\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 27280.854519  ## iter  10 value 12654.212777 ## iter  20 value 6673.400386 ## iter  30 value 5900.795573 ## iter  40 value 5579.611334 ## iter  50 value 5437.754669 ## iter  60 value 5289.623501 ## iter  70 value 5089.205002 ## iter  80 value 4828.414224 ## iter  90 value 4722.853944 ## iter 100 value 4716.025496 ## iter 110 value 4708.762722 ## iter 120 value 4703.187810 ## iter 130 value 4702.317236 ## iter 140 value 4700.036796 ## iter 150 value 4698.415786 ## iter 160 value 4691.593834 ## iter 170 value 4666.532005 ## iter 180 value 4647.199789 ## iter 190 value 4645.953016 ## iter 200 value 4644.413888 ## iter 210 value 4640.909007 ## iter 220 value 4639.913660 ## iter 230 value 4639.756334 ## iter 240 value 4639.163422 ## iter 250 value 4637.084115 ## iter 260 value 4636.784964 ## iter 270 value 4635.808570 ## iter 280 value 4634.779618 ## iter 290 value 4634.438043 ## iter 300 value 4634.244641 ## final  value 4632.480217  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 13260.587551  ## iter  10 value 4244.312127 ## iter  20 value 3571.482803 ## iter  30 value 3494.250103 ## iter  40 value 3457.604725 ## iter  50 value 3444.861697 ## iter  60 value 3440.569061 ## iter  70 value 3439.411840 ## iter  80 value 3438.525153 ## iter  90 value 3438.196092 ## iter 100 value 3437.826340 ## iter 110 value 3437.265419 ## iter 120 value 3437.234425 ## iter 130 value 3437.191321 ## iter 140 value 3437.012394 ## iter 150 value 3436.953845 ## iter 160 value 3436.881184 ## iter 170 value 3436.695579 ## iter 180 value 3436.659370 ## iter 190 value 3436.612976 ## iter 200 value 3436.592489 ## iter 210 value 3436.564673 ## iter 220 value 3436.539005 ## final  value 3436.537103  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 13260.587551  ## iter  10 value 4244.312127 ## iter  20 value 3571.482803 ## iter  30 value 3494.250103 ## iter  40 value 3457.604725 ## iter  50 value 3444.861697 ## iter  60 value 3440.569061 ## iter  70 value 3439.411840 ## iter  80 value 3438.525153 ## iter  90 value 3438.196092 ## iter 100 value 3437.826340 ## iter 110 value 3437.265419 ## iter 120 value 3437.234425 ## iter 130 value 3437.191321 ## iter 140 value 3437.012394 ## iter 150 value 3436.953845 ## iter 160 value 3436.881184 ## iter 170 value 3436.695579 ## iter 180 value 3436.659370 ## iter 190 value 3436.612976 ## iter 200 value 3436.592489 ## iter 210 value 3436.564673 ## iter 220 value 3436.539005 ## final  value 3436.537103  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"] gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- \"Unknown\"   gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"state-of-origin-of-ba4ba-5-sequences","dir":"Articles","previous_headings":"","what":"State of origin of BA/4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>%   filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>%   pull(State) %>%   table() %>%   as.data.frame() %>%   arrange(desc(Freq)) %>%   DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"city-of-origin-of-ba-4ba-5-sequences","dir":"Articles","previous_headings":"","what":"City of origin of BA.4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>%   filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>%   pull(custom_city) %>%   table() %>%   as.data.frame() %>%   arrange(desc(Freq)) %>%   DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-monthly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Chennai\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(chennai_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State      District value ##   <yearmon> <chr>      <chr>    <dbl> ## 1 Apr 2020  Tamil Nadu Chennai    910 ## 2 May 2020  Tamil Nadu Chennai  13889 ## 3 Jun 2020  Tamil Nadu Chennai  43528 ## 4 Jul 2020  Tamil Nadu Chennai  41467 ## 5 Aug 2020  Tamil Nadu Chennai  35803 ## 6 Sep 2020  Tamil Nadu Chennai  31779"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"plot-monthly-cases-for-chennai","dir":"Articles","previous_headings":"Get monthly cases for Chennai","what":"Plot monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Chennai (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-weekly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Chennai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"overall-how-much-has-chennai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Chennai","what":"Overall, how much has Chennai sequenced over months?","title":"Animation of projected weekly cases - Chennai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"Chennai\")) state_month_counts$State <- \"Chennai\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Chennai (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Chennai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  48 (33 variable) ## initial  value 15605.213761  ## iter  10 value 9346.725587 ## iter  20 value 6735.265161 ## iter  30 value 6252.767740 ## iter  40 value 5962.591363 ## iter  50 value 5839.616667 ## iter  60 value 5688.700478 ## iter  70 value 5646.847872 ## iter  80 value 5644.264029 ## iter  90 value 5635.112092 ## iter 100 value 5632.626406 ## iter 110 value 5611.731368 ## iter 120 value 5608.160319 ## iter 130 value 5602.430986 ## iter 140 value 5602.085418 ## iter 150 value 5601.992062 ## iter 160 value 5601.547330 ## iter 170 value 5599.095961 ## iter 180 value 5597.310934 ## iter 190 value 5596.025887 ## iter 200 value 5586.144855 ## iter 210 value 5582.730045 ## iter 220 value 5582.206277 ## iter 230 value 5581.641031 ## iter 240 value 5580.844556 ## iter 250 value 5578.550303 ## iter 260 value 5577.858001 ## iter 270 value 5577.656828 ## iter 280 value 5577.632627 ## iter 290 value 5577.545751 ## iter 300 value 5577.491586 ## iter 310 value 5577.422956 ## iter 320 value 5576.188103 ## iter 330 value 5571.337207 ## final  value 5569.995071  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Chennai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 9646.732682  ## iter  10 value 4436.449277 ## iter  20 value 3750.586782 ## iter  30 value 3524.118672 ## iter  40 value 3477.534654 ## iter  50 value 3461.347353 ## iter  60 value 3457.749224 ## iter  70 value 3455.803570 ## iter  80 value 3455.186713 ## iter  90 value 3453.396263 ## iter 100 value 3451.684841 ## iter 110 value 3448.796346 ## iter 120 value 3448.681536 ## iter 130 value 3448.621780 ## iter 140 value 3448.598491 ## iter 150 value 3448.517228 ## iter 160 value 3448.295038 ## iter 170 value 3448.240697 ## iter 180 value 3448.196202 ## iter 190 value 3448.104299 ## iter 200 value 3448.042618 ## iter 210 value 3448.020950 ## iter 220 value 3447.924799 ## iter 230 value 3447.797141 ## iter 240 value 3447.738687 ## iter 250 value 3447.697683 ## iter 260 value 3447.677071 ## iter 270 value 3447.658190 ## iter 280 value 3447.631436 ## iter 290 value 3447.563336 ## iter 300 value 3447.544602 ## final  value 3447.504293  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Chennai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 9646.732682  ## iter  10 value 4436.449277 ## iter  20 value 3750.586782 ## iter  30 value 3524.118672 ## iter  40 value 3477.534654 ## iter  50 value 3461.347353 ## iter  60 value 3457.749224 ## iter  70 value 3455.803570 ## iter  80 value 3455.186713 ## iter  90 value 3453.396263 ## iter 100 value 3451.684841 ## iter 110 value 3448.796346 ## iter 120 value 3448.681536 ## iter 130 value 3448.621780 ## iter 140 value 3448.598491 ## iter 150 value 3448.517228 ## iter 160 value 3448.295038 ## iter 170 value 3448.240697 ## iter 180 value 3448.196202 ## iter 190 value 3448.104299 ## iter 200 value 3448.042618 ## iter 210 value 3448.020950 ## iter 220 value 3447.924799 ## iter 230 value 3447.797141 ## iter 240 value 3447.738687 ## iter 250 value 3447.697683 ## iter 260 value 3447.677071 ## iter 270 value 3447.658190 ## iter 280 value 3447.631436 ## iter 290 value 3447.563336 ## iter 300 value 3447.544602 ## final  value 3447.504293  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-monthly-cases-for-delhi","dir":"Articles","previous_headings":"","what":"Get monthly cases for Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Delhi\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(NewDelhi_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State District  value ##   <yearmon> <chr> <chr>     <dbl> ## 1 Apr 2020  Delhi Delhi      3515 ## 2 May 2020  Delhi Delhi     16329 ## 3 Jun 2020  Delhi Delhi     67516 ## 4 Jul 2020  Delhi Delhi     48238 ## 5 Aug 2020  Delhi Delhi     39150 ## 6 Sep 2020  Delhi Delhi    104967"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"plot-monthly-cases-for-new-delhi","dir":"Articles","previous_headings":"Get monthly cases for Delhi","what":"Plot monthly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"p1 <- BarPlot(NewDelhi_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - New Delhi (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-weekly-cases-for-new-delhi","dir":"Articles","previous_headings":"","what":"Get weekly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"New Delhi\"), rename_country_as_state = TRUE)   p2 <- BarPlot(NewDelhi_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"overall-how-much-has-new-delhi-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for New Delhi","what":"Overall, how much has New Delhi sequenced over months?","title":"Animation of projected weekly cases - New Delhi (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases %>% select(MonthYear, value) NewDelhi_monthly_cases_cases_tmp$State <- \"India\" NewDelhi_monthly_cases_cases_tmp$type <- \"Confirmed\"  NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = NewDelhi_seq_stats,   confirmed_long = NewDelhi_monthly_cases_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"New Delhi\")) state_month_counts$State <- \"New Delhi\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New Delhi (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"New Delhi\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Delhi\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 4302.364550  ## iter  10 value 1572.411772 ## iter  20 value 1123.483648 ## iter  30 value 1016.583002 ## iter  40 value 997.937340 ## iter  50 value 984.531287 ## iter  60 value 942.126087 ## iter  70 value 936.966776 ## iter  80 value 921.123735 ## iter  90 value 918.589362 ## iter 100 value 917.222805 ## iter 110 value 909.578605 ## iter 120 value 904.884701 ## iter 130 value 884.008789 ## iter 140 value 881.890180 ## iter 150 value 881.523712 ## iter 160 value 881.336429 ## iter 170 value 877.763992 ## iter 180 value 877.432142 ## iter 190 value 877.150836 ## iter 200 value 876.799542 ## iter 210 value 876.346739 ## iter 220 value 876.299027 ## iter 230 value 876.256709 ## iter 240 value 876.049911 ## iter 250 value 875.612340 ## iter 260 value 874.869984 ## iter 270 value 874.552435 ## iter 280 value 874.227920 ## iter 290 value 873.978667 ## iter 300 value 873.901212 ## iter 310 value 873.879910 ## iter 320 value 873.859179 ## iter 330 value 873.711357 ## iter 340 value 873.060577 ## iter 350 value 872.863673 ## iter 360 value 872.577441 ## iter 370 value 872.384707 ## iter 380 value 872.127411 ## iter 390 value 871.977778 ## iter 400 value 871.876208 ## iter 410 value 871.847102 ## iter 420 value 871.508436 ## iter 430 value 871.060681 ## final  value 871.057527  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Delhi\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 987.259468  ## iter  10 value 209.938281 ## iter  20 value 191.017827 ## iter  30 value 189.292215 ## iter  40 value 188.434340 ## iter  50 value 187.750904 ## iter  60 value 187.394283 ## iter  70 value 187.164293 ## iter  80 value 187.015105 ## iter  90 value 186.962660 ## iter 100 value 186.868844 ## iter 110 value 186.823994 ## iter 120 value 186.791548 ## iter 130 value 186.759796 ## iter 140 value 186.719025 ## iter 150 value 186.694064 ## iter 160 value 186.685413 ## iter 170 value 186.677086 ## iter 180 value 186.655211 ## iter 190 value 186.632648 ## iter 200 value 186.619366 ## iter 210 value 186.607642 ## iter 220 value 186.588133 ## iter 230 value 186.576262 ## iter 240 value 186.566091 ## iter 250 value 186.539792 ## iter 260 value 186.514579 ## iter 270 value 186.512583 ## iter 280 value 186.498376 ## final  value 186.498347  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2021.gif\"), animation = the_anim) gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 987.259468  ## iter  10 value 209.938281 ## iter  20 value 191.017827 ## iter  30 value 189.292215 ## iter  40 value 188.434340 ## iter  50 value 187.750904 ## iter  60 value 187.394283 ## iter  70 value 187.164293 ## iter  80 value 187.015105 ## iter  90 value 186.962660 ## iter 100 value 186.868844 ## iter 110 value 186.823994 ## iter 120 value 186.791548 ## iter 130 value 186.759796 ## iter 140 value 186.719025 ## iter 150 value 186.694064 ## iter 160 value 186.685413 ## iter 170 value 186.677086 ## iter 180 value 186.655211 ## iter 190 value 186.632648 ## iter 200 value 186.619366 ## iter 210 value 186.607642 ## iter 220 value 186.588133 ## iter 230 value 186.576262 ## iter 240 value 186.566091 ## iter 250 value 186.539792 ## iter 260 value 186.514579 ## iter 270 value 186.512583 ## iter 280 value 186.498376 ## final  value 186.498347  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-variants-data-for-germany","dir":"Articles","previous_headings":"","what":"Get variants data for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_germany <- gisaid_metadata %>%   filter(Country == \"Germany\") %>%   filter(Host == \"Human\") # format metadata gisaid_germany <- FormatGISAIDMetadata(gisaid_germany) %>%   filter(State != \"\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_germany <- gisaid_germany %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_germany <- gisaid_germany %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_germany <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Germany","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_germany) state_month_counts$State <- \"Germany\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-weekly-cases-for-germany","dir":"Articles","previous_headings":"","what":"Get weekly cases for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"confirmed.tmp <- COVID19::covid19(country = \"Germany\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"Germany\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Germany","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  64 (45 variable) ## initial  value 2527392.066000  ## iter  10 value 1424011.841699 ## iter  20 value 1099913.357890 ## iter  30 value 973273.129046 ## iter  40 value 795032.498740 ## iter  50 value 616983.822728 ## iter  60 value 579729.615949 ## iter  70 value 572480.077046 ## iter  80 value 571634.720663 ## iter  90 value 570327.374899 ## iter 100 value 570082.076431 ## iter 110 value 569770.130107 ## iter 120 value 567014.189314 ## iter 130 value 562608.229973 ## iter 140 value 562171.807740 ## iter 150 value 561911.043828 ## iter 160 value 561836.203902 ## iter 170 value 561807.717194 ## iter 180 value 561804.328847 ## final  value 561803.752971  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_subset <- gisaid_germany %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany_subset)  voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 1357748.250840  ## iter  10 value 680222.115200 ## iter  20 value 581429.523610 ## iter  30 value 504901.049758 ## iter  40 value 444895.280219 ## iter  50 value 436229.705594 ## iter  60 value 429418.062853 ## iter  70 value 428625.066344 ## iter  80 value 427484.993957 ## iter  90 value 426392.426600 ## iter 100 value 426267.482229 ## iter 110 value 426253.537918 ## final  value 426253.529020  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-monthly-cases-for-gujarat","dir":"Articles","previous_headings":"","what":"Get monthly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"Gujarat_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Gujarat\") ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Gujarat_monthly_cases) ##   MonthYear   State value      type ## 1  Mar 2020 Gujarat    74 Confirmed ## 2  Apr 2020 Gujarat  4321 Confirmed ## 3  May 2020 Gujarat 12399 Confirmed ## 4  Jun 2020 Gujarat 15849 Confirmed ## 5  Jul 2020 Gujarat 28795 Confirmed ## 6  Aug 2020 Gujarat 34997 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"plot-monthly-cases-for-gujarat","dir":"Articles","previous_headings":"Get monthly cases for Gujarat","what":"Plot monthly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"p1 <- BarPlot(Gujarat_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Gujarat (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-weekly-cases-for-gujarat","dir":"Articles","previous_headings":"","what":"Get weekly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"Gujarat_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Gujarat\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Gujarat_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Gujarat (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"overall-how-much-has-gujarat-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Gujarat","what":"Overall, how much has Gujarat sequenced over months?","title":"Animation of projected weekly cases - Gujarat (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Gujarat_monthly_cases_tmp <- Gujarat_monthly_cases %>% select(MonthYear, value) Gujarat_monthly_cases_tmp$State <- \"India\" Gujarat_monthly_cases_tmp$type <- \"Confirmed\"  Gujarat_monthly_cases_tmp <- Gujarat_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Gujarat_seq_stats,   confirmed_long = Gujarat_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Gujarat (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Gujarat\")) state_month_counts$State <- \"Gujarat\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Gujarat (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Gujarat\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Gujarat\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 38489.630058  ## iter  10 value 17047.758226 ## iter  20 value 13229.153407 ## iter  30 value 10186.861486 ## iter  40 value 9258.439159 ## iter  50 value 9141.383554 ## iter  60 value 9085.558835 ## iter  70 value 9034.845240 ## iter  80 value 9028.543549 ## iter  90 value 9017.294163 ## iter 100 value 8962.615164 ## iter 110 value 8907.495704 ## iter 120 value 8888.036044 ## iter 130 value 8852.086438 ## iter 140 value 8842.990841 ## iter 150 value 8834.951398 ## iter 160 value 8834.195819 ## iter 170 value 8829.452944 ## iter 180 value 8815.071509 ## iter 190 value 8807.128430 ## iter 200 value 8792.187992 ## iter 210 value 8778.353964 ## iter 220 value 8739.547341 ## iter 230 value 8739.450779 ## iter 240 value 8729.661681 ## iter 250 value 8728.092471 ## iter 260 value 8725.678767 ## iter 270 value 8724.027025 ## iter 280 value 8722.303294 ## iter 290 value 8721.248743 ## iter 300 value 8719.052330 ## iter 310 value 8718.857373 ## iter 320 value 8718.440610 ## iter 330 value 8717.042060 ## iter 340 value 8715.251957 ## iter 350 value 8714.580206 ## iter 360 value 8712.784372 ## final  value 8712.262522  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Gujarat\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Gujarat\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 21156.151834  ## iter  10 value 9160.900795 ## iter  20 value 7319.454347 ## iter  30 value 6756.511770 ## iter  40 value 6549.068460 ## iter  50 value 6508.086861 ## iter  60 value 6471.936046 ## iter  70 value 6466.342027 ## iter  80 value 6448.712093 ## iter  90 value 6439.934046 ## iter 100 value 6439.223567 ## iter 110 value 6438.961495 ## final  value 6438.953032  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Gujarat\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Gujarat\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 21156.151834  ## iter  10 value 9160.900795 ## iter  20 value 7319.454347 ## iter  30 value 6756.511770 ## iter  40 value 6549.068460 ## iter  50 value 6508.086861 ## iter  60 value 6471.936046 ## iter  70 value 6466.342027 ## iter  80 value 6448.712093 ## iter  90 value 6439.934046 ## iter 100 value 6439.223567 ## iter 110 value 6438.961495 ## final  value 6438.953032  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - India","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - India","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india) state_month_counts$State <- \"India\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases - India","text":"","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - India","text":"Look cases January, 2022 :  Look cases last months:  Look cases last months:","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  56 (39 variable) ## initial  value 640129.745871  ## iter  10 value 296593.996060 ## iter  20 value 270417.666619 ## iter  30 value 211346.168467 ## iter  40 value 161844.026957 ## iter  50 value 144075.215936 ## iter  60 value 143298.921571 ## iter  70 value 142746.261386 ## iter  80 value 141568.074370 ## iter  90 value 141545.845121 ## iter 100 value 141468.320192 ## iter 110 value 140973.906931 ## iter 120 value 140856.660013 ## iter 130 value 140731.392723 ## iter 140 value 140488.089270 ## iter 150 value 140402.722732 ## iter 160 value 140377.055504 ## final  value 140377.049531  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") # , trans_y=\"log10\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 259138.144236  ## iter  10 value 92404.598710 ## iter  20 value 81522.149171 ## iter  30 value 78535.004092 ## iter  40 value 76902.296877 ## iter  50 value 76029.327465 ## iter  60 value 75832.475111 ## iter  70 value 75758.657311 ## iter  80 value 75702.597402 ## iter  90 value 75581.334790 ## iter 100 value 75576.005308 ## final  value 75574.961761  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") # , trans_y=\"log10\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Mar 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 141950.604359  ## iter  10 value 63072.786522 ## iter  20 value 54674.223837 ## iter  30 value 52205.170730 ## iter  40 value 49656.186368 ## iter  50 value 49414.531890 ## iter  60 value 49339.468233 ## iter  70 value 49329.690740 ## iter  80 value 49321.152356 ## iter  90 value 49296.080598 ## iter 100 value 49292.035019 ## iter 110 value 49291.865463 ## final  value 49291.730573  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2022.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W39\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Mar 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 141950.604359  ## iter  10 value 63072.786522 ## iter  20 value 54674.223837 ## iter  30 value 52205.170730 ## iter  40 value 49656.186368 ## iter  50 value 49414.531890 ## iter  60 value 49339.468233 ## iter  70 value 49329.690740 ## iter  80 value 49321.152356 ## iter  90 value 49296.080598 ## iter 100 value 49292.035019 ## iter 110 value 49291.865463 ## final  value 49291.730573  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_latest.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Jaipur\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(chennai_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State     District value ##   <yearmon> <chr>     <chr>    <dbl> ## 1 Apr 2020  Rajasthan Jaipur     907 ## 2 May 2020  Rajasthan Jaipur    1084 ## 3 Jun 2020  Rajasthan Jaipur    1327 ## 4 Jul 2020  Rajasthan Jaipur    2100 ## 5 Aug 2020  Rajasthan Jaipur    5373 ## 6 Sep 2020  Rajasthan Jaipur   10697"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"plot-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"Get monthly cases for Jaipur","what":"Plot monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Jaipur (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-weekly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get weekly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Jaipur\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"overall-how-much-has-jaipur-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Jaipur","what":"Overall, how much has Jaipur sequenced over months?","title":"Animation of projected weekly cases - Jaipur (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Jaipur (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Jaipur\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  40 (27 variable) ## initial  value 11706.342613  ## iter  10 value 4681.457858 ## iter  20 value 3325.044410 ## iter  30 value 2938.538953 ## iter  40 value 2903.499413 ## iter  50 value 2893.454462 ## iter  60 value 2886.934015 ## iter  70 value 2881.288738 ## iter  80 value 2878.495549 ## iter  90 value 2872.100772 ## iter 100 value 2865.587078 ## iter 110 value 2864.104513 ## iter 120 value 2864.001574 ## iter 130 value 2863.350780 ## iter 140 value 2862.395382 ## iter 150 value 2861.821554 ## iter 160 value 2861.059578 ## iter 170 value 2860.837644 ## iter 180 value 2860.742589 ## iter 190 value 2860.225128 ## iter 200 value 2859.887634 ## iter 210 value 2859.745341 ## iter 220 value 2859.447069 ## final  value 2859.442954  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Jaipur\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 8342.861720  ## iter  10 value 2201.853970 ## iter  20 value 1760.387081 ## iter  30 value 1741.001963 ## iter  40 value 1738.075480 ## iter  50 value 1737.470349 ## iter  60 value 1737.383133 ## iter  70 value 1737.021345 ## iter  80 value 1736.696090 ## iter  90 value 1735.985709 ## iter 100 value 1735.223423 ## iter 110 value 1735.215896 ## iter 120 value 1735.153141 ## iter 130 value 1735.093217 ## iter 140 value 1735.066843 ## iter 150 value 1735.054569 ## iter 160 value 1735.047039 ## iter 170 value 1735.045111 ## iter 180 value 1735.038829 ## iter 190 value 1734.946306 ## final  value 1734.930932  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Jaipur\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 8342.861720  ## iter  10 value 2201.853970 ## iter  20 value 1760.387081 ## iter  30 value 1741.001963 ## iter  40 value 1738.075480 ## iter  50 value 1737.470349 ## iter  60 value 1737.383133 ## iter  70 value 1737.021345 ## iter  80 value 1736.696090 ## iter  90 value 1735.985709 ## iter 100 value 1735.223423 ## iter 110 value 1735.215896 ## iter 120 value 1735.153141 ## iter 130 value 1735.093217 ## iter 140 value 1735.066843 ## iter 150 value 1735.054569 ## iter 160 value 1735.047039 ## iter 170 value 1735.045111 ## iter 180 value 1735.038829 ## iter 190 value 1734.946306 ## final  value 1734.930932  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-monthly-cases-for-maharashtra","dir":"Articles","previous_headings":"","what":"Get monthly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"Maharashtra_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Maharashtra\") ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Maharashtra_monthly_cases) ##   MonthYear       State  value      type ## 1  Mar 2020 Maharashtra    302 Confirmed ## 2  Apr 2020 Maharashtra  10196 Confirmed ## 3  May 2020 Maharashtra  57157 Confirmed ## 4  Jun 2020 Maharashtra 107106 Confirmed ## 5  Jul 2020 Maharashtra 247357 Confirmed ## 6  Aug 2020 Maharashtra 370423 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"plot-monthly-cases-for-maharashtra","dir":"Articles","previous_headings":"Get monthly cases for Maharashtra","what":"Plot monthly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"p1 <- BarPlot(Maharashtra_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Maharashtra (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-weekly-cases-for-maharashtra","dir":"Articles","previous_headings":"","what":"Get weekly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"Maharashtra_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Maharashtra\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Maharashtra_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Maharashtra (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"overall-how-much-has-maharashtra-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Maharashtra","what":"Overall, how much has Maharashtra sequenced over months?","title":"Animation of projected weekly cases - Maharashtra (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Maharashtra_monthly_cases_tmp <- Maharashtra_monthly_cases %>% select(MonthYear, value) Maharashtra_monthly_cases_tmp$State <- \"India\" Maharashtra_monthly_cases_tmp$type <- \"Confirmed\"  Maharashtra_monthly_cases_tmp <- Maharashtra_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Maharashtra_seq_stats,   confirmed_long = Maharashtra_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Maharashtra (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Maharashtra\")) state_month_counts$State <- \"Maharashtra\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Maharashtra (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Maharashtra\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Maharashtra\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  56 (39 variable) ## initial  value 91757.384293  ## iter  10 value 41846.670758 ## iter  20 value 34116.297851 ## iter  30 value 26791.522238 ## iter  40 value 22657.168788 ## iter  50 value 21627.332938 ## iter  60 value 21385.006797 ## iter  70 value 21122.674262 ## iter  80 value 20918.313547 ## iter  90 value 20915.240890 ## iter 100 value 20829.424662 ## iter 110 value 20759.576537 ## iter 120 value 20663.737046 ## iter 130 value 20562.828332 ## iter 140 value 20524.255623 ## iter 150 value 20512.027704 ## iter 160 value 20484.682257 ## iter 170 value 20483.758910 ## iter 180 value 20482.337547 ## iter 190 value 20477.272409 ## iter 200 value 20474.253794 ## iter 210 value 20470.348554 ## iter 220 value 20463.399717 ## iter 230 value 20455.404546 ## iter 240 value 20444.183754 ## iter 250 value 20443.674048 ## iter 260 value 20443.461757 ## iter 270 value 20440.741374 ## iter 280 value 20433.994326 ## iter 290 value 20432.884146 ## iter 300 value 20430.684757 ## iter 310 value 20428.409944 ## iter 320 value 20426.666041 ## iter 330 value 20425.957211 ## iter 340 value 20425.902287 ## iter 350 value 20425.676187 ## iter 360 value 20425.038004 ## iter 370 value 20424.579624 ## iter 380 value 20423.368339 ## iter 390 value 20422.183193 ## iter 400 value 20420.495359 ## iter 410 value 20418.728358 ## iter 420 value 20418.396879 ## iter 430 value 20417.559984 ## iter 440 value 20416.607623 ## iter 450 value 20416.132104 ## iter 460 value 20415.436636 ## iter 470 value 20415.127539 ## iter 480 value 20414.903959 ## iter 490 value 20414.531147 ## iter 500 value 20414.471960 ## iter 510 value 20414.250798 ## iter 520 value 20413.994368 ## iter 530 value 20413.718715 ## iter 540 value 20413.498658 ## iter 550 value 20413.045029 ## iter 560 value 20411.935075 ## iter 570 value 20411.711796 ## iter 580 value 20411.625839 ## iter 590 value 20411.016780 ## iter 600 value 20410.747736 ## iter 610 value 20410.428711 ## iter 620 value 20410.293280 ## iter 630 value 20410.075918 ## iter 640 value 20409.774277 ## iter 650 value 20409.518363 ## iter 660 value 20409.455323 ## iter 670 value 20409.318531 ## iter 680 value 20409.109177 ## iter 690 value 20409.039365 ## iter 700 value 20408.786679 ## iter 710 value 20408.533137 ## iter 720 value 20406.948180 ## final  value 20406.917621  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Maharashtra\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Maharashtra\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 37474.307323  ## iter  10 value 16669.749625 ## iter  20 value 13824.953810 ## iter  30 value 12379.331871 ## iter  40 value 12016.674418 ## iter  50 value 11929.983113 ## iter  60 value 11892.030608 ## iter  70 value 11889.723044 ## iter  80 value 11884.912010 ## iter  90 value 11879.516311 ## iter 100 value 11873.045811 ## iter 110 value 11872.473409 ## iter 120 value 11872.336567 ## iter 130 value 11872.184680 ## iter 140 value 11872.111914 ## iter 150 value 11872.063143 ## iter 160 value 11872.050134 ## iter 170 value 11871.965917 ## final  value 11871.940035  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Maharashtra\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Maharashtra\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 37474.307323  ## iter  10 value 16669.749625 ## iter  20 value 13824.953810 ## iter  30 value 12379.331871 ## iter  40 value 12016.674418 ## iter  50 value 11929.983113 ## iter  60 value 11892.030608 ## iter  70 value 11889.723044 ## iter  80 value 11884.912010 ## iter  90 value 11879.516311 ## iter 100 value 11873.045811 ## iter 110 value 11872.473409 ## iter 120 value 11872.336567 ## iter 130 value 11872.184680 ## iter 140 value 11872.111914 ## iter 150 value 11872.063143 ## iter 160 value 11872.050134 ## iter 170 value 11871.965917 ## final  value 11871.940035  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Mumbai\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Mumbai_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  Maharashtra Mumbai    7061 ## 2 May 2020  Maharashtra Mumbai   32625 ## 3 Jun 2020  Maharashtra Mumbai   37972 ## 4 Jul 2020  Maharashtra Mumbai   36626 ## 5 Aug 2020  Maharashtra Mumbai   32340 ## 6 Sep 2020  Maharashtra Mumbai   59463"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"plot-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"Get monthly cases for Mumbai","what":"Plot monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"p1 <- BarPlot(Mumbai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Mumbai (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-weekly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Mumbai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Mumbai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"overall-how-much-has-mumbai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Mumbai","what":"Overall, how much has Mumbai sequenced over months?","title":"Animation of projected weekly cases - Mumbai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases %>% select(MonthYear, value) Mumbai_monthly_cases_tmp$State <- \"India\" Mumbai_monthly_cases_tmp$type <- \"Confirmed\"  Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Mumbai_seq_stats,   confirmed_long = Mumbai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"Mumbai\")) state_month_counts$State <- \"Mumbai\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Mumbai (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Mumbai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 15574.329797  ## iter  10 value 7180.065979 ## iter  20 value 4687.044311 ## iter  30 value 4136.486563 ## iter  40 value 3969.175266 ## iter  50 value 3825.992578 ## iter  60 value 3799.447246 ## iter  70 value 3780.892669 ## iter  80 value 3777.022187 ## iter  90 value 3766.742649 ## iter 100 value 3759.681911 ## iter 110 value 3750.156800 ## iter 120 value 3732.670839 ## iter 130 value 3732.047471 ## iter 140 value 3729.770426 ## iter 150 value 3727.391408 ## iter 160 value 3725.303330 ## iter 170 value 3721.171763 ## iter 180 value 3718.983600 ## iter 190 value 3718.679393 ## iter 200 value 3718.266131 ## iter 210 value 3717.388299 ## iter 220 value 3716.550086 ## iter 230 value 3714.654290 ## iter 240 value 3711.627573 ## iter 250 value 3709.147146 ## iter 260 value 3707.628286 ## iter 270 value 3706.024933 ## iter 280 value 3705.084712 ## iter 290 value 3704.698938 ## iter 300 value 3704.246987 ## final  value 3703.258517  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Mumbai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 8236.346878  ## iter  10 value 3535.607096 ## iter  20 value 2813.442453 ## iter  30 value 2610.377376 ## iter  40 value 2578.461798 ## iter  50 value 2569.905312 ## iter  60 value 2553.883708 ## iter  70 value 2552.515452 ## iter  80 value 2550.730665 ## iter  90 value 2548.764127 ## iter 100 value 2546.005380 ## iter 110 value 2544.766794 ## iter 120 value 2544.734442 ## iter 130 value 2544.663193 ## iter 140 value 2544.585915 ## iter 150 value 2544.447931 ## iter 160 value 2544.395797 ## iter 170 value 2544.295029 ## iter 180 value 2544.210785 ## iter 190 value 2544.163845 ## iter 200 value 2544.089318 ## iter 210 value 2543.958257 ## iter 220 value 2543.905407 ## final  value 2543.903712  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Mumbai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 8236.346878  ## iter  10 value 3535.607096 ## iter  20 value 2813.442453 ## iter  30 value 2610.377376 ## iter  40 value 2578.461798 ## iter  50 value 2569.905312 ## iter  60 value 2553.883708 ## iter  70 value 2552.515452 ## iter  80 value 2550.730665 ## iter  90 value 2548.764127 ## iter 100 value 2546.005380 ## iter 110 value 2544.766794 ## iter 120 value 2544.734442 ## iter 130 value 2544.663193 ## iter 140 value 2544.585915 ## iter 150 value 2544.447931 ## iter 160 value 2544.395797 ## iter 170 value 2544.295029 ## iter 180 value 2544.210785 ## iter 190 value 2544.163845 ## iter 200 value 2544.089318 ## iter 210 value 2543.958257 ## iter 220 value 2543.905407 ## final  value 2543.903712  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York City","text":"","code":"counties <- c(\"New York\", \"New York City\", \"New York County\", \"Queens County\", \"Bronx County\", \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Richmond County\")  gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")   gisaid_NYC <- gisaid_NY %>% filter(District %in% counties)  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB.*\",   `XBB.*` = \"XBB.*\",   `XBB.*.*` = \"XBB.*\",   `XBB.*.*.*` = \"XBB.*\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `XBB.1` = \"XBB.1.*\",   `XBB.1.*` = \"XBB.1.*\",   #`XBB.1.5` = \"XBB.1.5\",   #`XBB.1.16` = \"XBB.1.16\",   #`XBB.1.16.*` = \"XBB.1.16\",   `EG.5` = \"EG.5.*\",   `EG.5.*` = \"EG.5.*\",   `EG.6` = \"EG.6.*\",   `EG.6.*` = \"EG.6.*\",   `FL.1.*` = \"FL.1.*\",   #`FL.4.*` = \"FL.4.*\",   `FU.1` = \"FU.1.*\",   `FU.1.*` = \"FU.1.*\",   #`FL.1.5.*` = \"FL.1.5\",   #`FL.1.6.*` = \"FL.1.6\",   `GJ.1.2` = \"GJ.1.2\" )  gisaid_NYC <- gisaid_NYC %>% filter(pangolin_lineage != \"None\")  gisaid_NYC <- CollapseLineageToVOCs(   variant_df = gisaid_NYC,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York City","text":"","code":"confirmed <- read_csv(\"https://raw.githubusercontent.com/nychealth/coronavirus-data/master/trends/data-by-day.csv\") %>% select(date_of_interest, CASE_COUNT) colnames(confirmed) <- c(\"date\", \"daily_cases\") confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date, datefmt = \"%m/%d/%Y\")  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_NYC_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New York City","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_NYC) state_month_counts$State <- \"NYC\" state_month_prevalence <- CountsToPrevalence(state_month_counts)   state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York City","text":"Look cases 2023:","code":"voc_to_keep <- gisaid_NYC_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NYC_weekwise <- gisaid_NYC_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NYC_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  64 (45 variable) ## initial  value 422672.832939  ## iter  10 value 167104.269978 ## iter  20 value 147965.111301 ## iter  30 value 124212.618790 ## iter  40 value 108292.570850 ## iter  50 value 93846.380323 ## iter  60 value 91129.545856 ## iter  70 value 88520.267177 ## iter  80 value 86238.123647 ## iter  90 value 83176.016429 ## iter 100 value 82736.879154 ## iter 110 value 82505.959477 ## iter 120 value 81495.301665 ## iter 130 value 80029.491267 ## iter 140 value 79961.696325 ## iter 150 value 79879.057400 ## iter 160 value 79857.213426 ## iter 170 value 79826.173849 ## iter 180 value 79790.675225 ## iter 190 value 79761.982310 ## iter 200 value 79760.395777 ## iter 210 value 79757.876783 ## iter 220 value 79749.991528 ## iter 230 value 79748.716408 ## iter 240 value 79746.998346 ## iter 250 value 79746.263239 ## iter 260 value 79743.909134 ## iter 270 value 79741.390079 ## final  value 79740.120264  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and NYC Health**<br>\", date_breaks = \"14 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"April 2023\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_subset <- gisaid_NYC %>% filter(MonthYearCollected > \"April 2023\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC_subset)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 6732.758812  ## iter  10 value 4739.251884 ## iter  20 value 4415.851230 ## iter  30 value 4403.846587 ## iter  40 value 4402.647556 ## iter  50 value 4402.285843 ## iter  60 value 4401.841183 ## iter  70 value 4401.830964 ## iter  80 value 4401.679606 ## iter  90 value 4401.661867 ## final  value 4401.661756  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and NYC Health**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York State","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB.*\",   `XBB.*` = \"XBB.*\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `XBB.1` = \"XBB.1.*\",   `XBB.1.*` = \"XBB.1.*\",   `XBB.1.5` = \"XBB.1.5\",   `XBB.1.16` = \"XBB.1.16\",   `XBB.1.16.*` = \"XBB.1.16\",   `EG.5.*` = \"EG.5\",   `FL.1.*` = \"FL.1.*\",   #`FL.1.5.*` = \"FL.1.5\",   #`FL.1.6.*` = \"FL.1.6\",   `GJ.1.2` = \"GJ.1.2\" ) gisaid_NY <- gisaid_NY %>% filter(pangolin_lineage != \"None\")  gisaid_NY <- CollapseLineageToVOCs(   variant_df = gisaid_NY,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York State","text":"","code":"confirmed <- covid19(country = \"USA\", level = 2) %>%   filter(administrative_area_level_2 == \"New York\") %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) ## We have invested a lot of time and effort in creating COVID-19 Data ## Hub, please cite the following when using it: ##  ##   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open ##   Source Software 5(51):2376, doi: 10.21105/joss.02376 ##  ## The implementation details and the latest version of the data are ## described in: ##  ##   Guidotti, E., (2022), \"A worldwide epidemiological database for ##   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: ##   10.1038/s41597-022-01245-1 ## To print citations in BibTeX format use: ##  > print(citation('COVID19'), bibtex=TRUE) ##  ## To hide this message use 'verbose = FALSE'. confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New York State","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_NY) state_month_counts$State <- \"New York\" state_month_prevalence <- CountsToPrevalence(state_month_counts) state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York State","text":"Look cases february, 2022 :","code":"voc_to_keep <- gisaid_NY_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NY_weekwise <- gisaid_NY_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NY_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  76 (54 variable) ## initial  value 995352.874712  ## iter  10 value 492163.831255 ## iter  20 value 398192.838700 ## iter  30 value 364367.830456 ## iter  40 value 292482.835153 ## iter  50 value 236627.039536 ## iter  60 value 209930.573224 ## iter  70 value 203354.450954 ## iter  80 value 197806.284460 ## iter  90 value 195635.242493 ## iter 100 value 191935.893763 ## iter 110 value 190069.758715 ## iter 120 value 189933.896034 ## iter 130 value 189711.258383 ## iter 140 value 189255.222293 ## iter 150 value 187731.360986 ## iter 160 value 187466.203056 ## iter 170 value 187362.168190 ## iter 180 value 187131.613413 ## iter 190 value 187100.992778 ## iter 200 value 187045.498215 ## iter 210 value 187029.972950 ## final  value 187023.448309  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Feb 2022\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY <- gisaid_NY %>% filter(MonthYearCollected > \"Feb 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 382413.332244  ## iter  10 value 132469.264338 ## iter  20 value 125450.175605 ## iter  30 value 109105.415373 ## iter  40 value 102607.260296 ## iter  50 value 102174.779786 ## iter  60 value 102088.476730 ## iter  70 value 102040.914306 ## iter  80 value 101902.723129 ## iter  90 value 101860.204656 ## iter 100 value 101854.271665 ## final  value 101851.048174  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-monthly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Pune\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(pune_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District  value ##   <yearmon> <chr>       <chr>     <dbl> ## 1 Apr 2020  Maharashtra Pune       1248 ## 2 May 2020  Maharashtra Pune       6671 ## 3 Jun 2020  Maharashtra Pune      14408 ## 4 Jul 2020  Maharashtra Pune      66904 ## 5 Aug 2020  Maharashtra Pune      85874 ## 6 Sep 2020  Maharashtra Pune     117959"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"plot-monthly-cases-for-pune","dir":"Articles","previous_headings":"Get monthly cases for Pune","what":"Plot monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"p1 <- BarPlot(pune_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Pune (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-weekly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get weekly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Pune\"), rename_country_as_state = TRUE)   p2 <- BarPlot(pune_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"overall-how-much-has-pune-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Pune","what":"Overall, how much has Pune sequenced over months?","title":"Animation of projected weekly cases - Pune (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"pune_monthly_cases_tmp <- pune_monthly_cases %>% select(MonthYear, value) pune_monthly_cases_tmp$State <- \"India\" pune_monthly_cases_tmp$type <- \"Confirmed\"  pune_monthly_cases_tmp <- pune_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = pune_seq_stats,   confirmed_long = pune_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Pune (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Pune\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Pune\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 26352.289699  ## iter  10 value 12149.978224 ## iter  20 value 8036.150680 ## iter  30 value 6841.077820 ## iter  40 value 6634.932288 ## iter  50 value 6572.953790 ## iter  60 value 6553.776626 ## iter  70 value 6532.473890 ## iter  80 value 6528.822986 ## iter  90 value 6521.000676 ## iter 100 value 6510.634627 ## iter 110 value 6495.292745 ## iter 120 value 6478.731798 ## iter 130 value 6438.698651 ## iter 140 value 6430.709230 ## iter 150 value 6423.568224 ## iter 160 value 6422.558749 ## iter 170 value 6418.758642 ## iter 180 value 6415.494976 ## iter 190 value 6410.831264 ## iter 200 value 6405.327807 ## iter 210 value 6399.681904 ## iter 220 value 6397.266154 ## iter 230 value 6397.162142 ## iter 240 value 6396.441907 ## iter 250 value 6395.923754 ## iter 260 value 6394.985608 ## iter 270 value 6393.571034 ## iter 280 value 6392.945738 ## iter 290 value 6391.914246 ## iter 300 value 6391.118122 ## iter 310 value 6390.816941 ## iter 320 value 6390.356875 ## iter 330 value 6389.818980 ## iter 340 value 6389.438182 ## iter 350 value 6388.701467 ## iter 360 value 6388.255251 ## final  value 6387.365324  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Pune\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Pune\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 10200.646490  ## iter  10 value 4378.879798 ## iter  20 value 3793.374664 ## iter  30 value 3558.822124 ## iter  40 value 3501.290486 ## iter  50 value 3489.570912 ## iter  60 value 3478.714401 ## iter  70 value 3478.393867 ## iter  80 value 3475.846506 ## iter  90 value 3473.608510 ## iter 100 value 3469.873682 ## iter 110 value 3466.262149 ## iter 120 value 3463.743740 ## iter 130 value 3463.251829 ## iter 140 value 3462.813786 ## iter 150 value 3462.467938 ## iter 160 value 3462.188804 ## iter 170 value 3462.068295 ## iter 180 value 3461.959438 ## final  value 3461.917495  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Pune\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Pune\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 10200.646490  ## iter  10 value 4378.879798 ## iter  20 value 3793.374664 ## iter  30 value 3558.822124 ## iter  40 value 3501.290486 ## iter  50 value 3489.570912 ## iter  60 value 3478.714401 ## iter  70 value 3478.393867 ## iter  80 value 3475.846506 ## iter  90 value 3473.608510 ## iter 100 value 3469.873682 ## iter 110 value 3466.262149 ## iter 120 value 3463.743740 ## iter 130 value 3463.251829 ## iter 140 value 3462.813786 ## iter 150 value 3462.467938 ## iter 160 value 3462.188804 ## iter 170 value 3462.068295 ## iter 180 value 3461.959438 ## final  value 3461.917495  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"get-variants-data-for-singapore","dir":"Articles","previous_headings":"","what":"Get variants data for Singapore","title":"Animation of projected weekly cases - Singapore","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_singapore <- gisaid_metadata %>%   filter(Country == \"Singapore\") %>%   filter(Host == \"Human\") # format metadata gisaid_singapore <- FormatGISAIDMetadata(gisaid_singapore) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_singapore <- gisaid_singapore %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_singapore <- gisaid_singapore %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_singapore <- CollapseLineageToVOCs(   variant_df = gisaid_singapore,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Singapore","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_singapore) state_month_counts$State <- \"Singapore\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"get-weekly-cases-for-singapore","dir":"Articles","previous_headings":"","what":"Get weekly cases for Singapore","title":"Animation of projected weekly cases - Singapore","text":"","code":"confirmed.tmp <- COVID19::covid19(country = \"Singapore\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"Singapore\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Singapore","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 103874.067774  ## iter  10 value 58805.083823 ## iter  20 value 49154.847826 ## iter  30 value 43133.774901 ## iter  40 value 37412.723793 ## iter  50 value 36253.455715 ## iter  60 value 34141.746951 ## iter  70 value 33876.944572 ## iter  80 value 33859.642440 ## iter  90 value 33593.363175 ## iter 100 value 33441.626059 ## iter 110 value 33327.001744 ## iter 120 value 33303.672408 ## iter 130 value 33276.717561 ## iter 140 value 33274.546700 ## iter 140 value 33274.546407 ## final  value 33274.539873  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_singapore_subset <- gisaid_singapore %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore_subset)  voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 69742.999882  ## iter  10 value 43026.610638 ## iter  20 value 35592.413484 ## iter  30 value 31459.011737 ## iter  40 value 30501.913687 ## iter  50 value 30442.812819 ## iter  60 value 30433.490553 ## iter  70 value 30429.288482 ## iter  80 value 30413.970068 ## iter  90 value 30413.173035 ## iter 100 value 30400.343148 ## iter 110 value 30398.469757 ## iter 110 value 30398.469638 ## iter 110 value 30398.469638 ## final  value 30398.469638  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-variants-data-for-south-africa","dir":"Articles","previous_headings":"","what":"Get variants data for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_sa <- gisaid_metadata %>%   filter(Country == \"South Africa\") %>%   filter(Host == \"Human\") # format metadata gisaid_sa <- FormatGISAIDMetadata(gisaid_sa) gisaid_sa$State <- CleanSouthAfricanStates(gisaid_sa$State)  gisaid_sa <- gisaid_sa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_sa <- gisaid_sa %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_sa <- CollapseLineageToVOCs(   variant_df = gisaid_sa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-weekly-cases-for-south-africa","dir":"Articles","previous_headings":"","what":"Get weekly cases for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - South Africa","text":"Look cases December, 2021 :","code":"voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  52 (36 variable) ## initial  value 138381.582784  ## iter  10 value 87494.907107 ## iter  20 value 72965.100811 ## iter  30 value 56595.561989 ## iter  40 value 42163.231091 ## iter  50 value 40369.630926 ## iter  60 value 39656.131057 ## iter  70 value 39561.387171 ## iter  80 value 39531.381822 ## iter  90 value 39510.694939 ## iter 100 value 39253.660733 ## iter 110 value 39112.117473 ## iter 120 value 38873.567536 ## iter 130 value 38832.753494 ## iter 140 value 38815.962146 ## final  value 38808.639115  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_subset <- gisaid_sa %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa_subset)  voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 43746.741335  ## iter  10 value 29219.779468 ## iter  20 value 23176.690354 ## iter  30 value 21372.339086 ## iter  40 value 20737.768471 ## iter  50 value 20343.143500 ## iter  60 value 20338.799022 ## iter  70 value 20265.195370 ## iter  80 value 20252.016567 ## final  value 20251.856010  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-monthly-cases-for-tamilnadu","dir":"Articles","previous_headings":"","what":"Get monthly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"Tamilnadu_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Tamil Nadu\") ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Tamilnadu_monthly_cases) ##   MonthYear      State  value      type ## 1  Mar 2020 Tamil Nadu    124 Confirmed ## 2  Apr 2020 Tamil Nadu   2199 Confirmed ## 3  May 2020 Tamil Nadu  20010 Confirmed ## 4  Jun 2020 Tamil Nadu  67834 Confirmed ## 5  Jul 2020 Tamil Nadu 155692 Confirmed ## 6  Aug 2020 Tamil Nadu 182182 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"plot-monthly-cases-for-tamilnadu","dir":"Articles","previous_headings":"Get monthly cases for Tamilnadu","what":"Plot monthly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"p1 <- BarPlot(Tamilnadu_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Tamilnadu (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-weekly-cases-for-tamilnadu","dir":"Articles","previous_headings":"","what":"Get weekly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"Tamilnadu_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Tamil Nadu\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Tamilnadu_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Tamilnadu (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"overall-how-much-has-tamilnadu-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Tamilnadu","what":"Overall, how much has Tamilnadu sequenced over months?","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Tamilnadu_monthly_cases_tmp <- Tamilnadu_monthly_cases %>% select(MonthYear, value) Tamilnadu_monthly_cases_tmp$State <- \"India\" Tamilnadu_monthly_cases_tmp$type <- \"Confirmed\"  Tamilnadu_monthly_cases_tmp <- Tamilnadu_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Tamilnadu_seq_stats,   confirmed_long = Tamilnadu_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Tamilnadu (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Tamil Nadu\")) state_month_counts$State <- \"Tamil Nadu\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Tamil Nadu\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 48880.239905  ## iter  10 value 23212.501740 ## iter  20 value 19051.842510 ## iter  30 value 14768.690433 ## iter  40 value 13758.041747 ## iter  50 value 13396.322067 ## iter  60 value 13337.436112 ## iter  70 value 13244.879804 ## iter  80 value 13199.341295 ## iter  90 value 13144.352606 ## iter 100 value 13103.233217 ## iter 110 value 12973.589176 ## iter 120 value 12968.508959 ## iter 130 value 12925.594810 ## iter 140 value 12920.729725 ## final  value 12897.213875  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Tamil Nadu\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 21885.590155  ## iter  10 value 13137.767519 ## iter  20 value 10353.532902 ## iter  30 value 9196.541189 ## iter  40 value 9007.931283 ## iter  50 value 8976.826120 ## iter  60 value 8966.200971 ## iter  70 value 8962.919436 ## iter  80 value 8959.114418 ## iter  90 value 8946.052324 ## iter 100 value 8936.111846 ## iter 110 value 8932.574336 ## iter 120 value 8931.515866 ## final  value 8930.908888  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Tamil Nadu\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 21885.590155  ## iter  10 value 13137.767519 ## iter  20 value 10353.532902 ## iter  30 value 9196.541189 ## iter  40 value 9007.931283 ## iter  50 value 8976.826120 ## iter  60 value 8966.200971 ## iter  70 value 8962.919436 ## iter  80 value 8959.114418 ## iter  90 value 8946.052324 ## iter 100 value 8936.111846 ## iter 110 value 8932.574336 ## iter 120 value 8931.515866 ## final  value 8930.908888  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-monthly-cases-for-telangana","dir":"Articles","previous_headings":"","what":"Get monthly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"Telangana_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Telangana\") ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Telangana_monthly_cases) ##   MonthYear     State value      type ## 1  Mar 2020 Telangana    97 Confirmed ## 2  Apr 2020 Telangana   941 Confirmed ## 3  May 2020 Telangana  1660 Confirmed ## 4  Jun 2020 Telangana 13641 Confirmed ## 5  Jul 2020 Telangana 46364 Confirmed ## 6  Aug 2020 Telangana 61750 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"plot-monthly-cases-for-telangana","dir":"Articles","previous_headings":"Get monthly cases for Telangana","what":"Plot monthly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"p1 <- BarPlot(Telangana_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Telangana (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-weekly-cases-for-telangana","dir":"Articles","previous_headings":"","what":"Get weekly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"Telangana_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Telangana\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Telangana_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Telangana (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"overall-how-much-has-telangana-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Telangana","what":"Overall, how much has Telangana sequenced over months?","title":"Animation of projected weekly cases - Telangana (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Telangana_monthly_cases_tmp <- Telangana_monthly_cases %>% select(MonthYear, value) Telangana_monthly_cases_tmp$State <- \"India\" Telangana_monthly_cases_tmp$type <- \"Confirmed\"  Telangana_monthly_cases_tmp <- Telangana_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Telangana_seq_stats,   confirmed_long = Telangana_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Telangana (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Telangana\")) state_month_counts$State <- \"Telangana\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Telangana (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Telangana\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Telangana\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  60 (42 variable) ## initial  value 53619.393982  ## iter  10 value 20154.531472 ## iter  20 value 15687.664547 ## iter  30 value 12108.054248 ## iter  40 value 11597.304252 ## iter  50 value 11283.343463 ## iter  60 value 11204.782808 ## iter  70 value 11187.634497 ## iter  80 value 11178.025018 ## iter  90 value 11172.513747 ## iter 100 value 11169.598277 ## iter 110 value 11160.554027 ## iter 120 value 11156.394683 ## iter 130 value 11146.402140 ## iter 140 value 11123.055827 ## iter 150 value 11113.935759 ## iter 160 value 11107.484856 ## iter 170 value 11103.149835 ## final  value 11103.130856  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Telangana\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Telangana\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 20286.194008  ## iter  10 value 7257.332005 ## iter  20 value 5875.291576 ## iter  30 value 5568.428139 ## iter  40 value 5539.667031 ## iter  50 value 5527.818322 ## iter  60 value 5522.374997 ## iter  70 value 5521.089292 ## iter  80 value 5518.958355 ## iter  90 value 5514.596580 ## iter 100 value 5513.700343 ## iter 110 value 5512.638653 ## iter 120 value 5512.390664 ## iter 130 value 5512.125998 ## iter 140 value 5512.096798 ## iter 150 value 5512.077955 ## iter 160 value 5512.045935 ## iter 170 value 5512.002319 ## iter 180 value 5511.929255 ## iter 190 value 5511.899297 ## iter 200 value 5511.889324 ## iter 210 value 5511.873786 ## iter 220 value 5511.860573 ## iter 230 value 5511.846093 ## iter 240 value 5511.839277 ## final  value 5511.833946  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Telangana\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Telangana\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 20286.194008  ## iter  10 value 7257.332005 ## iter  20 value 5875.291576 ## iter  30 value 5568.428139 ## iter  40 value 5539.667031 ## iter  50 value 5527.818322 ## iter  60 value 5522.374997 ## iter  70 value 5521.089292 ## iter  80 value 5518.958355 ## iter  90 value 5514.596580 ## iter 100 value 5513.700343 ## iter 110 value 5512.638653 ## iter 120 value 5512.390664 ## iter 130 value 5512.125998 ## iter 140 value 5512.096798 ## iter 150 value 5512.077955 ## iter 160 value 5512.045935 ## iter 170 value 5512.002319 ## iter 180 value 5511.929255 ## iter 190 value 5511.899297 ## iter 200 value 5511.889324 ## iter 210 value 5511.873786 ## iter 220 value 5511.860573 ## iter 230 value 5511.846093 ## iter 240 value 5511.839277 ## final  value 5511.833946  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-variants-data-for-uk","dir":"Articles","previous_headings":"","what":"Get variants data for UK","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_uk <- gisaid_metadata %>%   filter(Country == \"United Kingdom\") %>%   filter(Host == \"Human\") # format metadata gisaid_uk <- FormatGISAIDMetadata(gisaid_uk)  gisaid_uk <- gisaid_uk %>% filter(State != \"\")  gisaid_uk <- gisaid_uk %>%   filter(pangolin_lineage != \"Unknown\") %>%   arrange(State, MonthYearCollected) %>%   filter(!is.na(MonthYearCollected))  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_uk <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-daily-case-data","dir":"Articles","previous_headings":"","what":"Get daily case data","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"if (FALSE) {   cases.struct <- list(     date = \"date\",     areaName = \"areaName\",     newCasesByPublishDate = \"newCasesByPublishDate\"   )   all_nations <- c(     \"areaType=nation\"   )   cases_data <- get_data(     filters = all_nations,     structure = cases.struct   ) %>% rename(new_cases = newCasesByPublishDate)     confirmed <- cases_data %>%     arrange(date) %>%     group_by(date) %>%     summarise(daily_cases = sum(new_cases)) } confirmed <- covid19(country = \"United Kingdom\", level = 1) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) ## We have invested a lot of time and effort in creating COVID-19 Data ## Hub, please cite the following when using it: ##  ##   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open ##   Source Software 5(51):2376, doi: 10.21105/joss.02376 ##  ## The implementation details and the latest version of the data are ## described in: ##  ##   Guidotti, E., (2022), \"A worldwide epidemiological database for ##   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: ##   10.1038/s41597-022-01245-1 ## To print citations in BibTeX format use: ##  > print(citation('COVID19'), bibtex=TRUE) ##  ## To hide this message use 'verbose = FALSE'. confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_uk) state_month_counts$State <- \"UK\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - United Kingdom","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_uk_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_uk_weekwise <- gisaid_uk_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  uk_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_uk_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  64 (45 variable) ## initial  value 8324664.367460  ## iter  10 value 3897348.103387 ## iter  20 value 3479066.408470 ## iter  30 value 3343841.404613 ## iter  40 value 2486875.788083 ## iter  50 value 1695157.906672 ## iter  60 value 1140643.597736 ## iter  70 value 1090564.263479 ## iter  80 value 1065724.777255 ## iter  90 value 1054917.406547 ## iter 100 value 1053259.483232 ## iter 110 value 1050032.502529 ## iter 120 value 1044415.966894 ## iter 130 value 1036264.204669 ## iter 140 value 1035148.555537 ## iter 150 value 1035060.397094 ## iter 160 value 1034990.452284 ## iter 170 value 1034955.234832 ## iter 180 value 1034939.749545 ## final  value 1034935.250451  ## converged the_anim <- PlotVariantPrevalenceAnimated(uk_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and gov.uk**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk <- gisaid_uk %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 2941091.939281  ## iter  10 value 1675226.282036 ## iter  20 value 1160748.282385 ## iter  30 value 906447.195397 ## iter  40 value 772242.631391 ## iter  50 value 734981.501382 ## iter  60 value 729067.491224 ## iter  70 value 727433.027155 ## iter  80 value 724024.463909 ## iter  90 value 723817.437958 ## final  value 723817.426059  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and gov.uk**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-variants-data-for-usa","dir":"Articles","previous_headings":"","what":"Get variants data for USA","title":"Animation of projected weekly cases - USA","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB.*\",   `XBB.*` = \"XBB.*\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `XBB.1` = \"XBB.1.*\",   `XBB.1.*` = \"XBB.1.*\",   `XBB.1.5` = \"XBB.1.5\",   `XBB.1.16` = \"XBB.1.16\",   `XBB.1.16.*` = \"XBB.1.16\",   `EG.5.*` = \"EG.5\",   `FL.1.*` = \"FL.1.*\",   #`FL.1.5.*` = \"FL.1.5\",   #`FL.1.6.*` = \"FL.1.6\",   `GJ.1.2` = \"GJ.1.2\" ) gisaid_usa <- gisaid_usa %>% filter(pangolin_lineage != \"None\")  gisaid_usa <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-weekly-cases-for-usa","dir":"Articles","previous_headings":"","what":"Get weekly cases for USA","title":"Animation of projected weekly cases - USA","text":"","code":"confirmed <- covid19(country = \"USA\", level = 1) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) #> We have invested a lot of time and effort in creating COVID-19 Data #> Hub, please cite the following when using it: #>  #>   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open #>   Source Software 5(51):2376, doi: 10.21105/joss.02376 #>  #> The implementation details and the latest version of the data are #> described in: #>  #>   Guidotti, E., (2022), \"A worldwide epidemiological database for #>   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: #>   10.1038/s41597-022-01245-1 #> To print citations in BibTeX format use: #>  > print(citation('COVID19'), bibtex=TRUE) #>  #> To hide this message use 'verbose = FALSE'.  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - USA","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_usa) state_month_counts$State <- \"USA\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs()  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - USA","text":"Look cases October,2021 : Look cases past weeks","code":"voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  76 (54 variable) #> initial  value 14421346.843136  #> iter  10 value 6540269.744225 #> iter  20 value 5720377.885672 #> iter  30 value 5426574.119429 #> iter  40 value 5330457.766193 #> iter  50 value 4711722.859049 #> iter  60 value 3265268.025435 #> iter  70 value 2676598.627602 #> iter  80 value 2590579.844885 #> iter  90 value 2539130.087942 #> iter 100 value 2511547.487284 #> iter 110 value 2465945.697136 #> iter 120 value 2464001.540017 #> iter 130 value 2460949.129744 #> iter 140 value 2447982.313244 #> iter 150 value 2427933.404785 #> iter 160 value 2422946.342095 #> iter 170 value 2420988.590597 #> iter 180 value 2420401.050837 #> iter 190 value 2420252.715406 #> iter 200 value 2419836.694098 #> iter 210 value 2419706.930565 #> final  value 2419688.544217  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  44 (30 variable) #> initial  value 5627030.533493  #> iter  10 value 2087897.681601 #> iter  20 value 2001063.604555 #> iter  30 value 1824170.650909 #> iter  40 value 1342443.826084 #> iter  50 value 1321412.359538 #> iter  60 value 1314445.850505 #> iter  70 value 1313717.704941 #> iter  80 value 1311583.601351 #> iter  90 value 1306198.474449 #> iter 100 value 1305560.798397 #> iter 110 value 1305527.090545 #> iter 110 value 1305527.086712 #> iter 110 value 1305527.086711 #> final  value 1305527.086711  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2021.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"December 2022\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  44 (30 variable) #> initial  value 5627030.533493  #> iter  10 value 2087897.681601 #> iter  20 value 2001063.604555 #> iter  30 value 1824170.650909 #> iter  40 value 1342443.826084 #> iter  50 value 1321412.359538 #> iter  60 value 1314445.850505 #> iter  70 value 1313717.704941 #> iter  80 value 1311583.601351 #> iter  90 value 1306198.474449 #> iter 100 value 1305560.798397 #> iter 110 value 1305527.090545 #> iter 110 value 1305527.086712 #> iter 110 value 1305527.086711 #> final  value 1305527.086711  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2022_2.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_11_06.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Kolkata\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(chennai_monthly_cases) ## # A tibble: 6 × 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  West Bengal Kolkata    184 ## 2 May 2020  West Bengal Kolkata   1941 ## 3 Jun 2020  West Bengal Kolkata   3859 ## 4 Jul 2020  West Bengal Kolkata  15655 ## 5 Aug 2020  West Bengal Kolkata  18518 ## 6 Sep 2020  West Bengal Kolkata  16255"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"plot-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"Get monthly cases for Kolkata","what":"Plot monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Kolkata (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-weekly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get weekly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Kolkata\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"overall-how-much-has-kolkata-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Kolkata","what":"Overall, how much has Kolkata sequenced over months?","title":"Animation of projected weekly cases - Kolkata (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Kolkata (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Kolkata\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 19701.376015  ## iter  10 value 11937.104127 ## iter  20 value 9026.828561 ## iter  30 value 8165.166937 ## iter  40 value 7929.964445 ## iter  50 value 7790.156788 ## iter  60 value 7655.284891 ## iter  70 value 7511.438492 ## iter  80 value 7491.153811 ## iter  90 value 7453.658981 ## iter 100 value 7404.604473 ## iter 110 value 7385.043796 ## iter 120 value 7379.804570 ## iter 130 value 7373.349617 ## iter 140 value 7362.985326 ## iter 150 value 7346.543707 ## iter 160 value 7346.406363 ## iter 170 value 7341.655478 ## iter 180 value 7340.006787 ## iter 190 value 7338.269929 ## iter 200 value 7336.269489 ## iter 210 value 7332.752486 ## iter 220 value 7331.535662 ## iter 230 value 7331.527319 ## iter 240 value 7331.289772 ## iter 250 value 7329.557099 ## iter 260 value 7328.783668 ## iter 270 value 7328.082157 ## iter 280 value 7326.107298 ## iter 290 value 7324.217027 ## final  value 7323.526512  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Kolkata\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 9495.860924  ## iter  10 value 5586.271955 ## iter  20 value 4945.393878 ## iter  30 value 4832.958460 ## iter  40 value 4815.515772 ## iter  50 value 4794.676664 ## iter  60 value 4788.966413 ## iter  70 value 4786.558396 ## iter  80 value 4785.794608 ## iter  90 value 4784.950490 ## iter 100 value 4783.399763 ## iter 110 value 4780.848750 ## final  value 4780.826657  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Kolkata\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 9495.860924  ## iter  10 value 5586.271955 ## iter  20 value 4945.393878 ## iter  30 value 4832.958460 ## iter  40 value 4815.515772 ## iter  50 value 4794.676664 ## iter  60 value 4788.966413 ## iter  70 value 4786.558396 ## iter  80 value 4785.794608 ## iter  90 value 4784.950490 ## iter 100 value 4783.399763 ## iter 110 value 4780.848750 ## final  value 4780.826657  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## ℹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saket Choudhary. Maintainer.","code":""},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choudhary S (2023). covmuller: tool model COVID19 variant prevalence using data GISAID. R package version 0.1.2.0001, https://saketkc.github.io/covmuller.","code":"@Manual{,   title = {covmuller: A tool to model COVID19 variant prevalence using data from GISAID},   author = {Saket Choudhary},   year = {2023},   note = {R package version 0.1.2.0001},   url = {https://saketkc.github.io/covmuller}, }"},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"covmuller","dir":"","previous_headings":"","what":"A tool to model COVID19 variant prevalence using data from GISAID","title":"A tool to model COVID19 variant prevalence using data from GISAID","text":"Covmuller R-package designed analysis sequencing metadata deposited GISAID.","code":""},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"A tool to model COVID19 variant prevalence using data from GISAID","text":"Covmuller currently supports following features: Read preprocess metadata file downloaded GISAID: Vignette Plot variant prevalence: Vignette India USA Canada UK Australia SouthAfrica India New York state South Africa United Kingdom USA Aizawl (India) Bengaluru (India) Chennai (India) Delhi (India) Jaipur (India) Mumbai (India) Maharashtra (India) Pune (India) New York City (USA)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from the USA — CleanAmericanStates","title":"Clean states from the USA — CleanAmericanStates","text":"Clean states USA","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from the USA — CleanAmericanStates","text":"","code":"CleanAmericanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from the USA — CleanAmericanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from the USA — CleanAmericanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from Canada — CleanCanadaStates","title":"Clean states from Canada — CleanCanadaStates","text":"Clean states Canada","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from Canada — CleanCanadaStates","text":"","code":"CleanCanadaStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from Canada — CleanCanadaStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from Canada — CleanCanadaStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Indian States — CleanIndianStates","title":"Clean Indian States — CleanIndianStates","text":"Clean Indian States","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Indian States — CleanIndianStates","text":"","code":"CleanIndianStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Indian States — CleanIndianStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Indian States — CleanIndianStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from South Africa — CleanSouthAfricanStates","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"Clean states South Africa","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"","code":"CleanSouthAfricanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from South Africa — CleanSouthAfricanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"Collpase pangolin lineage list VOCs","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"","code":"CollapseLineageToVOCs(   variant_df,   vocs = GetVOCs(),   custom_voc_mapping = NULL,   summarize = TRUE )"},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"variant_df dataframe \"pangolin_lineage\" column vocs named list VOC (variant concernt) name key list lineages VOC. method replace lineages VOC name. custom_voc_mapping named vector custom mapping naming lineages. See example.","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collpase pangolin lineage a list of VOCs — CollapseLineageToVOCs","text":"dataframe new column \"lineage_collpased\".","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"","code":"CombineSequencedCases(   cases_sequenced,   confirmed_long,   prune_oversequenced = TRUE,   month.min = NULL,   month.max = NULL,   max.percent = 100 )"},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"cases_sequenced long dataframe per state sequenced cases prune_oversequenced Whether round percentages 100 100. Default TRUE cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases — CombineSequencedCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert monthwise counts to prevalence — CountsToPrevalence","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"Convert monthwise counts prevalence","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"","code":"CountsToPrevalence(variant_df)"},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert monthwise counts to prevalence — CountsToPrevalence","text":"dataframe monthwise prevalence variants","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set them — CovmullerTheme","title":"Set them — CovmullerTheme","text":"Set ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set them — CovmullerTheme","text":"","code":"CovmullerTheme()"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GISAID India Metadata for India — FilterGISAIDIndia","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"Filter GISAID India Metadata India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"","code":"FilterGISAIDIndia(gisaid_metadata_all)"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"gisaid_metadata_all dataframe GISAID metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GISAID India Metadata for India — FilterGISAIDIndia","text":"dataframe Indian entries Human date known","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"Format metadata.tar.x file downloaded GISAID missing columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"","code":"FormatGISAIDMetadata(   df,   collection_col = \"Collection date\",   submission_col = \"Submission date\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"df GISAID metadata dataframe collection_col Name column representing date collection (Collection date) submission_col Name column representing date submission (Submission date)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns — FormatGISAIDMetadata","text":"data frame following extra columns: DateCollected, MonthYearCollected, YearCollected, MonthCollected, WeekCollected DateCollectedNumeric, MonthYearCollectedNumeric DateSubmitted, MonthYearSubmitted, YearSubmitted, MonthSubmitted, WeekSubmitted DateSubmittedNumeric, MonthYearSubmittedNumeric","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"Geocode given address get latitude, longitude Gooogle","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"","code":"GeocodeAddress(address, api.key = NULL, restrict.to = NULL)"},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"address String address geocode api.key API key Google Maps restrict.Country name search restricted , Currently supports 'India'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a given address to get its latitude, longitude from Gooogle — GeocodeAddress","text":"dataframe geocoded address","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine filetype — GetFiletype","title":"Determine filetype — GetFiletype","text":"Determine filetype","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine filetype — GetFiletype","text":"","code":"GetFiletype(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine filetype — GetFiletype","text":"path Path file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine filetype — GetFiletype","text":"Extension file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"Get daily confirmed cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"","code":"GetIndiaConfirmedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily confirmed cases for India — GetIndiaConfirmedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"Get India monthwose cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"","code":"GetIndiaConfirmedCasesMonthlyLong(   url = \"http://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India monthwose cases long — GetIndiaConfirmedCasesMonthlyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"","code":"GetIndiaConfirmedCasesWeeklyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long — GetIndiaConfirmedCasesWeeklyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"Get daily cases India given status type","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"","code":"GetIndiaDailyCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   status = \"Confirmed\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"url URL fetch data status One \"Confirmed\", \"Recovered\", \"Deceased\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily cases for India for a given status type — GetIndiaDailyCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily statewise data for India — GetIndiaDailyData","title":"Get daily statewise data for India — GetIndiaDailyData","text":"'Status' column one 'Confirmed', 'Deceased' 'Recovered'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily statewise data for India — GetIndiaDailyData","text":"","code":"GetIndiaDailyData(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily statewise data for India — GetIndiaDailyData","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily statewise data for India — GetIndiaDailyData","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"Get daily deceased cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"","code":"GetIndiaDeceasedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily deceased cases for India — GetIndiaDeceasedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data for India — GetIndiaHospitalization","title":"Get hospitalization data for India — GetIndiaHospitalization","text":"Get hospitalization data India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data for India — GetIndiaHospitalization","text":"","code":"GetIndiaHospitalization(url = \"\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of Indian name states — GetIndianStates","title":"Get a list of Indian name states — GetIndianStates","text":"Get list Indian name states","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of Indian name states — GetIndianStates","text":"","code":"GetIndianStates()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of Indian name states — GetIndianStates","text":"list state abbreviation key full name value","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"Get MonthYear (zoo) dataframe string formatted data column","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"","code":"GetMonthYear(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"datecol vector string formatted dates datefmt Format date (default Y-m-d)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MonthYear (zoo) from a dataframe string formatted data column — GetMonthYear","text":"vector dates converted MonthYear format (zoo::.yearmon)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants of concern — GetVOCs","title":"Get variants of concern — GetVOCs","text":"Get variants concern","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants of concern — GetVOCs","text":"","code":"GetVOCs()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants of concern — GetVOCs","text":"list variants concern pangolin lineage","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"Plot heatmap cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"","code":"PlotSequencedPropHeatmap(df)"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cases sequenced — PlotSequencedPropHeatmap","text":"heatmap total percentage cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","title":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","text":"Plot heatmap total cases/sequences","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","text":"","code":"PlotTotalHeatmap(df, color_legend = \"Total cases\")"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases (column named 'value')","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of total cases/sequences — PlotTotalHeatmap","text":"heatmap total cases/sequences","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"Read instrument metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"","code":"ReadAuspiceInstrument(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read instrument metadata from GISAID batch downloads — ReadAuspiceInstrument","text":"dataframe instrument related metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"Read metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"","code":"ReadAuspiceMetadata(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all metadata from GISAID batch downloads — ReadAuspiceMetadata","text":"dataframe collated metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata downloaded from GISAID — ReadGISAIDMetada","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"Read metadata downloaded GISAID","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"","code":"ReadGISAIDMetada(path, showProgress = FALSE, ...)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"path Path tar.xz metadata.txt downloaded GISAID showProgress Whether print progress bars fread ... parameters data.table::fread","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read metadata downloaded from GISAID — ReadGISAIDMetada","text":"data frame parsed metadata extra columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"function removes: 1. Commas space 2. Hyphen space 3. Multiple dots single space 4. Multiple spacies single space 5. NA \"UNKNOWN\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"","code":"SanitizeColumn(col)"},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"col String vector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize a vector to remove special characters and convert it to tile — SanitizeColumn","text":"string vector sanitized entries","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week — SummarizeVariantsDatewise","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"","code":"SummarizeVariantsDatewise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week — SummarizeVariantsDatewise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"Summarize total number variants per month","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"","code":"SummarizeVariantsMonthwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per month — SummarizeVariantsMonthwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"","code":"SummarizeVariantsWeekwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week — SummarizeVariantsWeekwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"Get total sequenced samples per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"","code":"TotalSequencesPerMonthCountrywise(variant_df, rename_country_as_state = TRUE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total sequenced samples per country — TotalSequencesPerMonthCountrywise","text":"dataframe sequencing statistics per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","title":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","text":"Get total number sequenced samples per month Country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","text":"","code":"TotalSequencesPerMonthStatewise(variant_df, drop_country = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of sequenced samples per month in a Country — TotalSequencesPerMonthStatewise","text":"dataframe sequencing statistics per state per country","code":""}]
