[{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"get-cases-data","dir":"Articles","previous_headings":"","what":"Get cases data","title":"Introduction to covmuller","text":"use covid19bharat.org get tally daily confirmed cases summarize monthly level.","code":"indian_state_cases <- GetIndiaConfirmedCasesMonthlyLong() india_cases <- indian_state_cases %>%   filter(State == \"India\") %>%   filter(value > 1) head(india_cases) #>   MonthYear State   value      type #> 1  Mar 2020 India    1635 Confirmed #> 2  Apr 2020 India   33232 Confirmed #> 3  May 2020 India  155781 Confirmed #> 4  Jun 2020 India  395044 Confirmed #> 5  Jul 2020 India 1111273 Confirmed #> 6  Aug 2020 India 1990350 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-cases-for-india","dir":"Articles","previous_headings":"Get cases data","what":"Plot cases for India","title":"Introduction to covmuller","text":"easy visualize monthly case counts bar plot:","code":"p1 <- BarPlot(india_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - India\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"read-variant-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Read variant data from GISAID","title":"Introduction to covmuller","text":"utilize GISAID data look prevalence variants. access data, GISAID requires registration.","code":"current_date <- \"2024_01_15\" fpath.tar <- paste0(\"~/data/epicov/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/data/epicov/metadata_tsv_\", current_date, \".qs\")  if (file.exists(fpath.qs)) {   gisaid_metadata <- qs::qread(file = fpath.qs) } else {   gisaid_metadata <- ReadGISAIDMetada(path = fpath.tar)   qs::qsave(gisaid_metadata, fpath.qs) }"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot total sequenced cases","title":"Introduction to covmuller","text":"can look absolute number cases sequenced country filtering information metadata made available GISAID (includes countries). , visualize total sequenced cases coming India:","code":"gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata) country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p2 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from India\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"overall-how-much-has-india-sequenced-over-months","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Overall, how much has India sequenced over months?","title":"Introduction to covmuller","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"# india_cases_long <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"India\") GetIndiaCases <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, India)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)    confirmed_subset_weekwise <- confirmed %>%     group_by(MonthYear) %>%     summarise(value = sum(cases, na.rm = T)) %>%     arrange(MonthYear) } india_cases_long <- GetIndiaCases() india_cases_long$State <- \"India\" india_cases_long$type <- \"Confirmed\"  india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = country_seq_stats,   confirmed_long = india_cases_long ) p3 <- BarPlot(india_sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from India\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") p3"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-proportion-of-cases-that-been-deposited-from-each-state","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot proportion of cases that been deposited from each state","title":"Introduction to covmuller","text":"can break proportion sequenced cases state level:","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india, drop_country = TRUE) seq_stats <- rbind(country_seq_stats, state_seq_stats) state_cases_long <- GetIndiaConfirmedCasesMonthlyLong() india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = seq_stats,   confirmed_long = state_cases_long,   month.min = \"Jan 2022\",   month.max = \"Feb 2023\",   max.percent = 5 )  india_sequencing_proportion$State <- factor(   x = india_sequencing_proportion$State,   levels = as.character(GetIndianStates()) ) p4 <- PlotSequencedPropHeatmap(india_sequencing_proportion) # p4"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-prevalence","dir":"Articles","previous_headings":"","what":"Plot Prevalence","title":"Introduction to covmuller","text":"Finally, look prevalence variants variants concern (VOCs):  animated version prevalence plot, check VariantAnimation.","code":"india_month_counts <- SummarizeVariantsMonthwise(gisaid_india) india_month_counts$State <- \"India\" india_month_prevalence <- CountsToPrevalence(india_month_counts) vocs <- GetVOCs() custom_voc_mapping <- list(   `B.1` = \"B.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) india_month_prevalence <- CollapseLineageToVOCs(   variant_df = india_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(india_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_germany, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_germany) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - Germany","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_germany_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_germany_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_germany_shared_dateweek <- SummarizeVariantsDatewise(gisaid_germany_collapsed_sel, by_state = TRUE) head(gisaid_germany_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Baden-Wurttemberg                19268 BA.5                  1 ## 2 Baden-Wurttemberg                19270 BA.5                  1 ## 3 Baden-Wurttemberg                19276 Others                1 ## 4 Baden-Wurttemberg                19278 BA.5                  2 ## 5 Baden-Wurttemberg                19279 BA.2.75               1 ## 6 Baden-Wurttemberg                19279 BA.4                  1 fit_germany_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_germany_shared_dateweek) ## # weights:  147 (120 variable) ## initial  value 84514.769594  ## iter  10 value 58871.333180 ## iter  20 value 55522.530928 ## iter  30 value 50503.510775 ## iter  40 value 47871.511519 ## iter  50 value 47299.292070 ## iter  60 value 46963.614174 ## iter  70 value 46668.970432 ## iter  80 value 46535.784282 ## iter  90 value 46498.287724 ## iter 100 value 46485.928726 ## iter 110 value 46484.524254 ## iter 120 value 46484.171431 ## iter 130 value 46484.026750 ## final  value 46483.999949  ## converged head(fit_germany_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State        prob ## 1              BA.2                19268 Baden-Wurttemberg 0.002395273 ## 2           BA.2.75                19268 Baden-Wurttemberg 0.001983825 ## 3              BA.4                19268 Baden-Wurttemberg 0.010924456 ## 4              BA.5                19268 Baden-Wurttemberg 0.561990359 ## 5             BQ.1+                19268 Baden-Wurttemberg 0.098423301 ## 6            Others                19268 Baden-Wurttemberg 0.324110466 ##            SE df     asymp.LCL   asymp.UCL DateCollected ## 1 0.001243669 NA -4.227349e-05 0.004832819    2022-10-03 ## 2 0.001397073 NA -7.543881e-04 0.004722038    2022-10-03 ## 3 0.006465575 NA -1.747839e-03 0.023596750    2022-10-03 ## 4 0.029268277 NA  5.046256e-01 0.619355127    2022-10-03 ## 5 0.010256478 NA  7.832097e-02 0.118525630    2022-10-03 ## 6 0.023882935 NA  2.773008e-01 0.370920159    2022-10-03"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Germany","text":"","code":"muller_germanybystate_mfit <- PlotMullerDailyPrevalence(fit_germany_multi_predsbystate, ncol = 3) muller_germanybystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Australia","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_australia, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Australia\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Australia","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_australia_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_australia,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_australia_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_australia_shared_dateweek <- SummarizeVariantsDatewise(gisaid_australia_collapsed_sel, by_state = TRUE) head(gisaid_australia_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State                        DateCollectedNumeric lineage_collapsed     n ##   <chr>                                       <dbl> <chr>             <int> ## 1 Australian Capital Territory                19266 BA.4                  1 ## 2 Australian Capital Territory                19266 BA.5                  1 ## 3 Australian Capital Territory                19268 BA.5                  3 ## 4 Australian Capital Territory                19269 BA.5                  5 ## 5 Australian Capital Territory                19269 Others                2 ## 6 Australian Capital Territory                19270 BA.5                  6 fit_australia_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_australia_shared_dateweek) ## # weights:  77 (60 variable) ## initial  value 81868.331791  ## iter  10 value 44070.203776 ## iter  20 value 41147.140310 ## iter  30 value 37628.202667 ## iter  40 value 35644.341491 ## iter  50 value 34806.030962 ## iter  60 value 34524.606747 ## iter  70 value 34495.422733 ## iter  80 value 34488.423228 ## iter  90 value 34487.026907 ## iter 100 value 34486.832770 ## iter 110 value 34486.808519 ## final  value 34486.800097  ## converged head(fit_australia_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric                        State ## 1              BA.2                19266 Australian Capital Territory ## 2           BA.2.75                19266 Australian Capital Territory ## 3              BA.4                19266 Australian Capital Territory ## 4              BA.5                19266 Australian Capital Territory ## 5             BQ.1+                19266 Australian Capital Territory ## 6            Others                19266 Australian Capital Territory ##         prob          SE df   asymp.LCL  asymp.UCL DateCollected ## 1 0.01287056 0.004330736 NA 0.004382473 0.02135865    2022-10-01 ## 2 0.02820800 0.007365799 NA 0.013771296 0.04264470    2022-10-01 ## 3 0.06585284 0.013198964 NA 0.039983347 0.09172233    2022-10-01 ## 4 0.67639409 0.020085207 NA 0.637027807 0.71576037    2022-10-01 ## 5 0.03872073 0.004079806 NA 0.030724455 0.04671700    2022-10-01 ## 6 0.17760819 0.012103338 NA 0.153886085 0.20133030    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Australia","text":"","code":"muller_australiabystate_mfit <- PlotMullerDailyPrevalence(fit_australia_multi_predsbystate, ncol = 3) muller_australiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Canada","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_canada, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Canada\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Canada","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_canada_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_canada,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed %>% filter(MonthYearCollected >= \"Oct 2022\")  vocs_to_keep <- table(gisaid_canada_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_canada_shared_dateweek <- SummarizeVariantsDatewise(gisaid_canada_collapsed_sel, by_state = TRUE) head(gisaid_canada_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alberta                19270 BA.5                  1 ## 2 Alberta                19287 BA.5                  1 ## 3 Alberta                19288 BA.5                  1 ## 4 Alberta                19288 BQ.1+                 1 ## 5 Alberta                19289 BA.5                  4 ## 6 Alberta                19289 BQ.1+                 1 fit_canada_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_canada_shared_dateweek) ## # weights:  78 (60 variable) ## initial  value 187840.895716  ## iter  10 value 110689.126358 ## iter  20 value 108427.020931 ## iter  30 value 97154.791951 ## iter  40 value 92547.846240 ## iter  50 value 90348.395369 ## iter  60 value 87691.764293 ## iter  70 value 86673.506577 ## iter  80 value 86654.378224 ## iter  90 value 86644.678472 ## iter 100 value 86643.817674 ## iter 110 value 86643.284694 ## iter 120 value 86642.851219 ## final  value 86642.812520  ## converged head(fit_canada_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1           BA.2.75                19267 Alberta 0.0831165146 2.476606e-02 NA ## 2              BA.4                19267 Alberta 0.0751094919 9.840250e-03 NA ## 3              BA.5                19267 Alberta 0.6992750081 2.212831e-02 NA ## 4             BQ.1+                19267 Alberta 0.0812395411 4.443272e-03 NA ## 5            Others                19267 Alberta 0.0608317700 3.659269e-03 NA ## 6               XBB                19267 Alberta 0.0004276743 3.649025e-05 NA ##      asymp.LCL    asymp.UCL DateCollected ## 1 0.0345759243 0.1316571050    2022-10-02 ## 2 0.0558229555 0.0943960282    2022-10-02 ## 3 0.6559043089 0.7426457072    2022-10-02 ## 4 0.0725308871 0.0899481950    2022-10-02 ## 5 0.0536597344 0.0680038056    2022-10-02 ## 6 0.0003561548 0.0004991939    2022-10-02"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Canada","text":"","code":"muller_canadabystate_mfit <- PlotMullerDailyPrevalence(fit_canada_multi_predsbystate, ncol = 3) muller_canadabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":null,"dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - India","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":null,"dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - India","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State == \"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Total sequences deposited\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":null,"dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - India","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed_sel <- gisaid_india_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") vocs_to_keep <- table(gisaid_india_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_india_collapsed_sel <- gisaid_india_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_india_shared_dateweek <- SummarizeVariantsDatewise(gisaid_india_collapsed_sel, by_state = TRUE) head(gisaid_india_shared_dateweek) ## [38;5;246m# A tibble: 6 Ã— 4[39m ##   State             DateCollectedNumeric lineage_collapsed     n ##   [3m[38;5;246m<chr>[39m[23m                            [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<chr>[39m[23m             [3m[38;5;246m<int>[39m[23m ## [38;5;250m1[39m Andhra Pradesh                   [4m1[24m[4m9[24m448 XBB                   1 ## [38;5;250m2[39m Andhra Pradesh                   [4m1[24m[4m9[24m506 XBB                   1 ## [38;5;250m3[39m Arunachal Pradesh                [4m1[24m[4m9[24m361 XBB                   1 ## [38;5;250m4[39m Arunachal Pradesh                [4m1[24m[4m9[24m459 XBB                   1 ## [38;5;250m5[39m Arunachal Pradesh                [4m1[24m[4m9[24m556 XBB                   1 ## [38;5;250m6[39m Arunachal Pradesh                [4m1[24m[4m9[24m611 Others                1 fit_india_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_india_shared_dateweek) ## # weights:  204 (165 variable) ## initial  value 32936.122563  ## iter  10 value 11412.728941 ## iter  20 value 10497.898156 ## iter  30 value 10060.762985 ## iter  40 value 9915.848503 ## iter  50 value 9795.429255 ## iter  60 value 9722.564462 ## iter  70 value 9691.424610 ## iter  80 value 9677.049745 ## iter  90 value 9675.962483 ## iter 100 value 9675.837818 ## iter 110 value 9675.761679 ## final  value 9675.760375  ## converged head(fit_india_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric          State         prob ## 1              BA.2                19266 Andhra Pradesh 7.813500e-05 ## 2           BA.2.75                19266 Andhra Pradesh 4.233569e-05 ## 3            BA.2.X                19266 Andhra Pradesh 4.508509e-08 ## 4             BQ.1+                19266 Andhra Pradesh 1.724266e-08 ## 5            Others                19266 Andhra Pradesh 1.775514e-03 ## 6               XBB                19266 Andhra Pradesh 9.981040e-01 ##             SE df     asymp.LCL    asymp.UCL DateCollected ## 1 7.635012e-05 NA -7.150849e-05 2.277785e-04    2022-10-01 ## 2 1.180819e-04 NA -1.891006e-04 2.737720e-04    2022-10-01 ## 3 2.883637e-08 NA -1.143316e-08 1.016033e-07    2022-10-01 ## 4 1.160411e-08 NA -5.500971e-09 3.998630e-08    2022-10-01 ## 5 1.676378e-03 NA -1.510127e-03 5.061154e-03    2022-10-01 ## 6 1.737326e-03 NA  9.946989e-01 1.001509e+00    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":null,"dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - India","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_southafrica, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_southafrica) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - South Africa","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_southafrica_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_southafrica_shared_dateweek <- SummarizeVariantsDatewise(gisaid_southafrica_collapsed_sel, by_state = TRUE) head(gisaid_southafrica_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State        DateCollectedNumeric lineage_collapsed     n ##   <chr>                       <dbl> <chr>             <int> ## 1 Eastern Cape                19340 BQ.1+                 1 ## 2 Eastern Cape                19366 BA.5                  1 ## 3 Eastern Cape                19366 BQ.1+                 1 ## 4 Eastern Cape                19367 BA.5                  2 ## 5 Eastern Cape                19367 BQ.1+                 1 ## 6 Eastern Cape                19367 Others                1 fit_southafrica_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_southafrica_shared_dateweek) ## # weights:  48 (33 variable) ## initial  value 6332.592642  ## iter  10 value 4506.511198 ## iter  20 value 3774.308144 ## iter  30 value 3687.379840 ## iter  40 value 3674.078156 ## final  value 3673.923064  ## converged head(fit_southafrica_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric        State         prob           SE ## 1              BA.5                19269 Eastern Cape 0.7749025935 6.623080e-02 ## 2             BQ.1+                19269 Eastern Cape 0.0033670249 1.433762e-03 ## 3            Others                19269 Eastern Cape 0.2215801968 6.561908e-02 ## 4               XBB                19269 Eastern Cape 0.0001501848 7.306782e-05 ## 5              BA.5                19276 Eastern Cape 0.7560557338 6.532893e-02 ## 6             BQ.1+                19276 Eastern Cape 0.0054931242 2.150660e-03 ##   df    asymp.LCL    asymp.UCL DateCollected ## 1 NA 6.450926e-01 0.9047125748    2022-10-04 ## 2 NA 5.569034e-04 0.0061771465    2022-10-04 ## 3 NA 9.296916e-02 0.3501912359    2022-10-04 ## 4 NA 6.974489e-06 0.0002933951    2022-10-04 ## 5 NA 6.280134e-01 0.8840980854    2022-10-11 ## 6 NA 1.277908e-03 0.0097083406    2022-10-11"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - South Africa","text":"","code":"muller_southafricabystate_mfit <- PlotMullerDailyPrevalence(fit_southafrica_multi_predsbystate, ncol = 3) muller_southafricabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - United Kingdom","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_uk, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"United Kingdom\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - United Kingdom","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_uk_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_uk_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_uk_shared_dateweek <- SummarizeVariantsDatewise(gisaid_uk_collapsed_sel, by_state = TRUE) head(gisaid_uk_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 England                19266 BA.2.75               1 ## 2 England                19266 BA.5                  1 ## 3 England                19266 Others                2 ## 4 England                19267 BA.4                  2 ## 5 England                19267 BA.5                  3 ## 6 England                19267 Others                3 fit_uk_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_uk_shared_dateweek) ## # weights:  42 (30 variable) ## initial  value 212260.785522  ## iter  10 value 132682.285811 ## iter  20 value 124684.559590 ## iter  30 value 114429.990736 ## iter  40 value 111295.757402 ## iter  50 value 110969.952275 ## iter  60 value 110927.717094 ## iter  70 value 110926.524749 ## iter  80 value 110926.239561 ## iter  90 value 110924.251868 ## iter 100 value 110922.200728 ## final  value 110922.032284  ## converged head(fit_uk_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1           BA.2.75                19266 England 0.0327501455 8.594579e-03 NA ## 2              BA.4                19266 England 0.0497328609 9.222749e-03 NA ## 3              BA.5                19266 England 0.6155197047 1.628229e-02 NA ## 4             BQ.1+                19266 England 0.1886427943 9.305751e-03 NA ## 5            Others                19266 England 0.1124983741 5.583855e-03 NA ## 6               XBB                19266 England 0.0008561205 5.794389e-05 NA ##      asymp.LCL    asymp.UCL DateCollected ## 1 0.0159050796 0.0495952114    2022-10-01 ## 2 0.0316566054 0.0678091164    2022-10-01 ## 3 0.5836070074 0.6474324020    2022-10-01 ## 4 0.1704038582 0.2068817303    2022-10-01 ## 5 0.1015542204 0.1234425279    2022-10-01 ## 6 0.0007425525 0.0009696884    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - United Kingdom","text":"","code":"muller_ukbystate_mfit <- PlotMullerDailyPrevalence(fit_uk_multi_predsbystate, ncol = 3) muller_ukbystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Bengaluru_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [3] ##   MonthYear State     District        value ##   <yearmon> <chr>     <chr>           <dbl> ## 1 Apr 2020  Karnataka Bengaluru Rural     6 ## 2 Apr 2020  Karnataka Bengaluru Urban   141 ## 3 May 2020  Karnataka Bengaluru Rural     9 ## 4 May 2020  Karnataka Bengaluru Urban   218 ## 5 Jun 2020  Karnataka Bengaluru Rural   114 ## 6 Jun 2020  Karnataka Bengaluru Urban  4196"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"plot-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"Get monthly cases for Bengaluru","what":"Plot monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"p1 <- BarPlot(Bengaluru_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Bengaluru (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-weekly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get weekly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Bengaluru\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Bengaluru_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"overall-how-much-has-bengaluru-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Bengaluru","what":"Overall, how much has Bengaluru sequenced over months?","title":"Animation of projected weekly cases - Bengaluru (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases %>% select(MonthYear, value) Bengaluru_monthly_cases_tmp$State <- \"India\" Bengaluru_monthly_cases_tmp$type <- \"Confirmed\"  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>%   group_by(MonthYear, State, type) %>%   summarise(value = sum(value))  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Bengaluru_seq_stats,   confirmed_long = Bengaluru_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Bengaluru (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Bengaluru\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 27280.854519  ## iter  10 value 12654.212777 ## iter  20 value 6673.400386 ## iter  30 value 5900.795573 ## iter  40 value 5579.611334 ## iter  50 value 5437.754669 ## iter  60 value 5289.623501 ## iter  70 value 5089.205002 ## iter  80 value 4828.414224 ## iter  90 value 4722.853944 ## iter 100 value 4716.025496 ## iter 110 value 4708.762722 ## iter 120 value 4703.187810 ## iter 130 value 4702.317236 ## iter 140 value 4700.036796 ## iter 150 value 4698.415786 ## iter 160 value 4691.593834 ## iter 170 value 4666.532005 ## iter 180 value 4647.199789 ## iter 190 value 4645.953016 ## iter 200 value 4644.413888 ## iter 210 value 4640.909007 ## iter 220 value 4639.913660 ## iter 230 value 4639.756334 ## iter 240 value 4639.163422 ## iter 250 value 4637.084115 ## iter 260 value 4636.784964 ## iter 270 value 4635.808570 ## iter 280 value 4634.779618 ## iter 290 value 4634.438043 ## iter 300 value 4634.244641 ## final  value 4632.480217  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 13260.587551  ## iter  10 value 4244.312127 ## iter  20 value 3571.482803 ## iter  30 value 3494.250103 ## iter  40 value 3457.604725 ## iter  50 value 3444.861697 ## iter  60 value 3440.569061 ## iter  70 value 3439.411840 ## iter  80 value 3438.525153 ## iter  90 value 3438.196092 ## iter 100 value 3437.826340 ## iter 110 value 3437.265419 ## iter 120 value 3437.234425 ## iter 130 value 3437.191321 ## iter 140 value 3437.012394 ## iter 150 value 3436.953845 ## iter 160 value 3436.881184 ## iter 170 value 3436.695579 ## iter 180 value 3436.659370 ## iter 190 value 3436.612976 ## iter 200 value 3436.592489 ## iter 210 value 3436.564673 ## iter 220 value 3436.539005 ## final  value 3436.537103  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 13260.587551  ## iter  10 value 4244.312127 ## iter  20 value 3571.482803 ## iter  30 value 3494.250103 ## iter  40 value 3457.604725 ## iter  50 value 3444.861697 ## iter  60 value 3440.569061 ## iter  70 value 3439.411840 ## iter  80 value 3438.525153 ## iter  90 value 3438.196092 ## iter 100 value 3437.826340 ## iter 110 value 3437.265419 ## iter 120 value 3437.234425 ## iter 130 value 3437.191321 ## iter 140 value 3437.012394 ## iter 150 value 3436.953845 ## iter 160 value 3436.881184 ## iter 170 value 3436.695579 ## iter 180 value 3436.659370 ## iter 190 value 3436.612976 ## iter 200 value 3436.592489 ## iter 210 value 3436.564673 ## iter 220 value 3436.539005 ## final  value 3436.537103  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Brazil.html","id":"get-variants-data-for-brazil","dir":"Articles","previous_headings":"","what":"Get variants data for Brazil","title":"Animation of projected weekly cases - Brazil","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_15.qs\") gisaid_brazil <- gisaid_metadata %>%   filter(Country == \"Brazil\") %>%   filter(Host == \"Human\") # format metadata gisaid_brazil <- FormatGISAIDMetadata(gisaid_brazil) gisaid_brazil <- gisaid_brazil %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `B.1` = \"B.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_brazil <- gisaid_brazil %>% filter(pangolin_lineage != \"None\")  gisaid_brazil <- CollapseLineageToVOCs(   variant_df = gisaid_brazil,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Brazil.html","id":"get-weekly-cases-for-brazil","dir":"Articles","previous_headings":"","what":"Get weekly cases for Brazil","title":"Animation of projected weekly cases - Brazil","text":"","code":"GetCases <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, Brazil)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   return(confirmed) }   GetCasesLong <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, Brazil)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   confirmed_subset_weekwise <- confirmed %>%     group_by(WeekYear) %>%     summarise(cases = mean(cases, na.rm = T)) %>%     arrange(WeekYear)   confirmed_subset_weekwise$cases <- ceiling(confirmed_subset_weekwise$cases)   confirmed_subset_dateweekwise_long_india <- confirmed_subset_weekwise %>%     rename(n = cases) %>%     rename(WeekYearCollected = WeekYear) }   confirmed <- GetCases() confirmed_subset_dateweekwise_long <- GetCasesLong() gisaid_brazil_weekwise <- SummarizeVariantsWeekwise(gisaid_brazil)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Brazil.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Brazil","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_brazil) state_month_counts$State <- \"Brazil\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs()  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Brazil.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Brazil","text":"Look cases 2022, Look cases 2023  Look cases past weeks","code":"voc_to_keep <- gisaid_brazil_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_brazil_weekwise <- gisaid_brazil_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  brazil_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_brazil_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  32 (21 variable) #> initial  value 510939.581206  #> iter  10 value 234159.329175 #> iter  20 value 167421.025151 #> iter  30 value 121849.180681 #> iter  40 value 96580.609866 #> iter  50 value 89540.064306 #> iter  60 value 88172.441881 #> iter  70 value 87801.377783 #> iter  80 value 87781.965288 #> final  value 87781.645553  #> converged the_anim <- PlotVariantPrevalenceAnimated(brazil_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Brazil by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Brazil_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2021 W35\"))  gisaid_brazil_subset <- gisaid_brazil %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_brazil_weekwise <- SummarizeVariantsWeekwise(gisaid_brazil_subset)  voc_to_keep <- gisaid_brazil_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_brazil_weekwise <- gisaid_brazil_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  brazil_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_brazil_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  24 (15 variable) #> initial  value 243039.629685  #> iter  10 value 64029.751788 #> iter  20 value 42155.920995 #> iter  30 value 38584.201193 #> iter  40 value 38387.046268 #> iter  50 value 38158.853795 #> iter  60 value 38157.711830 #> iter  70 value 38156.432271 #> iter  80 value 38156.266483 #> iter  90 value 38152.405882 #> iter 100 value 38133.319249 #> final  value 38131.586705  #> converged the_anim <- PlotVariantPrevalenceAnimated(brazil_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Brazil by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Brazil_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2022 W35\"))  gisaid_brazil_subset <- gisaid_brazil %>% filter(MonthYearCollected > \"October 2022\") gisaid_brazil_weekwise <- SummarizeVariantsWeekwise(gisaid_brazil_subset)  voc_to_keep <- gisaid_brazil_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_brazil_weekwise <- gisaid_brazil_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  brazil_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_brazil_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  16 (9 variable) #> initial  value 43133.162752  #> iter  10 value 20374.824379 #> iter  20 value 19477.305821 #> iter  30 value 19453.755576 #> iter  40 value 19439.210892 #> iter  50 value 19438.897712 #> iter  60 value 19433.997843 #> iter  70 value 19430.415310 #> iter  80 value 19428.740063 #> iter  90 value 19427.732245 #> iter 100 value 19425.797350 #> iter 110 value 19424.562085 #> iter 120 value 19422.493999 #> final  value 19421.847047  #> converged the_anim <- PlotVariantPrevalenceAnimated(brazil_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Brazil by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/Brazil_animated_2023.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2023 W23\"))  gisaid_brazil_subset <- gisaid_brazil %>% filter(MonthYearCollected > \"June 2023\") gisaid_brazil_weekwise <- SummarizeVariantsWeekwise(gisaid_brazil_subset)  voc_to_keep <- gisaid_brazil_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_brazil_weekwise <- gisaid_brazil_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  brazil_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_brazil_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  16 (9 variable) #> initial  value 7940.694100  #> iter  10 value 3104.607446 #> iter  20 value 2997.139077 #> iter  30 value 2993.731269 #> iter  40 value 2956.304024 #> iter  50 value 2952.890843 #> iter  60 value 2950.735702 #> iter  70 value 2950.052341 #> iter  80 value 2949.972461 #> iter  90 value 2949.948498 #> iter 100 value 2949.919800 #> iter 110 value 2949.905345 #> iter 120 value 2949.876499 #> iter 130 value 2949.856253 #> iter 140 value 2949.842265 #> final  value 2949.839140  #> converged the_anim <- PlotVariantPrevalenceAnimated(brazil_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Brazil by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/Brazil_animated_2024.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"] gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- \"Unknown\"   gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"state-of-origin-of-ba4ba-5-sequences","dir":"Articles","previous_headings":"","what":"State of origin of BA/4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>%   filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>%   pull(State) %>%   table() %>%   as.data.frame() %>%   arrange(desc(Freq)) %>%   DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"city-of-origin-of-ba-4ba-5-sequences","dir":"Articles","previous_headings":"","what":"City of origin of BA.4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>%   filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>%   pull(custom_city) %>%   table() %>%   as.data.frame() %>%   arrange(desc(Freq)) %>%   DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-monthly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Chennai\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State      District value ##   <yearmon> <chr>      <chr>    <dbl> ## 1 Apr 2020  Tamil Nadu Chennai    910 ## 2 May 2020  Tamil Nadu Chennai  13889 ## 3 Jun 2020  Tamil Nadu Chennai  43528 ## 4 Jul 2020  Tamil Nadu Chennai  41467 ## 5 Aug 2020  Tamil Nadu Chennai  35803 ## 6 Sep 2020  Tamil Nadu Chennai  31779"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"plot-monthly-cases-for-chennai","dir":"Articles","previous_headings":"Get monthly cases for Chennai","what":"Plot monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Chennai (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-weekly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Chennai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"overall-how-much-has-chennai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Chennai","what":"Overall, how much has Chennai sequenced over months?","title":"Animation of projected weekly cases - Chennai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"Chennai\")) state_month_counts$State <- \"Chennai\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Chennai (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Chennai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  48 (33 variable) ## initial  value 15605.213761  ## iter  10 value 9346.725587 ## iter  20 value 6735.265161 ## iter  30 value 6252.767740 ## iter  40 value 5962.591363 ## iter  50 value 5839.616667 ## iter  60 value 5688.700478 ## iter  70 value 5646.847872 ## iter  80 value 5644.264029 ## iter  90 value 5635.112092 ## iter 100 value 5632.626406 ## iter 110 value 5611.731368 ## iter 120 value 5608.160319 ## iter 130 value 5602.430986 ## iter 140 value 5602.085418 ## iter 150 value 5601.992062 ## iter 160 value 5601.547330 ## iter 170 value 5599.095961 ## iter 180 value 5597.310934 ## iter 190 value 5596.025887 ## iter 200 value 5586.144855 ## iter 210 value 5582.730045 ## iter 220 value 5582.206277 ## iter 230 value 5581.641031 ## iter 240 value 5580.844556 ## iter 250 value 5578.550303 ## iter 260 value 5577.858001 ## iter 270 value 5577.656828 ## iter 280 value 5577.632627 ## iter 290 value 5577.545751 ## iter 300 value 5577.491586 ## iter 310 value 5577.422956 ## iter 320 value 5576.188103 ## iter 330 value 5571.337207 ## final  value 5569.995071  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Chennai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 9646.732682  ## iter  10 value 4436.449277 ## iter  20 value 3750.586782 ## iter  30 value 3524.118672 ## iter  40 value 3477.534654 ## iter  50 value 3461.347353 ## iter  60 value 3457.749224 ## iter  70 value 3455.803570 ## iter  80 value 3455.186713 ## iter  90 value 3453.396263 ## iter 100 value 3451.684841 ## iter 110 value 3448.796346 ## iter 120 value 3448.681536 ## iter 130 value 3448.621780 ## iter 140 value 3448.598491 ## iter 150 value 3448.517228 ## iter 160 value 3448.295038 ## iter 170 value 3448.240697 ## iter 180 value 3448.196202 ## iter 190 value 3448.104299 ## iter 200 value 3448.042618 ## iter 210 value 3448.020950 ## iter 220 value 3447.924799 ## iter 230 value 3447.797141 ## iter 240 value 3447.738687 ## iter 250 value 3447.697683 ## iter 260 value 3447.677071 ## iter 270 value 3447.658190 ## iter 280 value 3447.631436 ## iter 290 value 3447.563336 ## iter 300 value 3447.544602 ## final  value 3447.504293  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Chennai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 9646.732682  ## iter  10 value 4436.449277 ## iter  20 value 3750.586782 ## iter  30 value 3524.118672 ## iter  40 value 3477.534654 ## iter  50 value 3461.347353 ## iter  60 value 3457.749224 ## iter  70 value 3455.803570 ## iter  80 value 3455.186713 ## iter  90 value 3453.396263 ## iter 100 value 3451.684841 ## iter 110 value 3448.796346 ## iter 120 value 3448.681536 ## iter 130 value 3448.621780 ## iter 140 value 3448.598491 ## iter 150 value 3448.517228 ## iter 160 value 3448.295038 ## iter 170 value 3448.240697 ## iter 180 value 3448.196202 ## iter 190 value 3448.104299 ## iter 200 value 3448.042618 ## iter 210 value 3448.020950 ## iter 220 value 3447.924799 ## iter 230 value 3447.797141 ## iter 240 value 3447.738687 ## iter 250 value 3447.697683 ## iter 260 value 3447.677071 ## iter 270 value 3447.658190 ## iter 280 value 3447.631436 ## iter 290 value 3447.563336 ## iter 300 value 3447.544602 ## final  value 3447.504293  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-monthly-cases-for-delhi","dir":"Articles","previous_headings":"","what":"Get monthly cases for Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Delhi\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(NewDelhi_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State District  value ##   <yearmon> <chr> <chr>     <dbl> ## 1 Apr 2020  Delhi Delhi      3515 ## 2 May 2020  Delhi Delhi     16329 ## 3 Jun 2020  Delhi Delhi     67516 ## 4 Jul 2020  Delhi Delhi     48238 ## 5 Aug 2020  Delhi Delhi     39150 ## 6 Sep 2020  Delhi Delhi    104967"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"plot-monthly-cases-for-new-delhi","dir":"Articles","previous_headings":"Get monthly cases for Delhi","what":"Plot monthly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"p1 <- BarPlot(NewDelhi_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - New Delhi (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-weekly-cases-for-new-delhi","dir":"Articles","previous_headings":"","what":"Get weekly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"New Delhi\"), rename_country_as_state = TRUE)   p2 <- BarPlot(NewDelhi_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"overall-how-much-has-new-delhi-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for New Delhi","what":"Overall, how much has New Delhi sequenced over months?","title":"Animation of projected weekly cases - New Delhi (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases %>% select(MonthYear, value) NewDelhi_monthly_cases_cases_tmp$State <- \"India\" NewDelhi_monthly_cases_cases_tmp$type <- \"Confirmed\"  NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = NewDelhi_seq_stats,   confirmed_long = NewDelhi_monthly_cases_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"New Delhi\")) state_month_counts$State <- \"New Delhi\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New Delhi (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"New Delhi\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Delhi\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 4302.364550  ## iter  10 value 1572.411772 ## iter  20 value 1123.483648 ## iter  30 value 1016.583002 ## iter  40 value 997.937340 ## iter  50 value 984.531287 ## iter  60 value 942.126087 ## iter  70 value 936.966776 ## iter  80 value 921.123735 ## iter  90 value 918.589362 ## iter 100 value 917.222805 ## iter 110 value 909.578605 ## iter 120 value 904.884701 ## iter 130 value 884.008789 ## iter 140 value 881.890180 ## iter 150 value 881.523712 ## iter 160 value 881.336429 ## iter 170 value 877.763992 ## iter 180 value 877.432142 ## iter 190 value 877.150836 ## iter 200 value 876.799542 ## iter 210 value 876.346739 ## iter 220 value 876.299027 ## iter 230 value 876.256709 ## iter 240 value 876.049911 ## iter 250 value 875.612340 ## iter 260 value 874.869984 ## iter 270 value 874.552435 ## iter 280 value 874.227920 ## iter 290 value 873.978667 ## iter 300 value 873.901212 ## iter 310 value 873.879910 ## iter 320 value 873.859179 ## iter 330 value 873.711357 ## iter 340 value 873.060577 ## iter 350 value 872.863673 ## iter 360 value 872.577441 ## iter 370 value 872.384707 ## iter 380 value 872.127411 ## iter 390 value 871.977778 ## iter 400 value 871.876208 ## iter 410 value 871.847102 ## iter 420 value 871.508436 ## iter 430 value 871.060681 ## final  value 871.057527  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Delhi\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 987.259468  ## iter  10 value 209.938281 ## iter  20 value 191.017827 ## iter  30 value 189.292215 ## iter  40 value 188.434340 ## iter  50 value 187.750904 ## iter  60 value 187.394283 ## iter  70 value 187.164293 ## iter  80 value 187.015105 ## iter  90 value 186.962660 ## iter 100 value 186.868844 ## iter 110 value 186.823994 ## iter 120 value 186.791548 ## iter 130 value 186.759796 ## iter 140 value 186.719025 ## iter 150 value 186.694064 ## iter 160 value 186.685413 ## iter 170 value 186.677086 ## iter 180 value 186.655211 ## iter 190 value 186.632648 ## iter 200 value 186.619366 ## iter 210 value 186.607642 ## iter 220 value 186.588133 ## iter 230 value 186.576262 ## iter 240 value 186.566091 ## iter 250 value 186.539792 ## iter 260 value 186.514579 ## iter 270 value 186.512583 ## iter 280 value 186.498376 ## final  value 186.498347  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2021.gif\"), animation = the_anim) gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 987.259468  ## iter  10 value 209.938281 ## iter  20 value 191.017827 ## iter  30 value 189.292215 ## iter  40 value 188.434340 ## iter  50 value 187.750904 ## iter  60 value 187.394283 ## iter  70 value 187.164293 ## iter  80 value 187.015105 ## iter  90 value 186.962660 ## iter 100 value 186.868844 ## iter 110 value 186.823994 ## iter 120 value 186.791548 ## iter 130 value 186.759796 ## iter 140 value 186.719025 ## iter 150 value 186.694064 ## iter 160 value 186.685413 ## iter 170 value 186.677086 ## iter 180 value 186.655211 ## iter 190 value 186.632648 ## iter 200 value 186.619366 ## iter 210 value 186.607642 ## iter 220 value 186.588133 ## iter 230 value 186.576262 ## iter 240 value 186.566091 ## iter 250 value 186.539792 ## iter 260 value 186.514579 ## iter 270 value 186.512583 ## iter 280 value 186.498376 ## final  value 186.498347  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-variants-data-for-germany","dir":"Articles","previous_headings":"","what":"Get variants data for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_15.qs\") gisaid_germany <- gisaid_metadata %>%   filter(Country == \"Germany\") %>%   filter(Host == \"Human\") # format metadata gisaid_germany <- FormatGISAIDMetadata(gisaid_germany) gisaid_germany <- gisaid_germany %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `B.1` = \"B.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_germany <- gisaid_germany %>% filter(pangolin_lineage != \"None\")  gisaid_germany <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-weekly-cases-for-germany","dir":"Articles","previous_headings":"","what":"Get weekly cases for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"GetCases <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, Germany)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   return(confirmed) }   GetCasesLong <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, Germany)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   confirmed_subset_weekwise <- confirmed %>%     group_by(WeekYear) %>%     summarise(cases = mean(cases, na.rm = T)) %>%     arrange(WeekYear)   confirmed_subset_weekwise$cases <- ceiling(confirmed_subset_weekwise$cases)   confirmed_subset_dateweekwise_long_india <- confirmed_subset_weekwise %>%     rename(n = cases) %>%     rename(WeekYearCollected = WeekYear) }   confirmed <- GetCases() confirmed_subset_dateweekwise_long <- GetCasesLong() gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Germany","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_germany) state_month_counts$State <- \"Germany\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs()  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Germany","text":"Look cases 2022, Look cases 2023  Look cases past weeks","code":"voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  germany_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  36 (24 variable) #> initial  value 2074911.676790  #> iter  10 value 1088320.395389 #> iter  20 value 874256.284912 #> iter  30 value 477569.250036 #> iter  40 value 397550.188554 #> iter  50 value 382535.709607 #> iter  60 value 381630.198246 #> iter  70 value 379518.411136 #> iter  80 value 379404.394777 #> iter  90 value 379403.800161 #> iter  90 value 379403.798856 #> iter  90 value 379403.798853 #> final  value 379403.798853  #> converged the_anim <- PlotVariantPrevalenceAnimated(germany_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2021 W35\"))  gisaid_germany_subset <- gisaid_germany %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany_subset)  voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  germany_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  28 (18 variable) #> initial  value 1325546.209896  #> iter  10 value 342058.089318 #> iter  20 value 247916.028806 #> iter  30 value 219144.301808 #> iter  40 value 218163.353929 #> iter  50 value 217961.762091 #> iter  60 value 217834.835855 #> iter  70 value 217826.166464 #> final  value 217818.537726  #> converged the_anim <- PlotVariantPrevalenceAnimated(germany_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2022 W35\"))  gisaid_germany_subset <- gisaid_germany %>% filter(MonthYearCollected > \"October 2022\") gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany_subset)  voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  germany_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  24 (15 variable) #> initial  value 156227.091641  #> iter  10 value 57052.629928 #> iter  20 value 52289.222426 #> iter  30 value 52120.942062 #> iter  40 value 52115.339136 #> iter  50 value 52102.754760 #> iter  60 value 52093.447634 #> iter  70 value 52092.004904 #> iter  80 value 52091.636188 #> final  value 52090.973071  #> converged the_anim <- PlotVariantPrevalenceAnimated(germany_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated_2023.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2023 W23\"))  gisaid_germany_subset <- gisaid_germany %>% filter(MonthYearCollected > \"June 2023\") gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany_subset)  voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  germany_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  16 (9 variable) #> initial  value 7594.120510  #> iter  10 value 5310.112645 #> iter  20 value 5256.688284 #> iter  30 value 5256.464226 #> final  value 5256.374493  #> converged the_anim <- PlotVariantPrevalenceAnimated(germany_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated_2024.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-monthly-cases-for-gujarat","dir":"Articles","previous_headings":"","what":"Get monthly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"Gujarat_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Gujarat\") ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Gujarat_monthly_cases) ##   MonthYear   State value      type ## 1  Mar 2020 Gujarat    74 Confirmed ## 2  Apr 2020 Gujarat  4321 Confirmed ## 3  May 2020 Gujarat 12399 Confirmed ## 4  Jun 2020 Gujarat 15849 Confirmed ## 5  Jul 2020 Gujarat 28795 Confirmed ## 6  Aug 2020 Gujarat 34997 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"plot-monthly-cases-for-gujarat","dir":"Articles","previous_headings":"Get monthly cases for Gujarat","what":"Plot monthly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"p1 <- BarPlot(Gujarat_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Gujarat (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-weekly-cases-for-gujarat","dir":"Articles","previous_headings":"","what":"Get weekly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"Gujarat_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Gujarat\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Gujarat_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Gujarat (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"overall-how-much-has-gujarat-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Gujarat","what":"Overall, how much has Gujarat sequenced over months?","title":"Animation of projected weekly cases - Gujarat (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Gujarat_monthly_cases_tmp <- Gujarat_monthly_cases %>% select(MonthYear, value) Gujarat_monthly_cases_tmp$State <- \"India\" Gujarat_monthly_cases_tmp$type <- \"Confirmed\"  Gujarat_monthly_cases_tmp <- Gujarat_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Gujarat_seq_stats,   confirmed_long = Gujarat_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Gujarat (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Gujarat\")) state_month_counts$State <- \"Gujarat\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Gujarat (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Gujarat\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Gujarat\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 38764.079639  ## iter  10 value 17744.693245 ## iter  20 value 15353.290900 ## iter  30 value 11804.024603 ## iter  40 value 11003.283524 ## iter  50 value 9855.261192 ## iter  60 value 9537.385392 ## iter  70 value 9478.499569 ## iter  80 value 9461.186853 ## iter  90 value 9456.051637 ## iter 100 value 9431.217254 ## iter 110 value 9407.310468 ## iter 120 value 9377.377643 ## iter 130 value 9344.599124 ## iter 140 value 9330.446441 ## iter 150 value 9322.375629 ## iter 160 value 9321.930201 ## iter 170 value 9317.108359 ## iter 180 value 9312.966862 ## iter 190 value 9309.077117 ## iter 200 value 9301.992421 ## iter 210 value 9286.413430 ## iter 220 value 9269.038826 ## iter 230 value 9268.396739 ## iter 240 value 9265.527420 ## iter 250 value 9262.656451 ## iter 260 value 9261.791977 ## iter 270 value 9260.319589 ## iter 280 value 9259.472335 ## iter 290 value 9258.206341 ## iter 300 value 9257.205463 ## iter 310 value 9257.153682 ## iter 320 value 9256.630873 ## iter 330 value 9255.452898 ## iter 340 value 9254.743776 ## iter 350 value 9253.155977 ## iter 360 value 9251.176747 ## iter 370 value 9250.928093 ## iter 380 value 9250.915270 ## iter 390 value 9250.734815 ## iter 400 value 9250.429761 ## iter 410 value 9250.151556 ## iter 420 value 9249.753608 ## iter 430 value 9249.158697 ## iter 440 value 9248.140073 ## iter 450 value 9248.120433 ## iter 460 value 9247.903035 ## iter 470 value 9247.734087 ## iter 480 value 9247.487534 ## iter 490 value 9247.092301 ## iter 500 value 9246.875676 ## iter 510 value 9246.698038 ## final  value 9246.641456  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Gujarat\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Gujarat\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 21402.528439  ## iter  10 value 10912.220209 ## iter  20 value 8286.883657 ## iter  30 value 6854.495448 ## iter  40 value 6689.035906 ## iter  50 value 6650.708185 ## iter  60 value 6608.192890 ## iter  70 value 6586.968376 ## iter  80 value 6547.505054 ## iter  90 value 6528.787140 ## iter 100 value 6527.524930 ## iter 110 value 6527.321975 ## final  value 6527.321571  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Gujarat\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Gujarat\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 21402.528439  ## iter  10 value 10912.220209 ## iter  20 value 8286.883657 ## iter  30 value 6854.495448 ## iter  40 value 6689.035906 ## iter  50 value 6650.708185 ## iter  60 value 6608.192890 ## iter  70 value 6586.968376 ## iter  80 value 6547.505054 ## iter  90 value 6528.787140 ## iter 100 value 6527.524930 ## iter 110 value 6527.321975 ## final  value 6527.321571  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - India","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_15.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() custom_voc_mapping <- list(   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - India","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india) state_month_counts$State <- \"India\" state_month_prevalence <- CountsToPrevalence(state_month_counts) state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases - India","text":"","code":"GetIndiaCases <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, India)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   confirmed_subset_weekwise <- confirmed %>%     group_by(WeekYear) %>%     summarise(cases = mean(cases, na.rm = T)) %>%     arrange(WeekYear)   confirmed_subset_weekwise$cases <- ceiling(confirmed_subset_weekwise$cases)   confirmed_subset_dateweekwise_long_india <- confirmed_subset_weekwise %>%     rename(n = cases) %>%     rename(WeekYearCollected = WeekYear) }   confirmed_subset_dateweekwise_long_india <- GetIndiaCases() gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - India","text":"Look cases January, 2022 :  Look cases last months:  Look cases last months:","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) #> # weights:  24 (15 variable) #> initial  value 478758.130178  #> iter  10 value 191049.975401 #> iter  20 value 132367.082779 #> iter  30 value 108807.370884 #> iter  40 value 106371.479362 #> iter  50 value 104473.977635 #> iter  60 value 104409.358340 #> final  value 104409.203141  #> converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**\", date_breaks = \"28 days\") # , trans_y=\"log10\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long_india <- GetIndiaCases() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2021 W35\"))  gisaid_india <- gisaid_india %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long_india) #> # weights:  16 (9 variable) #> initial  value 172425.906342  #> iter  10 value 32476.957103 #> iter  20 value 31892.643209 #> iter  30 value 31879.523335 #> iter  40 value 31878.591222 #> final  value 31878.585111  #> converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") # , trans_y=\"log10\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long_india <- GetIndiaCases() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2022 W12\"))  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Mar 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long_india) #> # weights:  16 (9 variable) #> initial  value 95020.774394  #> iter  10 value 24864.826680 #> iter  20 value 23695.414929 #> iter  30 value 23671.967165 #> iter  40 value 23670.605588 #> iter  50 value 23670.580651 #> iter  60 value 23669.431835 #> iter  70 value 23668.609817 #> iter  80 value 23668.162803 #> iter  90 value 23667.869689 #> final  value 23667.735909  #> converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2022.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long_india <- GetIndiaCases() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2022 W35\"))  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Dec 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long_india) #> # weights:  16 (9 variable) #> initial  value 22934.853910  #> iter  10 value 4904.038042 #> iter  20 value 4676.206025 #> iter  30 value 4672.141812 #> iter  40 value 4647.061846 #> iter  50 value 4643.391242 #> final  value 4642.244180  #> converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_latest.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long_india <- GetIndiaCases() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2023 W23\"))  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"June 2023\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long_india) #> # weights:  12 (6 variable) #> initial  value 1361.180626  #> iter  10 value 545.837986 #> iter  20 value 523.268164 #> iter  30 value 491.727430 #> iter  40 value 490.126833 #> iter  50 value 489.562579 #> iter  60 value 489.421772 #> iter  70 value 488.967512 #> iter  80 value 488.799629 #> iter  90 value 488.720076 #> iter 100 value 488.706989 #> iter 110 value 488.660294 #> iter 120 value 488.640079 #> iter 130 value 488.631597 #> iter 140 value 488.629071 #> iter 150 value 488.624949 #> iter 150 value 488.624945 #> iter 150 value 488.624942 #> final  value 488.624942  #> converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Jaipur\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State     District value ##   <yearmon> <chr>     <chr>    <dbl> ## 1 Apr 2020  Rajasthan Jaipur     907 ## 2 May 2020  Rajasthan Jaipur    1084 ## 3 Jun 2020  Rajasthan Jaipur    1327 ## 4 Jul 2020  Rajasthan Jaipur    2100 ## 5 Aug 2020  Rajasthan Jaipur    5373 ## 6 Sep 2020  Rajasthan Jaipur   10697"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"plot-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"Get monthly cases for Jaipur","what":"Plot monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Jaipur (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-weekly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get weekly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Jaipur\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"overall-how-much-has-jaipur-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Jaipur","what":"Overall, how much has Jaipur sequenced over months?","title":"Animation of projected weekly cases - Jaipur (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Jaipur (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Jaipur\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  40 (27 variable) ## initial  value 11706.342613  ## iter  10 value 4681.457858 ## iter  20 value 3325.044410 ## iter  30 value 2938.538953 ## iter  40 value 2903.499413 ## iter  50 value 2893.454462 ## iter  60 value 2886.934015 ## iter  70 value 2881.288738 ## iter  80 value 2878.495549 ## iter  90 value 2872.100772 ## iter 100 value 2865.587078 ## iter 110 value 2864.104513 ## iter 120 value 2864.001574 ## iter 130 value 2863.350780 ## iter 140 value 2862.395382 ## iter 150 value 2861.821554 ## iter 160 value 2861.059578 ## iter 170 value 2860.837644 ## iter 180 value 2860.742589 ## iter 190 value 2860.225128 ## iter 200 value 2859.887634 ## iter 210 value 2859.745341 ## iter 220 value 2859.447069 ## final  value 2859.442954  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Jaipur\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 8342.861720  ## iter  10 value 2201.853970 ## iter  20 value 1760.387081 ## iter  30 value 1741.001963 ## iter  40 value 1738.075480 ## iter  50 value 1737.470349 ## iter  60 value 1737.383133 ## iter  70 value 1737.021345 ## iter  80 value 1736.696090 ## iter  90 value 1735.985709 ## iter 100 value 1735.223423 ## iter 110 value 1735.215896 ## iter 120 value 1735.153141 ## iter 130 value 1735.093217 ## iter 140 value 1735.066843 ## iter 150 value 1735.054569 ## iter 160 value 1735.047039 ## iter 170 value 1735.045111 ## iter 180 value 1735.038829 ## iter 190 value 1734.946306 ## final  value 1734.930932  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Jaipur\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 8342.861720  ## iter  10 value 2201.853970 ## iter  20 value 1760.387081 ## iter  30 value 1741.001963 ## iter  40 value 1738.075480 ## iter  50 value 1737.470349 ## iter  60 value 1737.383133 ## iter  70 value 1737.021345 ## iter  80 value 1736.696090 ## iter  90 value 1735.985709 ## iter 100 value 1735.223423 ## iter 110 value 1735.215896 ## iter 120 value 1735.153141 ## iter 130 value 1735.093217 ## iter 140 value 1735.066843 ## iter 150 value 1735.054569 ## iter 160 value 1735.047039 ## iter 170 value 1735.045111 ## iter 180 value 1735.038829 ## iter 190 value 1734.946306 ## final  value 1734.930932  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-monthly-cases-for-maharashtra","dir":"Articles","previous_headings":"","what":"Get monthly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"Maharashtra_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Maharashtra\") ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Maharashtra_monthly_cases) ##   MonthYear       State  value      type ## 1  Mar 2020 Maharashtra    302 Confirmed ## 2  Apr 2020 Maharashtra  10196 Confirmed ## 3  May 2020 Maharashtra  57157 Confirmed ## 4  Jun 2020 Maharashtra 107106 Confirmed ## 5  Jul 2020 Maharashtra 247357 Confirmed ## 6  Aug 2020 Maharashtra 370423 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"plot-monthly-cases-for-maharashtra","dir":"Articles","previous_headings":"Get monthly cases for Maharashtra","what":"Plot monthly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"p1 <- BarPlot(Maharashtra_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Maharashtra (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-weekly-cases-for-maharashtra","dir":"Articles","previous_headings":"","what":"Get weekly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"Maharashtra_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Maharashtra\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Maharashtra_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Maharashtra (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"overall-how-much-has-maharashtra-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Maharashtra","what":"Overall, how much has Maharashtra sequenced over months?","title":"Animation of projected weekly cases - Maharashtra (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Maharashtra_monthly_cases_tmp <- Maharashtra_monthly_cases %>% select(MonthYear, value) Maharashtra_monthly_cases_tmp$State <- \"India\" Maharashtra_monthly_cases_tmp$type <- \"Confirmed\"  Maharashtra_monthly_cases_tmp <- Maharashtra_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Maharashtra_seq_stats,   confirmed_long = Maharashtra_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Maharashtra (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Maharashtra\")) state_month_counts$State <- \"Maharashtra\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Maharashtra (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Maharashtra\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Maharashtra\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  56 (39 variable) ## initial  value 92290.473874  ## iter  10 value 43786.967640 ## iter  20 value 38091.652452 ## iter  30 value 29729.814614 ## iter  40 value 23751.363919 ## iter  50 value 22918.378841 ## iter  60 value 22241.960092 ## iter  70 value 21845.092602 ## iter  80 value 21640.028155 ## iter  90 value 21631.796291 ## iter 100 value 21489.927178 ## iter 110 value 21354.827950 ## iter 120 value 21295.057141 ## iter 130 value 21178.168747 ## iter 140 value 21137.030647 ## iter 150 value 21086.081089 ## iter 160 value 21079.634831 ## iter 170 value 21079.576266 ## iter 180 value 21078.868718 ## iter 190 value 21077.226378 ## iter 200 value 21072.273570 ## iter 210 value 21065.960936 ## iter 220 value 21062.511129 ## iter 230 value 21056.534789 ## iter 240 value 21046.623545 ## iter 250 value 21046.531874 ## iter 260 value 21043.480253 ## iter 270 value 21041.654565 ## iter 280 value 21038.878821 ## iter 290 value 21037.633188 ## iter 300 value 21035.886300 ## iter 310 value 21035.108472 ## final  value 21034.906542  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Maharashtra\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Maharashtra\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 37958.682168  ## iter  10 value 17440.035895 ## iter  20 value 14321.931849 ## iter  30 value 12536.769841 ## iter  40 value 12219.945997 ## iter  50 value 12169.134388 ## iter  60 value 12132.151435 ## iter  70 value 12120.294917 ## iter  80 value 12108.850280 ## iter  90 value 12089.693685 ## iter 100 value 12083.727592 ## iter 110 value 12080.349532 ## iter 120 value 12079.978119 ## final  value 12079.589240  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Maharashtra\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Maharashtra\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 37958.682168  ## iter  10 value 17440.035895 ## iter  20 value 14321.931849 ## iter  30 value 12536.769841 ## iter  40 value 12219.945997 ## iter  50 value 12169.134388 ## iter  60 value 12132.151435 ## iter  70 value 12120.294917 ## iter  80 value 12108.850280 ## iter  90 value 12089.693685 ## iter 100 value 12083.727592 ## iter 110 value 12080.349532 ## iter 120 value 12079.978119 ## final  value 12079.589240  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Mumbai\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Mumbai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  Maharashtra Mumbai    7061 ## 2 May 2020  Maharashtra Mumbai   32625 ## 3 Jun 2020  Maharashtra Mumbai   37972 ## 4 Jul 2020  Maharashtra Mumbai   36626 ## 5 Aug 2020  Maharashtra Mumbai   32340 ## 6 Sep 2020  Maharashtra Mumbai   59463"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"plot-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"Get monthly cases for Mumbai","what":"Plot monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"p1 <- BarPlot(Mumbai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Mumbai (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-weekly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Mumbai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Mumbai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"overall-how-much-has-mumbai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Mumbai","what":"Overall, how much has Mumbai sequenced over months?","title":"Animation of projected weekly cases - Mumbai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases %>% select(MonthYear, value) Mumbai_monthly_cases_tmp$State <- \"India\" Mumbai_monthly_cases_tmp$type <- \"Confirmed\"  Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Mumbai_seq_stats,   confirmed_long = Mumbai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"Mumbai\")) state_month_counts$State <- \"Mumbai\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Mumbai (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Mumbai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 15574.329797  ## iter  10 value 7180.065979 ## iter  20 value 4687.044311 ## iter  30 value 4136.486563 ## iter  40 value 3969.175266 ## iter  50 value 3825.992578 ## iter  60 value 3799.447246 ## iter  70 value 3780.892669 ## iter  80 value 3777.022187 ## iter  90 value 3766.742649 ## iter 100 value 3759.681911 ## iter 110 value 3750.156800 ## iter 120 value 3732.670839 ## iter 130 value 3732.047471 ## iter 140 value 3729.770426 ## iter 150 value 3727.391408 ## iter 160 value 3725.303330 ## iter 170 value 3721.171763 ## iter 180 value 3718.983600 ## iter 190 value 3718.679393 ## iter 200 value 3718.266131 ## iter 210 value 3717.388299 ## iter 220 value 3716.550086 ## iter 230 value 3714.654290 ## iter 240 value 3711.627573 ## iter 250 value 3709.147146 ## iter 260 value 3707.628286 ## iter 270 value 3706.024933 ## iter 280 value 3705.084712 ## iter 290 value 3704.698938 ## iter 300 value 3704.246987 ## final  value 3703.258517  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Mumbai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 8236.346878  ## iter  10 value 3535.607096 ## iter  20 value 2813.442453 ## iter  30 value 2610.377376 ## iter  40 value 2578.461798 ## iter  50 value 2569.905312 ## iter  60 value 2553.883708 ## iter  70 value 2552.515452 ## iter  80 value 2550.730665 ## iter  90 value 2548.764127 ## iter 100 value 2546.005380 ## iter 110 value 2544.766794 ## iter 120 value 2544.734442 ## iter 130 value 2544.663193 ## iter 140 value 2544.585915 ## iter 150 value 2544.447931 ## iter 160 value 2544.395797 ## iter 170 value 2544.295029 ## iter 180 value 2544.210785 ## iter 190 value 2544.163845 ## iter 200 value 2544.089318 ## iter 210 value 2543.958257 ## iter 220 value 2543.905407 ## final  value 2543.903712  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Mumbai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 8236.346878  ## iter  10 value 3535.607096 ## iter  20 value 2813.442453 ## iter  30 value 2610.377376 ## iter  40 value 2578.461798 ## iter  50 value 2569.905312 ## iter  60 value 2553.883708 ## iter  70 value 2552.515452 ## iter  80 value 2550.730665 ## iter  90 value 2548.764127 ## iter 100 value 2546.005380 ## iter 110 value 2544.766794 ## iter 120 value 2544.734442 ## iter 130 value 2544.663193 ## iter 140 value 2544.585915 ## iter 150 value 2544.447931 ## iter 160 value 2544.395797 ## iter 170 value 2544.295029 ## iter 180 value 2544.210785 ## iter 190 value 2544.163845 ## iter 200 value 2544.089318 ## iter 210 value 2543.958257 ## iter 220 value 2543.905407 ## final  value 2543.903712  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York City","text":"","code":"counties <- c(\"New York\", \"New York City\", \"New York County\", \"Queens County\", \"Bronx County\", \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Richmond County\")  gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_15.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")   gisaid_NYC <- gisaid_NY %>% filter(District %in% counties)  vocs <- GetVOCs() custom_voc_mapping <- list(   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" )  gisaid_NYC <- gisaid_NYC %>% filter(pangolin_lineage != \"None\")  gisaid_NYC <- CollapseLineageToVOCs(   variant_df = gisaid_NYC,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York City","text":"","code":"confirmed <- read_csv(\"https://raw.githubusercontent.com/nychealth/coronavirus-data/master/trends/data-by-day.csv\") %>% select(date_of_interest, CASE_COUNT) colnames(confirmed) <- c(\"date\", \"daily_cases\") confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date, datefmt = \"%m/%d/%Y\")  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_NYC_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New York City","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_NYC) state_month_counts$State <- \"NYC\" state_month_prevalence <- CountsToPrevalence(state_month_counts)   state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York City","text":"Look cases 2023:","code":"voc_to_keep <- gisaid_NYC_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NYC_weekwise <- gisaid_NYC_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NYC_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  32 (21 variable) ## initial  value 319824.347435  ## iter  10 value 131914.822653 ## iter  20 value 89298.309900 ## iter  30 value 67756.980450 ## iter  40 value 60489.503464 ## iter  50 value 58519.789636 ## iter  60 value 56270.624355 ## iter  70 value 55757.426427 ## iter  80 value 55749.292746 ## iter  90 value 55745.122359 ## iter 100 value 55743.335669 ## iter 110 value 55741.852388 ## iter 120 value 55740.149661 ## final  value 55740.148576  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and NYC Health**<br>\", date_breaks = \"14 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"April 2023\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_subset <- gisaid_NYC %>% filter(MonthYearCollected > \"April 2023\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC_subset)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  20 (12 variable) ## initial  value 6394.296826  ## iter  10 value 3450.839446 ## iter  20 value 3313.609119 ## iter  30 value 3311.708464 ## iter  40 value 3310.157375 ## iter  50 value 3308.120317 ## final  value 3308.118131  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and NYC Health**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York State","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_15.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_NY <- gisaid_NY %>% filter(pangolin_lineage != \"None\") gisaid_NY <- CollapseLineageToVOCs(   variant_df = gisaid_NY,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York State","text":"","code":"confirmed <- covid19(country = \"USA\", level = 2) %>%   filter(administrative_area_level_2 == \"New York\") %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) #> We have invested a lot of time and effort in creating COVID-19 Data #> Hub, please cite the following when using it: #>  #>   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open #>   Source Software 5(51):2376, doi: 10.21105/joss.02376 #>  #> The implementation details and the latest version of the data are #> described in: #>  #>   Guidotti, E., (2022), \"A worldwide epidemiological database for #>   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: #>   10.1038/s41597-022-01245-1 #> To print citations in BibTeX format use: #>  > print(citation('COVID19'), bibtex=TRUE) #>  #> To hide this message use 'verbose = FALSE'.  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New York State","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_NY) state_month_counts$State <- \"New York\" state_month_prevalence <- CountsToPrevalence(state_month_counts) state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York State","text":"Look cases february, 2022 :","code":"voc_to_keep <- gisaid_NY_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NY_weekwise <- gisaid_NY_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NY_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  32 (21 variable) #> initial  value 720773.947736  #> iter  10 value 238038.766792 #> iter  20 value 205909.517003 #> iter  30 value 170383.745981 #> iter  40 value 145402.837367 #> iter  50 value 144065.745545 #> iter  60 value 141046.591074 #> iter  70 value 140757.814562 #> iter  80 value 140666.259935 #> final  value 140664.461805  #> converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"December 2022\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY <- gisaid_NY %>% filter(MonthYearCollected > \"December 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  20 (12 variable) #> initial  value 60476.238998  #> iter  10 value 35549.043528 #> iter  20 value 24583.162355 #> iter  30 value 24513.920291 #> iter  40 value 24440.185477 #> iter  50 value 24420.675570 #> final  value 24420.671227  #> converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-monthly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Pune\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(pune_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District  value ##   <yearmon> <chr>       <chr>     <dbl> ## 1 Apr 2020  Maharashtra Pune       1248 ## 2 May 2020  Maharashtra Pune       6671 ## 3 Jun 2020  Maharashtra Pune      14408 ## 4 Jul 2020  Maharashtra Pune      66904 ## 5 Aug 2020  Maharashtra Pune      85874 ## 6 Sep 2020  Maharashtra Pune     117959"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"plot-monthly-cases-for-pune","dir":"Articles","previous_headings":"Get monthly cases for Pune","what":"Plot monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"p1 <- BarPlot(pune_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Pune (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-weekly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get weekly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Pune\"), rename_country_as_state = TRUE)   p2 <- BarPlot(pune_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"overall-how-much-has-pune-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Pune","what":"Overall, how much has Pune sequenced over months?","title":"Animation of projected weekly cases - Pune (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"pune_monthly_cases_tmp <- pune_monthly_cases %>% select(MonthYear, value) pune_monthly_cases_tmp$State <- \"India\" pune_monthly_cases_tmp$type <- \"Confirmed\"  pune_monthly_cases_tmp <- pune_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = pune_seq_stats,   confirmed_long = pune_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Pune (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Pune\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Pune\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 26365.114445  ## iter  10 value 10731.681151 ## iter  20 value 8389.572652 ## iter  30 value 6956.285036 ## iter  40 value 6724.558551 ## iter  50 value 6644.032773 ## iter  60 value 6616.894159 ## iter  70 value 6587.235569 ## iter  80 value 6577.882868 ## iter  90 value 6565.279637 ## iter 100 value 6550.615508 ## iter 110 value 6530.419414 ## iter 120 value 6467.482211 ## iter 130 value 6439.851698 ## iter 140 value 6433.203889 ## iter 150 value 6431.338248 ## iter 160 value 6431.072707 ## iter 170 value 6429.650312 ## iter 180 value 6424.966426 ## iter 190 value 6413.818624 ## iter 200 value 6406.000393 ## iter 210 value 6404.379934 ## iter 220 value 6401.117424 ## iter 220 value 6401.117420 ## final  value 6401.117420  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Pune\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Pune\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 10212.635967  ## iter  10 value 4590.350258 ## iter  20 value 3862.561393 ## iter  30 value 3544.750729 ## iter  40 value 3498.023239 ## iter  50 value 3486.433437 ## iter  60 value 3483.069952 ## iter  70 value 3481.649036 ## iter  80 value 3479.685451 ## iter  90 value 3477.707985 ## iter 100 value 3474.316912 ## iter 110 value 3469.635470 ## iter 120 value 3467.322351 ## iter 130 value 3467.158034 ## iter 140 value 3466.778290 ## iter 150 value 3466.453209 ## iter 160 value 3466.383448 ## iter 170 value 3466.319461 ## iter 180 value 3466.184408 ## iter 190 value 3464.589688 ## iter 200 value 3464.203208 ## iter 210 value 3464.012242 ## iter 220 value 3463.948100 ## iter 230 value 3463.938896 ## iter 240 value 3463.904465 ## iter 250 value 3463.886884 ## iter 260 value 3463.879986 ## iter 270 value 3463.859002 ## iter 280 value 3463.842795 ## iter 290 value 3463.830995 ## iter 300 value 3463.563810 ## iter 310 value 3463.375418 ## iter 320 value 3463.337145 ## iter 330 value 3463.179199 ## iter 340 value 3463.123598 ## iter 350 value 3463.096437 ## iter 360 value 3463.085424 ## final  value 3463.079789  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Pune\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Pune\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 10212.635967  ## iter  10 value 4590.350258 ## iter  20 value 3862.561393 ## iter  30 value 3544.750729 ## iter  40 value 3498.023239 ## iter  50 value 3486.433437 ## iter  60 value 3483.069952 ## iter  70 value 3481.649036 ## iter  80 value 3479.685451 ## iter  90 value 3477.707985 ## iter 100 value 3474.316912 ## iter 110 value 3469.635470 ## iter 120 value 3467.322351 ## iter 130 value 3467.158034 ## iter 140 value 3466.778290 ## iter 150 value 3466.453209 ## iter 160 value 3466.383448 ## iter 170 value 3466.319461 ## iter 180 value 3466.184408 ## iter 190 value 3464.589688 ## iter 200 value 3464.203208 ## iter 210 value 3464.012242 ## iter 220 value 3463.948100 ## iter 230 value 3463.938896 ## iter 240 value 3463.904465 ## iter 250 value 3463.886884 ## iter 260 value 3463.879986 ## iter 270 value 3463.859002 ## iter 280 value 3463.842795 ## iter 290 value 3463.830995 ## iter 300 value 3463.563810 ## iter 310 value 3463.375418 ## iter 320 value 3463.337145 ## iter 330 value 3463.179199 ## iter 340 value 3463.123598 ## iter 350 value 3463.096437 ## iter 360 value 3463.085424 ## final  value 3463.079789  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"get-variants-data-for-singapore","dir":"Articles","previous_headings":"","what":"Get variants data for Singapore","title":"Animation of projected weekly cases - Singapore","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_15.qs\") gisaid_singapore <- gisaid_metadata %>%   filter(Country == \"Singapore\") %>%   filter(Host == \"Human\") # format metadata gisaid_singapore <- FormatGISAIDMetadata(gisaid_singapore) gisaid_singapore <- gisaid_singapore %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `B.1` = \"B.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_singapore <- gisaid_singapore %>% filter(pangolin_lineage != \"None\")  gisaid_singapore <- CollapseLineageToVOCs(   variant_df = gisaid_singapore,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"get-weekly-cases-for-singapore","dir":"Articles","previous_headings":"","what":"Get weekly cases for Singapore","title":"Animation of projected weekly cases - Singapore","text":"","code":"GetCases <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, Singapore)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   return(confirmed) }   GetCasesLong <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, Singapore)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   confirmed_subset_weekwise <- confirmed %>%     group_by(WeekYear) %>%     summarise(cases = mean(cases, na.rm = T)) %>%     arrange(WeekYear)   confirmed_subset_weekwise$cases <- ceiling(confirmed_subset_weekwise$cases)   confirmed_subset_dateweekwise_long_india <- confirmed_subset_weekwise %>%     rename(n = cases) %>%     rename(WeekYearCollected = WeekYear) }   confirmed <- GetCases() confirmed_subset_dateweekwise_long <- GetCasesLong() gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Singapore","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_singapore) state_month_counts$State <- \"Singapore\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs()  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Singapore","text":"Look cases 2022, Look cases 2023  Look cases past weeks","code":"voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  singapore_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  36 (24 variable) #> initial  value 101182.191786  #> iter  10 value 48655.357767 #> iter  20 value 39100.749158 #> iter  30 value 28509.587037 #> iter  40 value 25689.172122 #> iter  50 value 24997.811001 #> iter  60 value 24885.777994 #> iter  70 value 23957.264780 #> iter  80 value 23622.492961 #> iter  90 value 23446.364556 #> iter 100 value 23424.100781 #> iter 110 value 23424.017773 #> iter 120 value 23422.341026 #> iter 130 value 23417.380190 #> iter 140 value 23414.172004 #> final  value 23412.668072  #> converged the_anim <- PlotVariantPrevalenceAnimated(singapore_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2021 W35\"))  gisaid_singapore_subset <- gisaid_singapore %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore_subset)  voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  singapore_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  24 (15 variable) #> initial  value 65890.162721  #> iter  10 value 36983.619110 #> iter  20 value 22024.747834 #> iter  30 value 20145.399940 #> iter  40 value 20128.388732 #> iter  50 value 20112.615748 #> iter  60 value 20110.572941 #> final  value 20109.654335  #> converged the_anim <- PlotVariantPrevalenceAnimated(singapore_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2022 W35\"))  gisaid_singapore_subset <- gisaid_singapore %>% filter(MonthYearCollected > \"October 2022\") gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore_subset)  voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  singapore_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  20 (12 variable) #> initial  value 32454.315504  #> iter  10 value 16454.741396 #> iter  20 value 14641.521337 #> iter  30 value 14608.092276 #> iter  40 value 14605.164864 #> iter  50 value 14600.520881 #> iter  60 value 14600.440985 #> iter  70 value 14595.385446 #> iter  80 value 14582.692318 #> iter  90 value 14581.001028 #> iter 100 value 14579.732195 #> final  value 14579.722044  #> converged the_anim <- PlotVariantPrevalenceAnimated(singapore_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated_2023.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2023 W23\"))  gisaid_singapore_subset <- gisaid_singapore %>% filter(MonthYearCollected > \"June 2023\") gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore_subset)  voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  singapore_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  16 (9 variable) #> initial  value 11482.676193  #> iter  10 value 6264.132328 #> iter  20 value 6043.973844 #> iter  30 value 6006.370499 #> final  value 6002.472690  #> converged the_anim <- PlotVariantPrevalenceAnimated(singapore_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated_2024.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-variants-data-for-south-africa","dir":"Articles","previous_headings":"","what":"Get variants data for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_South_Africa<- gisaid_metadata %>%   filter(Country == \"South Africa\") %>%   filter(Host == \"Human\") # format metadata gisaid_South_Africa<- FormatGISAIDMetadata(gisaid_South_Africa) gisaid_South_Africa<- gisaid_South_Africa%>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_South_Africa<- gisaid_South_Africa%>% filter(pangolin_lineage != \"None\")  gisaid_South_Africa<- CollapseLineageToVOCs(   variant_df = gisaid_South_Africa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-weekly-cases-for-south-africa","dir":"Articles","previous_headings":"","what":"Get weekly cases for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"GetCases <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, South.Africa)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   return(confirmed) }   GetCasesLong <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, South.Africa)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   confirmed_subset_weekwise <- confirmed %>%     group_by(WeekYear) %>%     summarise(cases = mean(cases, na.rm = T)) %>%     arrange(WeekYear)   confirmed_subset_weekwise$cases <- ceiling(confirmed_subset_weekwise$cases)   confirmed_subset_dateweekwise_long_india <- confirmed_subset_weekwise %>%     rename(n = cases) %>%     rename(WeekYearCollected = WeekYear) }   confirmed <- GetCases() confirmed_subset_dateweekwise_long <- GetCasesLong() gisaid_South_Africa_weekwise <- SummarizeVariantsWeekwise(gisaid_South_Africa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - South Africa","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_South_Africa) state_month_counts$State <- \"South Africa\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs()  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - South Africa","text":"Look cases 2022, Look cases 2023  Look cases past weeks","code":"voc_to_keep <- gisaid_South_Africa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_South_Africa_weekwise <- gisaid_South_Africa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  South_Africa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_South_Africa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  16 (9 variable) #> initial  value 76682.872585  #> iter  10 value 43003.485789 #> iter  20 value 32374.818797 #> iter  30 value 30927.203681 #> final  value 30853.004403  #> converged the_anim <- PlotVariantPrevalenceAnimated(South_Africa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/South_Africa_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2021 W35\"))  gisaid_South_Africa_subset <- gisaid_South_Africa%>% filter(MonthYearCollected > \"Oct 2021\") gisaid_South_Africa_weekwise <- SummarizeVariantsWeekwise(gisaid_South_Africa_subset)  voc_to_keep <- gisaid_South_Africa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_South_Africa_weekwise <- gisaid_South_Africa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  South_Africa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_South_Africa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  16 (9 variable) #> initial  value 38577.799481  #> iter  10 value 12403.598525 #> iter  20 value 11748.439819 #> iter  30 value 11741.935580 #> final  value 11741.923305  #> converged the_anim <- PlotVariantPrevalenceAnimated(South_Africa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/South_Africa_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2022 W35\"))  gisaid_South_Africa_subset <- gisaid_South_Africa%>% filter(MonthYearCollected > \"October 2022\") gisaid_South_Africa_weekwise <- SummarizeVariantsWeekwise(gisaid_South_Africa_subset)  voc_to_keep <- gisaid_South_Africa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_South_Africa_weekwise <- gisaid_South_Africa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  South_Africa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_South_Africa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  12 (6 variable) #> initial  value 6457.643033  #> iter  10 value 4860.204046 #> final  value 4855.833005  #> converged the_anim <- PlotVariantPrevalenceAnimated(South_Africa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/South_Africa_animated_2023.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2023 W23\"))  gisaid_South_Africa_subset <- gisaid_South_Africa%>% filter(MonthYearCollected > \"June 2023\") gisaid_South_Africa_weekwise <- SummarizeVariantsWeekwise(gisaid_South_Africa_subset)  voc_to_keep <- gisaid_South_Africa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_South_Africa_weekwise <- gisaid_South_Africa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  South_Africa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_South_Africa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  12 (6 variable) #> initial  value 1006.328856  #> iter  10 value 903.820969 #> final  value 903.820954  #> converged the_anim <- PlotVariantPrevalenceAnimated(South_Africa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/South_Africa_animated_2024.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-monthly-cases-for-tamilnadu","dir":"Articles","previous_headings":"","what":"Get monthly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"Tamilnadu_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Tamil Nadu\") ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Tamilnadu_monthly_cases) ##   MonthYear      State  value      type ## 1  Mar 2020 Tamil Nadu    124 Confirmed ## 2  Apr 2020 Tamil Nadu   2199 Confirmed ## 3  May 2020 Tamil Nadu  20010 Confirmed ## 4  Jun 2020 Tamil Nadu  67834 Confirmed ## 5  Jul 2020 Tamil Nadu 155692 Confirmed ## 6  Aug 2020 Tamil Nadu 182182 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"plot-monthly-cases-for-tamilnadu","dir":"Articles","previous_headings":"Get monthly cases for Tamilnadu","what":"Plot monthly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"p1 <- BarPlot(Tamilnadu_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Tamilnadu (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-weekly-cases-for-tamilnadu","dir":"Articles","previous_headings":"","what":"Get weekly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"Tamilnadu_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Tamil Nadu\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Tamilnadu_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Tamilnadu (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"overall-how-much-has-tamilnadu-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Tamilnadu","what":"Overall, how much has Tamilnadu sequenced over months?","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Tamilnadu_monthly_cases_tmp <- Tamilnadu_monthly_cases %>% select(MonthYear, value) Tamilnadu_monthly_cases_tmp$State <- \"India\" Tamilnadu_monthly_cases_tmp$type <- \"Confirmed\"  Tamilnadu_monthly_cases_tmp <- Tamilnadu_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Tamilnadu_seq_stats,   confirmed_long = Tamilnadu_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Tamilnadu (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Tamil Nadu\")) state_month_counts$State <- \"Tamil Nadu\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Tamil Nadu\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 48882.804855  ## iter  10 value 22261.083247 ## iter  20 value 16795.407813 ## iter  30 value 14581.674819 ## iter  40 value 13685.708514 ## iter  50 value 13450.947012 ## iter  60 value 13385.513385 ## iter  70 value 13270.613242 ## iter  80 value 13159.881372 ## iter  90 value 13086.982518 ## iter 100 value 13029.959873 ## iter 110 value 13016.284117 ## iter 120 value 13004.515557 ## iter 130 value 12983.865946 ## iter 140 value 12968.678387 ## iter 150 value 12964.228832 ## iter 160 value 12963.962687 ## iter 170 value 12960.911855 ## iter 180 value 12956.023478 ## iter 190 value 12952.260955 ## iter 200 value 12951.643359 ## iter 210 value 12947.955831 ## iter 220 value 12945.278961 ## iter 220 value 12945.278839 ## final  value 12945.278839  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Tamil Nadu\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 21887.988050  ## iter  10 value 12913.556566 ## iter  20 value 10039.840106 ## iter  30 value 9160.350931 ## iter  40 value 9024.790026 ## iter  50 value 8994.142902 ## iter  60 value 8989.212071 ## iter  70 value 8986.497678 ## iter  80 value 8983.372214 ## iter  90 value 8977.915907 ## iter 100 value 8973.008756 ## iter 110 value 8970.750450 ## iter 120 value 8970.597054 ## final  value 8970.575063  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Tamil Nadu\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 21887.988050  ## iter  10 value 12913.556566 ## iter  20 value 10039.840106 ## iter  30 value 9160.350931 ## iter  40 value 9024.790026 ## iter  50 value 8994.142902 ## iter  60 value 8989.212071 ## iter  70 value 8986.497678 ## iter  80 value 8983.372214 ## iter  90 value 8977.915907 ## iter 100 value 8973.008756 ## iter 110 value 8970.750450 ## iter 120 value 8970.597054 ## final  value 8970.575063  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-monthly-cases-for-telangana","dir":"Articles","previous_headings":"","what":"Get monthly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"Telangana_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Telangana\") ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(Telangana_monthly_cases) ##   MonthYear     State value      type ## 1  Mar 2020 Telangana    97 Confirmed ## 2  Apr 2020 Telangana   941 Confirmed ## 3  May 2020 Telangana  1660 Confirmed ## 4  Jun 2020 Telangana 13641 Confirmed ## 5  Jul 2020 Telangana 46364 Confirmed ## 6  Aug 2020 Telangana 61750 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"plot-monthly-cases-for-telangana","dir":"Articles","previous_headings":"Get monthly cases for Telangana","what":"Plot monthly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"p1 <- BarPlot(Telangana_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Telangana (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-weekly-cases-for-telangana","dir":"Articles","previous_headings":"","what":"Get weekly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"Telangana_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Telangana\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Telangana_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Telangana (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"overall-how-much-has-telangana-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Telangana","what":"Overall, how much has Telangana sequenced over months?","title":"Animation of projected weekly cases - Telangana (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Telangana_monthly_cases_tmp <- Telangana_monthly_cases %>% select(MonthYear, value) Telangana_monthly_cases_tmp$State <- \"India\" Telangana_monthly_cases_tmp$type <- \"Confirmed\"  Telangana_monthly_cases_tmp <- Telangana_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Telangana_seq_stats,   confirmed_long = Telangana_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Telangana (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Telangana\")) state_month_counts$State <- \"Telangana\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Telangana (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Telangana\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Telangana\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  60 (42 variable) ## initial  value 53706.051588  ## iter  10 value 19089.948274 ## iter  20 value 15271.923578 ## iter  30 value 12165.385199 ## iter  40 value 11696.811843 ## iter  50 value 11531.488444 ## iter  60 value 11407.396612 ## iter  70 value 11390.805643 ## iter  80 value 11378.215547 ## iter  90 value 11372.121578 ## iter 100 value 11368.524855 ## iter 110 value 11347.166496 ## iter 120 value 11338.343161 ## iter 130 value 11319.031443 ## iter 140 value 11304.937484 ## iter 150 value 11290.069718 ## iter 160 value 11284.086458 ## iter 170 value 11282.193713 ## iter 180 value 11281.614269 ## iter 190 value 11281.398993 ## iter 200 value 11277.649494 ## iter 210 value 11274.836315 ## iter 220 value 11274.261561 ## iter 230 value 11272.803028 ## iter 240 value 11269.009386 ## iter 250 value 11267.733930 ## iter 260 value 11266.798701 ## iter 270 value 11266.473193 ## iter 280 value 11266.188635 ## iter 290 value 11265.585484 ## iter 300 value 11264.690201 ## iter 310 value 11263.097225 ## iter 320 value 11262.670208 ## iter 330 value 11262.365255 ## iter 340 value 11261.702540 ## final  value 11261.523708  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Telangana\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Telangana\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 20362.926657  ## iter  10 value 8450.907437 ## iter  20 value 6005.436485 ## iter  30 value 5648.379329 ## iter  40 value 5595.073447 ## iter  50 value 5569.751321 ## iter  60 value 5563.255333 ## iter  70 value 5561.890705 ## iter  80 value 5559.413501 ## iter  90 value 5557.122944 ## iter 100 value 5556.345239 ## iter 110 value 5555.493314 ## iter 120 value 5555.244005 ## final  value 5555.165026  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong() ## Rows: 3183 Columns: 42 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr   (2): Date, Status ## dbl  (39): TT, AN, AP, AR, AS, BR, CH, CT, DN, DD, DL, GA, GJ, HR, HP, JK, J... ## date  (1): Date_YMD ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Telangana\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Telangana\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 20362.926657  ## iter  10 value 8450.907437 ## iter  20 value 6005.436485 ## iter  30 value 5648.379329 ## iter  40 value 5595.073447 ## iter  50 value 5569.751321 ## iter  60 value 5563.255333 ## iter  70 value 5561.890705 ## iter  80 value 5559.413501 ## iter  90 value 5557.122944 ## iter 100 value 5556.345239 ## iter 110 value 5555.493314 ## iter 120 value 5555.244005 ## final  value 5555.165026  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-variants-data-for-uk","dir":"Articles","previous_headings":"","what":"Get variants data for UK","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_uk <- gisaid_metadata %>%   filter(Country == \"United Kingdom\") %>%   filter(Host == \"Human\") # format metadata gisaid_uk <- FormatGISAIDMetadata(gisaid_uk)  gisaid_uk <- gisaid_uk %>% filter(State != \"\")  gisaid_uk <- gisaid_uk %>%   filter(pangolin_lineage != \"Unknown\") %>%   arrange(State, MonthYearCollected) %>%   filter(!is.na(MonthYearCollected))  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `XBB` = \"XBB\",   `XBB.1.5` = \"XBB\",   `XBB.1` = \"XBB\",   `XBB.1.*` = \"XBB\",   `XBB.*` = \"XBB\",   `XBB.*.*` = \"XBB\",   `XBB.*.*.*` = \"XBB\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `EG.5` = \"EG.5\",   `EG.5.1` = \"EG.5\",   `EG.5.1.1` = \"EG.5\",   `EG.5.*` = \"EG.5\",   `EG.5.1` = \"EG.5\",   # `EG.6.*` = \"EG.6\",   # `EG.6.1` = \"EG.6\",   `FL.1.*` = \"FL.1\",   `FU.1` = \"FU.1\",   `FU.1.*` = \"FU.1\",   `GJ.1.2` = \"GJ.1\",   `GJ.1.*` = \"GJ.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_uk <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-daily-case-data","dir":"Articles","previous_headings":"","what":"Get daily case data","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"if (FALSE) {   cases.struct <- list(     date = \"date\",     areaName = \"areaName\",     newCasesByPublishDate = \"newCasesByPublishDate\"   )   all_nations <- c(     \"areaType=nation\"   )   cases_data <- get_data(     filters = all_nations,     structure = cases.struct   ) %>% rename(new_cases = newCasesByPublishDate)     confirmed <- cases_data %>%     arrange(date) %>%     group_by(date) %>%     summarise(daily_cases = sum(new_cases)) } confirmed <- covid19(country = \"United Kingdom\", level = 1) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) ## We have invested a lot of time and effort in creating COVID-19 Data ## Hub, please cite the following when using it: ##  ##   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open ##   Source Software 5(51):2376, doi: 10.21105/joss.02376 ##  ## The implementation details and the latest version of the data are ## described in: ##  ##   Guidotti, E., (2022), \"A worldwide epidemiological database for ##   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: ##   10.1038/s41597-022-01245-1 ## To print citations in BibTeX format use: ##  > print(citation('COVID19'), bibtex=TRUE) ##  ## To hide this message use 'verbose = FALSE'. confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_uk) state_month_counts$State <- \"UK\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - United Kingdom","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_uk_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_uk_weekwise <- gisaid_uk_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  uk_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_uk_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  60 (42 variable) ## initial  value 8172310.568083  ## iter  10 value 2743547.517967 ## iter  20 value 2525641.121346 ## iter  30 value 2126579.834310 ## iter  40 value 1808320.047747 ## iter  50 value 775094.780290 ## iter  60 value 549759.006540 ## iter  70 value 529243.266982 ## iter  80 value 512394.130990 ## iter  90 value 505138.376920 ## iter 100 value 501555.323403 ## iter 110 value 490053.228890 ## iter 120 value 473036.808321 ## iter 130 value 464964.358075 ## iter 140 value 461848.637738 ## iter 150 value 461486.546237 ## iter 160 value 461065.667929 ## iter 170 value 460962.802384 ## iter 180 value 460957.301405 ## iter 190 value 460954.413661 ## iter 200 value 460927.273149 ## iter 210 value 460849.000014 ## iter 220 value 460799.238251 ## iter 230 value 460785.317886 ## iter 240 value 460629.081216 ## iter 250 value 460610.294257 ## final  value 460602.974708  ## converged the_anim <- PlotVariantPrevalenceAnimated(uk_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and gov.uk**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"December 2022\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk <- gisaid_uk %>% filter(MonthYearCollected > \"December 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 216061.881588  ## iter  10 value 122081.232449 ## iter  20 value 114882.771885 ## iter  30 value 105583.612784 ## iter  40 value 104884.729251 ## iter  50 value 104872.199675 ## iter  60 value 104869.111877 ## iter  70 value 104847.009961 ## iter  80 value 104815.837220 ## iter  90 value 104790.302860 ## final  value 104790.293137  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the UK by variant\", caption = \"**Source: gisaid.org and gov.uk**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-variants-data-for-usa","dir":"Articles","previous_headings":"","what":"Get variants data for USA","title":"Animation of projected weekly cases - USA","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_15.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `B.1` = \"B.1\",   `JN.1` = \"JN.1\",   `JN.1.*` = \"JN.1\",   `HV.1` = \"HV.1\",   `HV.1.*` = \"HV.1\" ) gisaid_usa <- gisaid_usa %>% filter(pangolin_lineage != \"None\")  gisaid_usa <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-weekly-cases-for-usa","dir":"Articles","previous_headings":"","what":"Get weekly cases for USA","title":"Animation of projected weekly cases - USA","text":"","code":"GetCases <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, United.States)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   return(confirmed) }   GetCasesLong <- function() {   data <- read.csv(\"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/cases_deaths/new_cases.csv\")   confirmed <- data %>% select(date, United.States)   colnames(confirmed)[2] <- c(\"cases\")   confirmed$MonthYear <- GetMonthYear(confirmed$date)   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)   confirmed_subset_weekwise <- confirmed %>%     group_by(WeekYear) %>%     summarise(cases = mean(cases, na.rm = T)) %>%     arrange(WeekYear)   confirmed_subset_weekwise$cases <- ceiling(confirmed_subset_weekwise$cases)   confirmed_subset_dateweekwise_long_india <- confirmed_subset_weekwise %>%     rename(n = cases) %>%     rename(WeekYearCollected = WeekYear) }   confirmed <- GetCases() confirmed_subset_dateweekwise_long <- GetCasesLong() gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - USA","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_usa) state_month_counts$State <- \"USA\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs()  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - USA","text":"Look cases 2022, Look cases 2023","code":"voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  36 (24 variable) #> initial  value 10966222.623684  #> iter  10 value 4613467.609466 #> iter  20 value 4303542.435764 #> iter  30 value 2683996.520660 #> iter  40 value 2179886.547417 #> iter  50 value 1960621.913393 #> iter  60 value 1954974.272395 #> iter  70 value 1931940.156420 #> iter  80 value 1927627.438229 #> iter  90 value 1927502.525825 #> iter 100 value 1927368.479116 #> iter 110 value 1927353.063589 #> iter 120 value 1927340.821207 #> iter 130 value 1927308.532846 #> iter 140 value 1926896.107800 #> iter 140 value 1926896.098651 #> iter 140 value 1926896.098647 #> final  value 1926896.098647  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in USA by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2021 W35\"))  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  32 (21 variable) #> initial  value 6357904.990335  #> iter  10 value 1746888.225968 #> iter  20 value 1473988.761725 #> iter  30 value 1070151.803455 #> iter  40 value 955135.899065 #> iter  50 value 953421.420523 #> iter  60 value 951039.444715 #> iter  70 value 950094.473739 #> iter  80 value 949654.058993 #> final  value 949572.495953  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in USA by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\", date_breaks = \"100 days\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetCasesLong() %>%   filter(WeekYearCollected >= tsibble::yearweek(\"2022 W35\"))  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"October 2022\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  24 (15 variable) #> initial  value 1055570.297309  #> iter  10 value 491494.970310 #> iter  20 value 343960.368420 #> iter  30 value 336230.002081 #> iter  40 value 335995.824644 #> iter  50 value 335174.742562 #> final  value 335158.761210  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in USA by variant\", caption = \"**Source: gisaid.org and ourworldindata.org/coronavirus**<br>\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2024_01_11.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Kolkata\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  West Bengal Kolkata    184 ## 2 May 2020  West Bengal Kolkata   1941 ## 3 Jun 2020  West Bengal Kolkata   3859 ## 4 Jul 2020  West Bengal Kolkata  15655 ## 5 Aug 2020  West Bengal Kolkata  18518 ## 6 Sep 2020  West Bengal Kolkata  16255"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"plot-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"Get monthly cases for Kolkata","what":"Plot monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Kolkata (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-weekly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get weekly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Kolkata\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"overall-how-much-has-kolkata-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Kolkata","what":"Overall, how much has Kolkata sequenced over months?","title":"Animation of projected weekly cases - Kolkata (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Kolkata (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Kolkata\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 19798.844090  ## iter  10 value 11435.635166 ## iter  20 value 9057.108989 ## iter  30 value 8157.246773 ## iter  40 value 7975.159693 ## iter  50 value 7858.708901 ## iter  60 value 7668.444190 ## iter  70 value 7580.672625 ## iter  80 value 7528.451751 ## iter  90 value 7513.272444 ## iter 100 value 7474.103534 ## iter 110 value 7445.218172 ## iter 120 value 7436.097829 ## iter 130 value 7434.641300 ## iter 140 value 7427.176775 ## iter 150 value 7420.804551 ## iter 160 value 7420.661086 ## iter 170 value 7416.507209 ## iter 180 value 7414.348054 ## iter 190 value 7411.764260 ## iter 200 value 7407.259358 ## iter 210 value 7399.943830 ## iter 220 value 7385.067901 ## iter 230 value 7384.795201 ## iter 240 value 7383.401682 ## iter 250 value 7382.550291 ## iter 260 value 7382.092938 ## iter 270 value 7381.786055 ## iter 280 value 7381.431294 ## iter 290 value 7381.101862 ## final  value 7380.868859  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Kolkata\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 9583.359157  ## iter  10 value 5728.384893 ## iter  20 value 4972.850542 ## iter  30 value 4897.274384 ## iter  40 value 4863.449275 ## iter  50 value 4846.053188 ## iter  60 value 4843.406679 ## iter  70 value 4842.740416 ## iter  80 value 4834.636500 ## iter  90 value 4833.226017 ## iter 100 value 4832.262214 ## iter 110 value 4831.508361 ## iter 120 value 4831.250002 ## iter 130 value 4831.025131 ## iter 140 value 4830.942138 ## iter 150 value 4830.802627 ## iter 160 value 4830.678303 ## iter 170 value 4830.004841 ## iter 180 value 4829.978702 ## iter 190 value 4829.841942 ## iter 200 value 4829.711621 ## iter 210 value 4829.608746 ## iter 220 value 4829.532697 ## final  value 4829.520347  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\") ## Rows: 661869 Columns: 8 ## â”€â”€ Column specification â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ## Delimiter: \",\" ## chr  (2): State, District ## dbl  (5): Confirmed, Recovered, Deceased, Other, Tested ## date (1): Date ##  ## â„¹ Use `spec()` to retrieve the full column specification for this data. ## â„¹ Specify the column types or set `show_col_types = FALSE` to quiet this message. confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Kolkata\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 9583.359157  ## iter  10 value 5728.384893 ## iter  20 value 4972.850542 ## iter  30 value 4897.274384 ## iter  40 value 4863.449275 ## iter  50 value 4846.053188 ## iter  60 value 4843.406679 ## iter  70 value 4842.740416 ## iter  80 value 4834.636500 ## iter  90 value 4833.226017 ## iter 100 value 4832.262214 ## iter 110 value 4831.508361 ## iter 120 value 4831.250002 ## iter 130 value 4831.025131 ## iter 140 value 4830.942138 ## iter 150 value 4830.802627 ## iter 160 value 4830.678303 ## iter 170 value 4830.004841 ## iter 180 value 4829.978702 ## iter 190 value 4829.841942 ## iter 200 value 4829.711621 ## iter 210 value 4829.608746 ## iter 220 value 4829.532697 ## final  value 4829.520347  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saket Choudhary. Maintainer.","code":""},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choudhary S (2024). covmuller: tool model COVID19 variant prevalence using data GISAID. R package version 0.1.2.0003, https://saketkc.github.io/covmuller.","code":"@Manual{,   title = {covmuller: A tool to model COVID19 variant prevalence using data from GISAID},   author = {Saket Choudhary},   year = {2024},   note = {R package version 0.1.2.0003},   url = {https://saketkc.github.io/covmuller}, }"},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"covmuller","dir":"","previous_headings":"","what":"A tool to model COVID19 variant prevalence using data from GISAID","title":"A tool to model COVID19 variant prevalence using data from GISAID","text":"Covmuller R-package designed analysis sequencing metadata deposited GISAID.","code":""},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"A tool to model COVID19 variant prevalence using data from GISAID","text":"Covmuller currently supports following features: Read preprocess metadata file downloaded GISAID: Vignette Plot variant prevalence: Vignette India USA Canada UK Australia SouthAfrica India New York state South Africa United Kingdom USA New York City (USA) Delhi (India) Mumbai (India) Maharashtra (India) Pune (India)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from the USA â€” CleanAmericanStates","title":"Clean states from the USA â€” CleanAmericanStates","text":"Clean states USA","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from the USA â€” CleanAmericanStates","text":"","code":"CleanAmericanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from the USA â€” CleanAmericanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from the USA â€” CleanAmericanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from Canada â€” CleanCanadaStates","title":"Clean states from Canada â€” CleanCanadaStates","text":"Clean states Canada","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from Canada â€” CleanCanadaStates","text":"","code":"CleanCanadaStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from Canada â€” CleanCanadaStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from Canada â€” CleanCanadaStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Indian States â€” CleanIndianStates","title":"Clean Indian States â€” CleanIndianStates","text":"Clean Indian States","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Indian States â€” CleanIndianStates","text":"","code":"CleanIndianStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Indian States â€” CleanIndianStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Indian States â€” CleanIndianStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from South Africa â€” CleanSouthAfricanStates","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"Clean states South Africa","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"","code":"CleanSouthAfricanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"Collpase pangolin lineage list VOCs","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"","code":"CollapseLineageToVOCs(   variant_df,   vocs = GetVOCs(),   custom_voc_mapping = NULL,   summarize = TRUE )"},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"variant_df dataframe \"pangolin_lineage\" column vocs named list VOC (variant concernt) name key list lineages VOC. method replace lineages VOC name. custom_voc_mapping named vector custom mapping naming lineages. See example.","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"dataframe new column \"lineage_collpased\".","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"","code":"CombineSequencedCases(   cases_sequenced,   confirmed_long,   prune_oversequenced = TRUE,   month.min = NULL,   month.max = NULL,   max.percent = 100 )"},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"cases_sequenced long dataframe per state sequenced cases prune_oversequenced Whether round percentages 100 100. Default TRUE cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert monthwise counts to prevalence â€” CountsToPrevalence","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"Convert monthwise counts prevalence","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"","code":"CountsToPrevalence(variant_df)"},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"dataframe monthwise prevalence variants","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set them â€” CovmullerTheme","title":"Set them â€” CovmullerTheme","text":"Set ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set them â€” CovmullerTheme","text":"","code":"CovmullerTheme()"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"Filter GISAID India Metadata India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"","code":"FilterGISAIDIndia(gisaid_metadata_all)"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"gisaid_metadata_all dataframe GISAID metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"dataframe Indian entries Human date known","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FixDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix date format â€” FixDate","title":"Fix date format â€” FixDate","text":"Fix date format","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FixDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix date format â€” FixDate","text":"","code":"FixDate(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"Format metadata.tar.x file downloaded GISAID missing columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"","code":"FormatGISAIDMetadata(   df,   collection_col = \"Collection date\",   submission_col = \"Submission date\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"df GISAID metadata dataframe collection_col Name column representing date collection (Collection date) submission_col Name column representing date submission (Submission date)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"data frame following extra columns: DateCollected, MonthYearCollected, YearCollected, MonthCollected, WeekCollected DateCollectedNumeric, MonthYearCollectedNumeric DateSubmitted, MonthYearSubmitted, YearSubmitted, MonthSubmitted, WeekSubmitted DateSubmittedNumeric, MonthYearSubmittedNumeric","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"Geocode given address get latitude, longitude Gooogle","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"","code":"GeocodeAddress(address, api.key = NULL, restrict.to = NULL)"},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"address String address geocode api.key API key Google Maps restrict.Country name search restricted , Currently supports 'India'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"dataframe geocoded address","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine filetype â€” GetFiletype","title":"Determine filetype â€” GetFiletype","text":"Determine filetype","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine filetype â€” GetFiletype","text":"","code":"GetFiletype(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine filetype â€” GetFiletype","text":"path Path file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine filetype â€” GetFiletype","text":"Extension file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"Get daily confirmed cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"","code":"GetIndiaConfirmedCasesCumulative(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"Get India monthwose cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"","code":"GetIndiaConfirmedCasesMonthlyLong(   url = \"http://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"","code":"GetIndiaConfirmedCasesWeeklyLong(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"Get daily cases India given status type","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"","code":"GetIndiaDailyCasesCumulative(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\",   status = \"Confirmed\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"url URL fetch data status One \"Confirmed\", \"Recovered\", \"Deceased\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily statewise data for India â€” GetIndiaDailyData","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"'Status' column one 'Confirmed', 'Deceased' 'Recovered'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"","code":"GetIndiaDailyData(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"Get daily deceased cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"","code":"GetIndiaDeceasedCasesCumulative(   url = \"https://saketkc.github.io/covid19bharat_data//csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data for India â€” GetIndiaHospitalization","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"Get hospitalization data India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"","code":"GetIndiaHospitalization(url = \"\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of Indian name states â€” GetIndianStates","title":"Get a list of Indian name states â€” GetIndianStates","text":"Get list Indian name states","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of Indian name states â€” GetIndianStates","text":"","code":"GetIndianStates()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of Indian name states â€” GetIndianStates","text":"list state abbreviation key full name value","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"Get MonthYear (zoo) dataframe string formatted data column","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"","code":"GetMonthYear(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"datecol vector string formatted dates datefmt Format date (default Y-m-d)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"vector dates converted MonthYear format (zoo::.yearmon)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants of concern â€” GetVOCs","title":"Get variants of concern â€” GetVOCs","text":"Get variants concern","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants of concern â€” GetVOCs","text":"","code":"GetVOCs()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants of concern â€” GetVOCs","text":"list variants concern pangolin lineage","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"Plot heatmap cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"","code":"PlotSequencedPropHeatmap(df)"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"heatmap total percentage cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","title":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","text":"Plot heatmap total cases/sequences","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","text":"","code":"PlotTotalHeatmap(df, color_legend = \"Total cases\")"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases (column named 'value')","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","text":"heatmap total cases/sequences","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"Read instrument metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"","code":"ReadAuspiceInstrument(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"dataframe instrument related metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"Read metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"","code":"ReadAuspiceMetadata(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"dataframe collated metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"Read metadata downloaded GISAID","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"","code":"ReadGISAIDMetada(path, showProgress = FALSE, ...)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"path Path tar.xz metadata.txt downloaded GISAID showProgress Whether print progress bars fread ... parameters data.table::fread","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"data frame parsed metadata extra columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"function removes: 1. Commas space 2. Hyphen space 3. Multiple dots single space 4. Multiple spacies single space 5. NA \"UNKNOWN\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"","code":"SanitizeColumn(col)"},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"col String vector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"string vector sanitized entries","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"","code":"SummarizeVariantsDatewise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"Summarize total number variants per month","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"","code":"SummarizeVariantsMonthwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"","code":"SummarizeVariantsWeekwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"Get total sequenced samples per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"","code":"TotalSequencesPerMonthCountrywise(variant_df, rename_country_as_state = TRUE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"dataframe sequencing statistics per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"Get total number sequenced samples per month Country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"","code":"TotalSequencesPerMonthStatewise(variant_df, drop_country = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"dataframe sequencing statistics per state per country","code":""}]
