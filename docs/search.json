[{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"get-cases-data","dir":"Articles","previous_headings":"","what":"Get cases data","title":"Introduction to covmuller","text":"use covid19bharat.org get tally daily confirmed cases summarize monthly level.","code":"indian_state_cases <- GetIndiaConfirmedCasesMonthlyLong() india_cases <- indian_state_cases %>% filter(State == \"India\") head(india_cases) ##   MonthYear State   value      type ## 1  Mar 2020 India    1635 Confirmed ## 2  Apr 2020 India   33232 Confirmed ## 3  May 2020 India  155781 Confirmed ## 4  Jun 2020 India  395044 Confirmed ## 5  Jul 2020 India 1111273 Confirmed ## 6  Aug 2020 India 1990350 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-cases-for-india","dir":"Articles","previous_headings":"Get cases data","what":"Plot cases for India","title":"Introduction to covmuller","text":"easy visualize monthly case counts bar plot:","code":"p1 <- BarPlot(india_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - India\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"read-variant-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Read variant data from GISAID","title":"Introduction to covmuller","text":"utilize GISAID data look prevalence variants. access data, GISAID requires registration.","code":"current_date <- \"2023_09_21\" fpath.tar <- paste0(\"~/data/epicov/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/data/epicov/metadata_tsv_\", current_date, \".qs\")  if (file.exists(fpath.qs)) {   gisaid_metadata <- qs::qread(file = fpath.qs) } else {   gisaid_metadata <- ReadGISAIDMetada(path = fpath.tar)   qs::qsave(gisaid_metadata, fpath.qs) }"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot total sequenced cases","title":"Introduction to covmuller","text":"can look absolute number cases sequenced country filtering information metadata made available GISAID (includes countries). , visualize total sequenced cases coming India:","code":"gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata) country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p2 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from India\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"overall-how-much-has-india-sequenced-over-months","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Overall, how much has India sequenced over months?","title":"Introduction to covmuller","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:  context, can combine three plots :","code":"india_cases_long <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"India\") india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = country_seq_stats,   confirmed_long = india_cases_long ) p3 <- BarPlot(india_sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from India\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-proportion-of-cases-that-been-deposited-from-each-state","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot proportion of cases that been deposited from each state","title":"Introduction to covmuller","text":"can break proportion sequenced cases state level: terms absolute numbers sequenced:","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india, drop_country = TRUE) seq_stats <- rbind(country_seq_stats, state_seq_stats) state_cases_long <- GetIndiaConfirmedCasesMonthlyLong() india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = seq_stats,   confirmed_long = state_cases_long,   month.min = \"Jan 2022\",   month.max = \"Feb 2023\",   max.percent = 5 )  india_sequencing_proportion$State <- factor(   x = india_sequencing_proportion$State,   levels = as.character(GetIndianStates()) ) p4 <- PlotSequencedPropHeatmap(india_sequencing_proportion) # p4 seq_stats2 <- seq_stats # seq_stats2 <- seq_stats2 %>% filter(MonthYear >= \"July 2022\") seq_stats2$MonthYear <- factor(seq_stats$MonthYear) seq_stats2$State <- factor(   x = seq_stats2$State,   levels = as.character(GetIndianStates()) )  p4.total <- PlotTotalHeatmap(df = seq_stats2) ## [1] 47.5 p4.total"},{"path":"http://saket-choudhary.me/covmuller/articles/Introduction.html","id":"plot-prevalence","dir":"Articles","previous_headings":"","what":"Plot Prevalence","title":"Introduction to covmuller","text":"Finally, look prevalence variants variants concern (VOCs):  animated version prevalence plot, check VariantAnimation.","code":"india_month_counts <- SummarizeVariantsMonthwise(gisaid_india) india_month_counts$State <- \"India\" india_month_prevalence <- CountsToPrevalence(india_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) india_month_prevalence <- CollapseLineageToVOCs(   variant_df = india_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(india_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_germany, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - Germany","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_germany) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Germany\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - Germany","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_germany_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_germany_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_germany_collapsed_sel <- gisaid_germany_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_germany_shared_dateweek <- SummarizeVariantsDatewise(gisaid_germany_collapsed_sel, by_state = TRUE) head(gisaid_germany_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Baden-Wurttemberg                19266 BA.4                 10 ## 2 Baden-Wurttemberg                19266 BA.5                153 ## 3 Baden-Wurttemberg                19266 BQ.1+                 2 ## 4 Baden-Wurttemberg                19266 Others               48 ## 5 Baden-Wurttemberg                19267 BA.4                  2 ## 6 Baden-Wurttemberg                19267 BA.5                 91 fit_germany_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_germany_shared_dateweek) ## # weights:  147 (120 variable) ## initial  value 206215.882136  ## iter  10 value 127353.188987 ## iter  20 value 125887.141780 ## iter  30 value 121043.521381 ## iter  40 value 119694.065232 ## iter  50 value 118950.718589 ## iter  60 value 117849.948622 ## iter  70 value 117371.865205 ## iter  80 value 116859.621534 ## iter  90 value 116647.539395 ## iter 100 value 116618.035409 ## iter 110 value 116614.839266 ## iter 120 value 116614.473427 ## iter 130 value 116614.428201 ## final  value 116614.407426  ## converged head(fit_germany_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State        prob ## 1              BA.2                19266 Baden-Wurttemberg 0.002601297 ## 2           BA.2.75                19266 Baden-Wurttemberg 0.005163667 ## 3              BA.4                19266 Baden-Wurttemberg 0.020006655 ## 4              BA.5                19266 Baden-Wurttemberg 0.636555646 ## 5             BQ.1+                19266 Baden-Wurttemberg 0.040556800 ## 6            Others                19266 Baden-Wurttemberg 0.295046005 ##             SE df   asymp.LCL   asymp.UCL DateCollected ## 1 0.0003983313 NA 0.001820582 0.003382012    2022-10-01 ## 2 0.0007667258 NA 0.003660912 0.006666422    2022-10-01 ## 3 0.0017191185 NA 0.016637245 0.023376066    2022-10-01 ## 4 0.0052077840 NA 0.626348577 0.646762715    2022-10-01 ## 5 0.0012556760 NA 0.038095721 0.043017880    2022-10-01 ## 6 0.0046662226 NA 0.285900377 0.304191633    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling-Germany.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Germany","text":"","code":"muller_germanybystate_mfit <- PlotMullerDailyPrevalence(fit_germany_multi_predsbystate, ncol = 3) muller_germanybystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Australia","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_australia, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Australia\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Australia","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_australia_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_australia,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_australia_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_australia_shared_dateweek <- SummarizeVariantsDatewise(gisaid_australia_collapsed_sel, by_state = TRUE) head(gisaid_australia_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State                        DateCollectedNumeric lineage_collapsed     n ##   <chr>                                       <dbl> <chr>             <int> ## 1 Australian Capital Territory                19266 BA.4                  1 ## 2 Australian Capital Territory                19266 BA.5                  1 ## 3 Australian Capital Territory                19268 BA.2.75               5 ## 4 Australian Capital Territory                19268 BA.4                  3 ## 5 Australian Capital Territory                19268 BA.5                 53 ## 6 Australian Capital Territory                19268 BQ.1+                 1 fit_australia_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_australia_shared_dateweek) ## # weights:  77 (60 variable) ## initial  value 119177.267079  ## iter  10 value 65953.686596 ## iter  20 value 65083.498606 ## iter  30 value 61726.726827 ## iter  40 value 60429.196079 ## iter  50 value 59810.603836 ## iter  60 value 59411.558639 ## iter  70 value 59402.583861 ## iter  80 value 59402.476370 ## final  value 59402.468885  ## converged head(fit_australia_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric                        State ## 1              BA.2                19266 Australian Capital Territory ## 2           BA.2.75                19266 Australian Capital Territory ## 3              BA.4                19266 Australian Capital Territory ## 4              BA.5                19266 Australian Capital Territory ## 5             BQ.1+                19266 Australian Capital Territory ## 6            Others                19266 Australian Capital Territory ##          prob          SE df   asymp.LCL  asymp.UCL DateCollected ## 1 0.009836683 0.003108838 NA 0.003743472 0.01592989    2022-10-01 ## 2 0.033694649 0.007090842 NA 0.019796855 0.04759244    2022-10-01 ## 3 0.058073743 0.010561868 NA 0.037372862 0.07877462    2022-10-01 ## 4 0.680458407 0.016791280 NA 0.647548103 0.71336871    2022-10-01 ## 5 0.036530823 0.003179499 NA 0.030299119 0.04276253    2022-10-01 ## 6 0.179323749 0.010377443 NA 0.158984336 0.19966316    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Australia.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Australia","text":"","code":"muller_australiabystate_mfit <- PlotMullerDailyPrevalence(fit_australia_multi_predsbystate, ncol = 3) muller_australiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Canada","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_canada, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Canada\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Canada","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_canada_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_canada,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed %>% filter(MonthYearCollected >= \"Oct 2022\")  vocs_to_keep <- table(gisaid_canada_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_canada_shared_dateweek <- SummarizeVariantsDatewise(gisaid_canada_collapsed_sel, by_state = TRUE) head(gisaid_canada_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alberta                19266 BA.4                  2 ## 2 Alberta                19266 BA.5                 50 ## 3 Alberta                19266 BQ.1+                 6 ## 4 Alberta                19266 Others               16 ## 5 Alberta                19267 BA.2.75               3 ## 6 Alberta                19267 BA.4                  4 fit_canada_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_canada_shared_dateweek) ## # weights:  91 (72 variable) ## initial  value 218101.501326  ## iter  10 value 126719.258754 ## iter  20 value 125272.901263 ## iter  30 value 116542.636863 ## iter  40 value 112910.522701 ## iter  50 value 109526.174874 ## iter  60 value 107658.390309 ## iter  70 value 106905.873697 ## iter  80 value 106675.241112 ## iter  90 value 106656.454951 ## iter 100 value 106651.665436 ## iter 110 value 106647.343900 ## iter 120 value 106640.161023 ## iter 130 value 106637.832759 ## iter 140 value 106631.621697 ## iter 150 value 106624.917019 ## iter 160 value 106623.206784 ## iter 170 value 106621.631630 ## iter 180 value 106620.109919 ## iter 190 value 106619.096230 ## iter 200 value 106618.072398 ## iter 210 value 106613.808569 ## final  value 106603.566936  ## converged head(fit_canada_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State        prob           SE df ## 1              BA.2                19266 Alberta 0.004867969 0.0009928986 NA ## 2           BA.2.75                19266 Alberta 0.004868270 0.0010734846 NA ## 3              BA.4                19266 Alberta 0.055625373 0.0043523587 NA ## 4              BA.5                19266 Alberta 0.726459490 0.0070378120 NA ## 5             BQ.1+                19266 Alberta 0.064825855 0.0022105699 NA ## 6            Others                19266 Alberta 0.143168408 0.0045529138 NA ##     asymp.LCL   asymp.UCL DateCollected ## 1 0.002921924 0.006814014    2022-10-01 ## 2 0.002764279 0.006972262    2022-10-01 ## 3 0.047094907 0.064155839    2022-10-01 ## 4 0.712665632 0.740253348    2022-10-01 ## 5 0.060493217 0.069158492    2022-10-01 ## 6 0.134244861 0.152091955    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_Canada.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Canada","text":"","code":"muller_canadabystate_mfit <- PlotMullerDailyPrevalence(fit_canada_multi_predsbystate, ncol = 3) muller_canadabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - India","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - India","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State == \"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Total sequences deposited\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - India","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed_sel <- gisaid_india_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") vocs_to_keep <- table(gisaid_india_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_india_collapsed_sel <- gisaid_india_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_india_shared_dateweek <- SummarizeVariantsDatewise(gisaid_india_collapsed_sel, by_state = TRUE) head(gisaid_india_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Andhra Pradesh                   19448 XBB                   1 ## 2 Andhra Pradesh                   19506 XBB                   1 ## 3 Arunachal Pradesh                19361 XBB                   1 ## 4 Arunachal Pradesh                19459 XBB                   1 ## 5 Arunachal Pradesh                19556 XBB                   1 ## 6 Assam                            19272 XBB                   1 fit_india_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_india_shared_dateweek) ## # weights:  204 (165 variable) ## initial  value 31594.094721  ## iter  10 value 10512.518998 ## iter  20 value 9571.672712 ## iter  30 value 9287.075019 ## iter  40 value 9237.548901 ## iter  50 value 9214.562838 ## iter  60 value 9204.176098 ## iter  70 value 9196.385367 ## iter  80 value 9194.493584 ## iter  90 value 9194.287699 ## iter 100 value 9194.194881 ## final  value 9194.192955  ## converged head(fit_india_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric          State         prob ## 1              BA.2                19266 Andhra Pradesh 1.899443e-06 ## 2           BA.2.75                19266 Andhra Pradesh 1.270327e-06 ## 3            BA.2.X                19266 Andhra Pradesh 7.321141e-11 ## 4             BQ.1+                19266 Andhra Pradesh 1.401261e-11 ## 5            Others                19266 Andhra Pradesh 2.143416e-05 ## 6               XBB                19266 Andhra Pradesh 9.999754e-01 ##             SE df     asymp.LCL    asymp.UCL DateCollected ## 1 2.346574e-06 NA -2.699757e-06 6.498644e-06    2022-10-01 ## 2 1.559076e-06 NA -1.785406e-06 4.326061e-06    2022-10-01 ## 3 9.217976e-11 NA -1.074576e-10 2.538804e-10    2022-10-01 ## 4 1.774021e-11 NA -2.075756e-11 4.878279e-11    2022-10-01 ## 5 5.208942e-05 NA -8.065923e-05 1.235275e-04    2022-10-01 ## 6 5.594132e-05 NA  9.998658e-01 1.000085e+00    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_India.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - India","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_southafrica, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_southafrica) state_seq_stats_summary <- state_seq_stats %>%   group_by(State) %>%   summarise(value = sum(value)) p1 <- BarPlot(state_seq_stats_summary, xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - South Africa","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State != \"Unknown\")  vocs_to_keep <- table(gisaid_southafrica_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 50]  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_southafrica_shared_dateweek <- SummarizeVariantsDatewise(gisaid_southafrica_collapsed_sel, by_state = TRUE) head(gisaid_southafrica_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State        DateCollectedNumeric lineage_collapsed     n ##   <chr>                       <dbl> <chr>             <int> ## 1 Eastern Cape                19299 Others                1 ## 2 Eastern Cape                19300 BA.5                  1 ## 3 Eastern Cape                19317 BA.5                  1 ## 4 Eastern Cape                19340 BQ.1+                 1 ## 5 Eastern Cape                19355 BQ.1+                 1 ## 6 Eastern Cape                19363 XBB                   1 fit_southafrica_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_southafrica_shared_dateweek) ## # weights:  60 (44 variable) ## initial  value 9506.949749  ## iter  10 value 6322.817947 ## iter  20 value 5389.662114 ## iter  30 value 5114.691902 ## iter  40 value 5088.023548 ## iter  50 value 5086.573805 ## iter  60 value 5086.343038 ## iter  70 value 5086.214428 ## final  value 5086.207536  ## converged head(fit_southafrica_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric        State         prob           SE ## 1              BA.4                19266 Eastern Cape 3.831584e-06 1.081718e-06 ## 2              BA.5                19266 Eastern Cape 6.448461e-01 5.656057e-02 ## 3             BQ.1+                19266 Eastern Cape 4.581027e-03 1.259708e-03 ## 4            Others                19266 Eastern Cape 3.505312e-01 5.617365e-02 ## 5               XBB                19266 Eastern Cape 3.789218e-05 1.688991e-05 ## 6              BA.4                19273 Eastern Cape 3.202348e-06 8.418453e-07 ##   df    asymp.LCL    asymp.UCL DateCollected ## 1 NA 1.711456e-06 5.951713e-06    2022-10-01 ## 2 NA 5.339894e-01 7.557027e-01    2022-10-01 ## 3 NA 2.112044e-03 7.050010e-03    2022-10-01 ## 4 NA 2.404329e-01 4.606295e-01    2022-10-01 ## 5 NA 4.788571e-06 7.099579e-05    2022-10-01 ## 6 NA 1.552362e-06 4.852335e-06    2022-10-08"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_SouthAfrica.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - South Africa","text":"","code":"muller_southafricabystate_mfit <- PlotMullerDailyPrevalence(fit_southafrica_multi_predsbystate, ncol = 3) muller_southafricabystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - United Kingdom","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_uk, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"United Kingdom\") p0"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - United Kingdom","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_uk_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed %>%   filter(MonthYearCollected >= \"Oct 2022\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_uk_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_uk_shared_dateweek <- SummarizeVariantsDatewise(gisaid_uk_collapsed_sel, by_state = TRUE) head(gisaid_uk_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 England                19266 BA.2                  1 ## 2 England                19266 BA.2.75              13 ## 3 England                19266 BA.4                 16 ## 4 England                19266 BA.5                234 ## 5 England                19266 BQ.1+                44 ## 6 England                19266 Others              114 fit_uk_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_uk_shared_dateweek) ## # weights:  49 (36 variable) ## initial  value 275933.950956  ## iter  10 value 162093.008554 ## iter  20 value 160069.141223 ## iter  30 value 152423.510611 ## iter  40 value 148052.077342 ## iter  50 value 147675.318441 ## iter  60 value 147665.371533 ## iter  70 value 147657.576715 ## final  value 147657.532391  ## converged head(fit_uk_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State        prob           SE df ## 1              BA.2                19266 England 0.003009221 0.0004108273 NA ## 2           BA.2.75                19266 England 0.023481544 0.0015023873 NA ## 3              BA.4                19266 England 0.055472954 0.0021455290 NA ## 4              BA.5                19266 England 0.576976649 0.0042633048 NA ## 5             BQ.1+                19266 England 0.133084439 0.0022380063 NA ## 6            Others                19266 England 0.206838925 0.0029546856 NA ##     asymp.LCL   asymp.UCL DateCollected ## 1 0.002204014 0.003814428    2022-10-01 ## 2 0.020536919 0.026426169    2022-10-01 ## 3 0.051267794 0.059678113    2022-10-01 ## 4 0.568620725 0.585332573    2022-10-01 ## 5 0.128698027 0.137470851    2022-10-01 ## 6 0.201047848 0.212630003    2022-10-01"},{"path":"http://saket-choudhary.me/covmuller/articles/MultinomialModeling_UK.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - United Kingdom","text":"","code":"muller_ukbystate_mfit <- PlotMullerDailyPrevalence(fit_uk_multi_predsbystate, ncol = 3) muller_ukbystate_mfit"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-monthly-cases-for-aizawl","dir":"Articles","previous_headings":"","what":"Get monthly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Aizawl\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State   District value ##   <yearmon> <chr>   <chr>    <dbl> ## 1 Apr 2020  Mizoram Aizawl       1 ## 2 May 2020  Mizoram Aizawl       0 ## 3 Jun 2020  Mizoram Aizawl      46 ## 4 Jul 2020  Mizoram Aizawl     190 ## 5 Aug 2020  Mizoram Aizawl     362 ## 6 Sep 2020  Mizoram Aizawl     770"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"plot-monthly-cases-for-aizawl","dir":"Articles","previous_headings":"Get monthly cases for Aizawl","what":"Plot monthly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Aizawl (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"get-weekly-cases-for-aizawl","dir":"Articles","previous_headings":"","what":"Get weekly cases for Aizawl","title":"Animation of projected weekly cases - Aizawl (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Aizawl\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Aizawl (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"overall-how-much-has-aizawl-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Aizawl","what":"Overall, how much has Aizawl sequenced over months?","title":"Animation of projected weekly cases - Aizawl (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Aizawl (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Aizawl.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Aizawl (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Aizawl\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Aizawl\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  24 (15 variable) ## initial  value 7401.758367  ## iter  10 value 292.989943 ## iter  20 value 210.831791 ## iter  30 value 200.305840 ## iter  40 value 199.332956 ## iter  50 value 188.526630 ## iter  60 value 178.595673 ## iter  70 value 177.235575 ## iter  80 value 176.008579 ## iter  90 value 175.379064 ## iter 100 value 175.234862 ## iter 110 value 174.921986 ## iter 120 value 171.094521 ## iter 130 value 170.363744 ## iter 140 value 169.881362 ## iter 150 value 169.500928 ## iter 160 value 169.427967 ## iter 170 value 169.174564 ## iter 180 value 168.252549 ## iter 190 value 167.901858 ## iter 200 value 167.637566 ## iter 210 value 167.524903 ## iter 220 value 167.435990 ## iter 230 value 167.387177 ## iter 240 value 167.176417 ## iter 250 value 166.981283 ## iter 260 value 166.944919 ## iter 270 value 166.919141 ## iter 280 value 166.897910 ## iter 290 value 166.895811 ## iter 300 value 166.865471 ## iter 310 value 166.797565 ## iter 320 value 166.758234 ## iter 330 value 166.704244 ## iter 340 value 166.694112 ## iter 350 value 166.691709 ## iter 360 value 166.677094 ## iter 370 value 166.614894 ## iter 380 value 166.527662 ## iter 390 value 166.503895 ## iter 400 value 166.498572 ## iter 410 value 166.497680 ## iter 420 value 166.485423 ## iter 430 value 166.470229 ## iter 440 value 166.456612 ## iter 450 value 166.444200 ## iter 460 value 166.431648 ## iter 470 value 166.428747 ## iter 480 value 166.417023 ## iter 490 value 166.406138 ## iter 500 value 166.395968 ## iter 510 value 166.388494 ## iter 520 value 166.379239 ## final  value 166.373706  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Aizawl\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Aizawl\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 1515.828511  ## iter  10 value 150.168140 ## iter  20 value 143.520069 ## iter  30 value 142.458310 ## iter  40 value 142.217979 ## iter  50 value 141.356997 ## iter  60 value 140.857909 ## iter  70 value 140.712408 ## iter  80 value 140.573719 ## iter  90 value 140.419909 ## iter 100 value 140.223422 ## iter 110 value 140.183794 ## iter 120 value 140.111011 ## iter 130 value 139.945280 ## iter 140 value 139.845886 ## iter 150 value 139.822344 ## iter 160 value 139.752156 ## iter 170 value 139.734355 ## iter 180 value 139.699133 ## iter 190 value 138.854912 ## iter 200 value 138.751949 ## iter 210 value 138.727486 ## iter 220 value 138.721415 ## iter 230 value 138.720407 ## iter 240 value 138.716888 ## iter 250 value 138.710476 ## iter 260 value 138.706882 ## iter 270 value 138.704170 ## iter 280 value 138.700802 ## iter 290 value 138.699633 ## iter 300 value 138.698282 ## iter 310 value 138.689361 ## iter 320 value 138.682151 ## iter 330 value 138.680449 ## iter 340 value 138.678313 ## iter 350 value 138.677415 ## iter 360 value 138.675804 ## iter 370 value 138.664904 ## iter 380 value 138.573600 ## iter 390 value 138.543126 ## iter 400 value 138.538657 ## final  value 138.538120  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Aizawl\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Aizawl\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 1515.828511  ## iter  10 value 150.168140 ## iter  20 value 143.520069 ## iter  30 value 142.458310 ## iter  40 value 142.217979 ## iter  50 value 141.356997 ## iter  60 value 140.857909 ## iter  70 value 140.712408 ## iter  80 value 140.573719 ## iter  90 value 140.419909 ## iter 100 value 140.223422 ## iter 110 value 140.183794 ## iter 120 value 140.111011 ## iter 130 value 139.945280 ## iter 140 value 139.845886 ## iter 150 value 139.822344 ## iter 160 value 139.752156 ## iter 170 value 139.734355 ## iter 180 value 139.699133 ## iter 190 value 138.854912 ## iter 200 value 138.751949 ## iter 210 value 138.727486 ## iter 220 value 138.721415 ## iter 230 value 138.720407 ## iter 240 value 138.716888 ## iter 250 value 138.710476 ## iter 260 value 138.706882 ## iter 270 value 138.704170 ## iter 280 value 138.700802 ## iter 290 value 138.699633 ## iter 300 value 138.698282 ## iter 310 value 138.689361 ## iter 320 value 138.682151 ## iter 330 value 138.680449 ## iter 340 value 138.678313 ## iter 350 value 138.677415 ## iter 360 value 138.675804 ## iter 370 value 138.664904 ## iter 380 value 138.573600 ## iter 390 value 138.543126 ## iter 400 value 138.538657 ## final  value 138.538120  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Aizawl (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Aizawl_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) head(Bengaluru_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [3] ##   MonthYear State     District        value ##   <yearmon> <chr>     <chr>           <dbl> ## 1 Apr 2020  Karnataka Bengaluru Rural     6 ## 2 Apr 2020  Karnataka Bengaluru Urban   141 ## 3 May 2020  Karnataka Bengaluru Rural     9 ## 4 May 2020  Karnataka Bengaluru Urban   218 ## 5 Jun 2020  Karnataka Bengaluru Rural   114 ## 6 Jun 2020  Karnataka Bengaluru Urban  4196"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"plot-monthly-cases-for-bengaluru","dir":"Articles","previous_headings":"Get monthly cases for Bengaluru","what":"Plot monthly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"p1 <- BarPlot(Bengaluru_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Bengaluru (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"get-weekly-cases-for-bengaluru","dir":"Articles","previous_headings":"","what":"Get weekly cases for Bengaluru","title":"Animation of projected weekly cases - Bengaluru (India)","text":"","code":"Bengaluru_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Bengaluru\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Bengaluru_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"overall-how-much-has-bengaluru-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Bengaluru","what":"Overall, how much has Bengaluru sequenced over months?","title":"Animation of projected weekly cases - Bengaluru (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases %>% select(MonthYear, value) Bengaluru_monthly_cases_tmp$State <- \"India\" Bengaluru_monthly_cases_tmp$type <- \"Confirmed\"  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>%   group_by(MonthYear, State, type) %>%   summarise(value = sum(value))  Bengaluru_monthly_cases_tmp <- Bengaluru_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Bengaluru_seq_stats,   confirmed_long = Bengaluru_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Bengaluru (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Bengaluru.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Bengaluru (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Bengaluru\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 27280.854519  ## iter  10 value 10943.356566 ## iter  20 value 6732.556367 ## iter  30 value 5849.327607 ## iter  40 value 5486.909635 ## iter  50 value 5392.392537 ## iter  60 value 4950.132734 ## iter  70 value 4836.860088 ## iter  80 value 4757.121512 ## iter  90 value 4711.983310 ## iter 100 value 4695.928136 ## iter 110 value 4674.487899 ## iter 120 value 4669.831819 ## iter 130 value 4663.263169 ## iter 140 value 4661.383700 ## iter 150 value 4659.573020 ## iter 160 value 4654.812909 ## iter 170 value 4650.017519 ## iter 180 value 4639.711148 ## iter 190 value 4625.486272 ## iter 200 value 4623.656653 ## iter 210 value 4621.989080 ## iter 220 value 4619.156734 ## iter 230 value 4616.873762 ## iter 240 value 4614.720034 ## final  value 4614.526314  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 13260.587551  ## iter  10 value 4168.816510 ## iter  20 value 3578.879538 ## iter  30 value 3483.965005 ## iter  40 value 3443.058903 ## iter  50 value 3432.115866 ## iter  60 value 3427.345894 ## iter  70 value 3425.473083 ## iter  80 value 3423.103269 ## iter  90 value 3421.520566 ## iter 100 value 3420.504508 ## iter 110 value 3415.984748 ## iter 120 value 3415.902331 ## iter 130 value 3415.847055 ## iter 140 value 3415.821172 ## iter 150 value 3415.760000 ## iter 160 value 3415.632521 ## iter 170 value 3415.508805 ## iter 180 value 3415.486018 ## iter 190 value 3415.442249 ## iter 200 value 3415.387351 ## iter 210 value 3415.340753 ## iter 220 value 3415.307067 ## final  value 3415.306546  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Bengaluru Urban\", \"Bengaluru Rural\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Bengaluru\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 13260.587551  ## iter  10 value 4168.816510 ## iter  20 value 3578.879538 ## iter  30 value 3483.965005 ## iter  40 value 3443.058903 ## iter  50 value 3432.115866 ## iter  60 value 3427.345894 ## iter  70 value 3425.473083 ## iter  80 value 3423.103269 ## iter  90 value 3421.520566 ## iter 100 value 3420.504508 ## iter 110 value 3415.984748 ## iter 120 value 3415.902331 ## iter 130 value 3415.847055 ## iter 140 value 3415.821172 ## iter 150 value 3415.760000 ## iter 160 value 3415.632521 ## iter 170 value 3415.508805 ## iter 180 value 3415.486018 ## iter 190 value 3415.442249 ## iter 200 value 3415.387351 ## iter 210 value 3415.340753 ## iter 220 value 3415.307067 ## final  value 3415.306546  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Bengaluru (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Bengaluru_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"] gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- \"Unknown\"   gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"state-of-origin-of-ba4ba-5-sequences","dir":"Articles","previous_headings":"","what":"State of origin of BA/4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>%   filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>%   pull(State) %>%   table() %>%   as.data.frame() %>%   arrange(desc(Freq)) %>%   DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"city-of-origin-of-ba-4ba-5-sequences","dir":"Articles","previous_headings":"","what":"City of origin of BA.4/BA.5 sequences?","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"gisaid_india %>%   filter(pangolin_lineage %in% c(\"BA.4\", \"BA.5\")) %>%   pull(custom_city) %>%   table() %>%   as.data.frame() %>%   arrange(desc(Freq)) %>%   DT::datatable()"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-monthly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Chennai\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State      District value ##   <yearmon> <chr>      <chr>    <dbl> ## 1 Apr 2020  Tamil Nadu Chennai    910 ## 2 May 2020  Tamil Nadu Chennai  13889 ## 3 Jun 2020  Tamil Nadu Chennai  43528 ## 4 Jul 2020  Tamil Nadu Chennai  41467 ## 5 Aug 2020  Tamil Nadu Chennai  35803 ## 6 Sep 2020  Tamil Nadu Chennai  31779"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"plot-monthly-cases-for-chennai","dir":"Articles","previous_headings":"Get monthly cases for Chennai","what":"Plot monthly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Chennai (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"get-weekly-cases-for-chennai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Chennai","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Chennai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"overall-how-much-has-chennai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Chennai","what":"Overall, how much has Chennai sequenced over months?","title":"Animation of projected weekly cases - Chennai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Chennai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Chennai (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"Chennai\")) state_month_counts$State <- \"Chennai\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Chennai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Chennai (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Chennai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Chennai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  48 (33 variable) ## initial  value 15605.213761  ## iter  10 value 9674.960617 ## iter  20 value 6850.746905 ## iter  30 value 6245.588102 ## iter  40 value 5954.588230 ## iter  50 value 5839.216185 ## iter  60 value 5690.553044 ## iter  70 value 5618.798739 ## iter  80 value 5612.722675 ## iter  90 value 5606.646545 ## iter 100 value 5602.028166 ## iter 110 value 5599.669837 ## iter 120 value 5573.548444 ## iter 130 value 5572.932200 ## iter 140 value 5567.942608 ## iter 150 value 5566.965922 ## iter 160 value 5565.638991 ## iter 170 value 5565.228595 ## iter 180 value 5561.986286 ## iter 190 value 5560.180682 ## iter 200 value 5555.652711 ## iter 210 value 5549.951691 ## iter 220 value 5549.408855 ## iter 230 value 5549.027884 ## iter 240 value 5548.582102 ## iter 250 value 5547.640859 ## iter 260 value 5546.603737 ## iter 270 value 5546.338616 ## iter 280 value 5546.291094 ## iter 290 value 5546.217996 ## iter 300 value 5546.161355 ## iter 310 value 5545.992630 ## iter 320 value 5545.550019 ## iter 330 value 5545.338121 ## iter 340 value 5545.302136 ## iter 350 value 5545.294806 ## iter 360 value 5545.265288 ## iter 370 value 5545.050935 ## iter 380 value 5544.854174 ## iter 390 value 5544.798049 ## iter 400 value 5543.080926 ## iter 410 value 5542.625919 ## iter 420 value 5541.913131 ## iter 430 value 5540.875204 ## iter 440 value 5540.461862 ## iter 450 value 5540.451022 ## iter 460 value 5540.416035 ## iter 470 value 5540.202242 ## iter 470 value 5540.202232 ## final  value 5540.202232  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Chennai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 9646.732682  ## iter  10 value 4428.738894 ## iter  20 value 3756.644187 ## iter  30 value 3498.778718 ## iter  40 value 3450.408633 ## iter  50 value 3439.340275 ## iter  60 value 3431.184584 ## iter  70 value 3429.834470 ## iter  80 value 3429.337112 ## iter  90 value 3428.423412 ## iter 100 value 3427.213395 ## iter 110 value 3424.482247 ## iter 120 value 3424.398404 ## iter 130 value 3424.304396 ## iter 140 value 3424.280764 ## iter 150 value 3424.219817 ## iter 160 value 3424.170377 ## iter 170 value 3424.062115 ## iter 180 value 3423.941513 ## final  value 3423.926000  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Chennai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Chennai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 9646.732682  ## iter  10 value 4428.738894 ## iter  20 value 3756.644187 ## iter  30 value 3498.778718 ## iter  40 value 3450.408633 ## iter  50 value 3439.340275 ## iter  60 value 3431.184584 ## iter  70 value 3429.834470 ## iter  80 value 3429.337112 ## iter  90 value 3428.423412 ## iter 100 value 3427.213395 ## iter 110 value 3424.482247 ## iter 120 value 3424.398404 ## iter 130 value 3424.304396 ## iter 140 value 3424.280764 ## iter 150 value 3424.219817 ## iter 160 value 3424.170377 ## iter 170 value 3424.062115 ## iter 180 value 3423.941513 ## final  value 3423.926000  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Chennai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Chennai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-monthly-cases-for-delhi","dir":"Articles","previous_headings":"","what":"Get monthly cases for Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Delhi\") head(NewDelhi_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State District  value ##   <yearmon> <chr> <chr>     <dbl> ## 1 Apr 2020  Delhi Delhi      3515 ## 2 May 2020  Delhi Delhi     16329 ## 3 Jun 2020  Delhi Delhi     67516 ## 4 Jul 2020  Delhi Delhi     48238 ## 5 Aug 2020  Delhi Delhi     39150 ## 6 Sep 2020  Delhi Delhi    104967"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"plot-monthly-cases-for-new-delhi","dir":"Articles","previous_headings":"Get monthly cases for Delhi","what":"Plot monthly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"p1 <- BarPlot(NewDelhi_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - New Delhi (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"get-weekly-cases-for-new-delhi","dir":"Articles","previous_headings":"","what":"Get weekly cases for New Delhi","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"NewDelhi_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"New Delhi\"), rename_country_as_state = TRUE)   p2 <- BarPlot(NewDelhi_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"overall-how-much-has-new-delhi-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for New Delhi","what":"Overall, how much has New Delhi sequenced over months?","title":"Animation of projected weekly cases - New Delhi (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases %>% select(MonthYear, value) NewDelhi_monthly_cases_cases_tmp$State <- \"India\" NewDelhi_monthly_cases_cases_tmp$type <- \"Confirmed\"  NewDelhi_monthly_cases_cases_tmp <- NewDelhi_monthly_cases_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = NewDelhi_seq_stats,   confirmed_long = NewDelhi_monthly_cases_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from New Delhi (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New Delhi (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"New Delhi\")) state_month_counts$State <- \"New Delhi\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Delhi.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New Delhi (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"New Delhi\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Delhi\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  32 (21 variable) ## initial  value 4300.285108  ## iter  10 value 1564.317997 ## iter  20 value 1124.979688 ## iter  30 value 1035.980910 ## iter  40 value 979.701437 ## iter  50 value 963.142767 ## iter  60 value 916.855248 ## iter  70 value 912.276412 ## iter  80 value 889.839787 ## iter  90 value 886.387640 ## iter 100 value 885.182369 ## iter 110 value 874.875579 ## iter 120 value 873.070051 ## iter 130 value 833.963472 ## iter 140 value 832.526013 ## iter 150 value 831.428973 ## iter 160 value 830.303174 ## iter 170 value 823.779871 ## iter 180 value 823.294433 ## iter 190 value 821.678347 ## iter 200 value 821.518408 ## iter 210 value 821.278771 ## iter 220 value 820.957752 ## iter 230 value 820.705928 ## iter 240 value 820.628207 ## iter 250 value 819.579787 ## iter 260 value 816.039631 ## iter 270 value 814.715874 ## iter 280 value 813.562845 ## iter 290 value 813.301427 ## iter 300 value 813.124713 ## iter 310 value 812.680612 ## iter 320 value 812.547276 ## iter 330 value 812.471215 ## iter 340 value 811.966015 ## final  value 811.769019  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Delhi\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 985.467708  ## iter  10 value 199.971166 ## iter  20 value 183.853282 ## iter  30 value 180.872712 ## iter  40 value 180.581724 ## iter  50 value 180.311628 ## iter  60 value 180.083003 ## iter  70 value 180.058311 ## iter  80 value 179.956154 ## iter  90 value 179.907080 ## iter 100 value 179.860655 ## iter 110 value 179.845009 ## iter 120 value 179.782631 ## iter 130 value 179.736796 ## iter 140 value 179.698324 ## iter 150 value 179.679914 ## iter 160 value 179.653606 ## iter 170 value 179.635907 ## iter 180 value 179.622035 ## iter 190 value 179.611207 ## iter 200 value 179.605919 ## iter 210 value 179.596766 ## iter 220 value 179.576246 ## iter 230 value 179.561501 ## iter 240 value 179.556422 ## iter 250 value 179.545600 ## iter 260 value 179.543325 ## iter 270 value 179.530030 ## iter 280 value 179.299482 ## iter 290 value 179.257436 ## iter 300 value 179.223205 ## iter 310 value 179.196255 ## final  value 179.195944  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Delhi\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"New Delhi\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  24 (15 variable) ## initial  value 985.467708  ## iter  10 value 199.971166 ## iter  20 value 183.853282 ## iter  30 value 180.872712 ## iter  40 value 180.581724 ## iter  50 value 180.311628 ## iter  60 value 180.083003 ## iter  70 value 180.058311 ## iter  80 value 179.956154 ## iter  90 value 179.907080 ## iter 100 value 179.860655 ## iter 110 value 179.845009 ## iter 120 value 179.782631 ## iter 130 value 179.736796 ## iter 140 value 179.698324 ## iter 150 value 179.679914 ## iter 160 value 179.653606 ## iter 170 value 179.635907 ## iter 180 value 179.622035 ## iter 190 value 179.611207 ## iter 200 value 179.605919 ## iter 210 value 179.596766 ## iter 220 value 179.576246 ## iter 230 value 179.561501 ## iter 240 value 179.556422 ## iter 250 value 179.545600 ## iter 260 value 179.543325 ## iter 270 value 179.530030 ## iter 280 value 179.299482 ## iter 290 value 179.257436 ## iter 300 value 179.223205 ## iter 310 value 179.196255 ## final  value 179.195944  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New Delhi (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NewDelhi_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-variants-data-for-germany","dir":"Articles","previous_headings":"","what":"Get variants data for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_germany <- gisaid_metadata %>%   filter(Country == \"Germany\") %>%   filter(Host == \"Human\") # format metadata gisaid_germany <- FormatGISAIDMetadata(gisaid_germany) %>%   filter(State != \"\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_germany <- gisaid_germany %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_germany <- gisaid_germany %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_germany <- CollapseLineageToVOCs(   variant_df = gisaid_germany,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Germany","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_germany) state_month_counts$State <- \"Germany\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"get-weekly-cases-for-germany","dir":"Articles","previous_headings":"","what":"Get weekly cases for Germany","title":"Animation of projected weekly cases - Germany","text":"","code":"confirmed.tmp <- COVID19::covid19(country = \"Germany\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"Germany\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Germany.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Germany","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  64 (45 variable) ## initial  value 2522260.004275  ## iter  10 value 1436497.861510 ## iter  20 value 1089098.174531 ## iter  30 value 978301.980706 ## iter  40 value 817326.978579 ## iter  50 value 625153.362467 ## iter  60 value 583226.732097 ## iter  70 value 573648.977861 ## iter  80 value 568157.412515 ## iter  90 value 567116.113869 ## iter 100 value 566852.201271 ## iter 110 value 566369.145383 ## iter 120 value 562950.242179 ## iter 130 value 558649.935931 ## iter 140 value 557739.108416 ## iter 150 value 557444.114933 ## iter 160 value 557252.785808 ## iter 170 value 557131.472796 ## iter 180 value 557101.593177 ## final  value 557100.077521  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_germany_subset <- gisaid_germany %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_germany_weekwise <- SummarizeVariantsWeekwise(gisaid_germany_subset)  voc_to_keep <- gisaid_germany_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_germany_weekwise <- gisaid_germany_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_germany_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 1354455.940631  ## iter  10 value 662680.403126 ## iter  20 value 558565.226111 ## iter  30 value 489689.744688 ## iter  40 value 439035.433691 ## iter  50 value 432453.080257 ## iter  60 value 429016.542427 ## iter  70 value 428176.400552 ## iter  80 value 426756.480538 ## iter  90 value 425365.644498 ## iter 100 value 425120.921574 ## iter 110 value 425032.815544 ## final  value 425032.781200  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Germany by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Germany_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-monthly-cases-for-gujarat","dir":"Articles","previous_headings":"","what":"Get monthly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"Gujarat_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Gujarat\") head(Gujarat_monthly_cases) ##   MonthYear   State value      type ## 1  Mar 2020 Gujarat    74 Confirmed ## 2  Apr 2020 Gujarat  4321 Confirmed ## 3  May 2020 Gujarat 12399 Confirmed ## 4  Jun 2020 Gujarat 15849 Confirmed ## 5  Jul 2020 Gujarat 28795 Confirmed ## 6  Aug 2020 Gujarat 34997 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"plot-monthly-cases-for-gujarat","dir":"Articles","previous_headings":"Get monthly cases for Gujarat","what":"Plot monthly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"p1 <- BarPlot(Gujarat_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Gujarat (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"get-weekly-cases-for-gujarat","dir":"Articles","previous_headings":"","what":"Get weekly cases for Gujarat","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"Gujarat_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Gujarat\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Gujarat_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Gujarat (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"overall-how-much-has-gujarat-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Gujarat","what":"Overall, how much has Gujarat sequenced over months?","title":"Animation of projected weekly cases - Gujarat (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Gujarat_monthly_cases_tmp <- Gujarat_monthly_cases %>% select(MonthYear, value) Gujarat_monthly_cases_tmp$State <- \"India\" Gujarat_monthly_cases_tmp$type <- \"Confirmed\"  Gujarat_monthly_cases_tmp <- Gujarat_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Gujarat_seq_stats,   confirmed_long = Gujarat_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Gujarat (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Gujarat (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Gujarat\")) state_month_counts$State <- \"Gujarat\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Gujarat.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Gujarat (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Gujarat\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Gujarat\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 38369.077438  ## iter  10 value 16842.130258 ## iter  20 value 12772.140298 ## iter  30 value 10204.480448 ## iter  40 value 8976.179532 ## iter  50 value 8842.393302 ## iter  60 value 8794.468832 ## iter  70 value 8765.978951 ## iter  80 value 8763.142916 ## iter  90 value 8762.169986 ## iter 100 value 8753.794415 ## iter 110 value 8727.778173 ## iter 120 value 8688.329368 ## iter 130 value 8661.759011 ## iter 140 value 8623.275915 ## iter 150 value 8620.339299 ## iter 160 value 8619.939989 ## iter 170 value 8617.327658 ## iter 180 value 8604.047281 ## iter 190 value 8589.655866 ## iter 200 value 8587.841475 ## iter 210 value 8582.248571 ## iter 220 value 8576.025186 ## iter 230 value 8575.969399 ## iter 240 value 8575.633675 ## iter 250 value 8574.859656 ## iter 260 value 8572.091121 ## iter 270 value 8568.606861 ## iter 280 value 8567.608132 ## iter 290 value 8560.426264 ## iter 300 value 8560.129968 ## iter 310 value 8560.067904 ## iter 320 value 8558.442642 ## iter 330 value 8556.583651 ## iter 340 value 8555.730425 ## iter 350 value 8554.853706 ## iter 360 value 8552.996507 ## iter 370 value 8552.848967 ## iter 380 value 8552.845939 ## iter 390 value 8552.798120 ## iter 400 value 8552.462710 ## iter 410 value 8551.781128 ## iter 420 value 8550.809085 ## iter 430 value 8550.363210 ## iter 440 value 8548.584864 ## final  value 8548.377897  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Gujarat\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Gujarat\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 21047.930335  ## iter  10 value 11764.344633 ## iter  20 value 7103.696724 ## iter  30 value 6593.769469 ## iter  40 value 6470.958084 ## iter  50 value 6425.893686 ## iter  60 value 6393.878098 ## iter  70 value 6355.850870 ## iter  80 value 6316.394321 ## iter  90 value 6281.778686 ## iter 100 value 6280.488699 ## iter 110 value 6280.337294 ## final  value 6280.334548  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Gujarat\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Gujarat\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 21047.930335  ## iter  10 value 11764.344633 ## iter  20 value 7103.696724 ## iter  30 value 6593.769469 ## iter  40 value 6470.958084 ## iter  50 value 6425.893686 ## iter  60 value 6393.878098 ## iter  70 value 6355.850870 ## iter  80 value 6316.394321 ## iter  90 value 6281.778686 ## iter 100 value 6280.488699 ## iter 110 value 6280.337294 ## final  value 6280.334548  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Gujarat (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Gujarat_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - India","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - India","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india) state_month_counts$State <- \"India\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases - India","text":"","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-India.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - India","text":"Look cases January, 2022 :  Look cases last months:  Look cases last months:","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  56 (39 variable) ## initial  value 639667.910839  ## iter  10 value 286660.285774 ## iter  20 value 254963.374271 ## iter  30 value 207745.370158 ## iter  40 value 154607.916528 ## iter  50 value 143284.786563 ## iter  60 value 142420.970463 ## iter  70 value 141459.745758 ## iter  80 value 140882.622941 ## iter  90 value 140865.461391 ## iter 100 value 140817.960279 ## iter 110 value 140192.259198 ## iter 120 value 140007.570251 ## iter 130 value 139861.265891 ## iter 140 value 139505.932767 ## iter 150 value 139467.829251 ## iter 160 value 139423.000853 ## iter 170 value 139421.979824 ## iter 180 value 139411.743165 ## iter 190 value 139400.592047 ## iter 200 value 139398.193397 ## iter 210 value 139393.385323 ## iter 220 value 139383.518022 ## iter 230 value 139380.280617 ## final  value 139373.032104  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") # , trans_y=\"log10\") gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 258747.287307  ## iter  10 value 93637.324026 ## iter  20 value 83549.833781 ## iter  30 value 78400.108191 ## iter  40 value 76547.952676 ## iter  50 value 75754.963373 ## iter  60 value 75460.459768 ## iter  70 value 75434.922124 ## iter  80 value 75369.250103 ## iter  90 value 75216.719762 ## iter 100 value 75205.233655 ## final  value 75205.062989  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") # , trans_y=\"log10\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Mar 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 141559.747430  ## iter  10 value 63586.767899 ## iter  20 value 54886.834211 ## iter  30 value 51613.072516 ## iter  40 value 49409.875929 ## iter  50 value 49203.005451 ## iter  60 value 49134.558093 ## iter  70 value 49129.637871 ## iter  80 value 49120.633370 ## iter  90 value 49100.932445 ## iter 100 value 49099.794259 ## final  value 49099.792381  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_2022.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W39\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_india <- gisaid_india %>% filter(MonthYearCollected >= \"Mar 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_india)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 10) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 141559.747430  ## iter  10 value 63586.767899 ## iter  20 value 54886.834211 ## iter  30 value 51613.072516 ## iter  40 value 49409.875929 ## iter  50 value 49203.005451 ## iter  60 value 49134.558093 ## iter  70 value 49129.637871 ## iter  80 value 49120.633370 ## iter  90 value 49100.932445 ## iter 100 value 49099.794259 ## final  value 49099.792381  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/IN_animated_latest.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Jaipur\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State     District value ##   <yearmon> <chr>     <chr>    <dbl> ## 1 Apr 2020  Rajasthan Jaipur     907 ## 2 May 2020  Rajasthan Jaipur    1084 ## 3 Jun 2020  Rajasthan Jaipur    1327 ## 4 Jul 2020  Rajasthan Jaipur    2100 ## 5 Aug 2020  Rajasthan Jaipur    5373 ## 6 Sep 2020  Rajasthan Jaipur   10697"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"plot-monthly-cases-for-jaipur","dir":"Articles","previous_headings":"Get monthly cases for Jaipur","what":"Plot monthly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Jaipur (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"get-weekly-cases-for-jaipur","dir":"Articles","previous_headings":"","what":"Get weekly cases for Jaipur","title":"Animation of projected weekly cases - Jaipur (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Jaipur\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"overall-how-much-has-jaipur-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Jaipur","what":"Overall, how much has Jaipur sequenced over months?","title":"Animation of projected weekly cases - Jaipur (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Jaipur (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Jaipur.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Jaipur (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Jaipur\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Jaipur\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  40 (27 variable) ## initial  value 11706.342613  ## iter  10 value 4663.668232 ## iter  20 value 3317.363185 ## iter  30 value 2951.120044 ## iter  40 value 2891.872896 ## iter  50 value 2882.816484 ## iter  60 value 2878.109049 ## iter  70 value 2873.726685 ## iter  80 value 2870.034981 ## iter  90 value 2858.965290 ## iter 100 value 2854.845785 ## iter 110 value 2853.626865 ## final  value 2853.347761  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Jaipur\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 8342.861720  ## iter  10 value 2224.539573 ## iter  20 value 1747.133524 ## iter  30 value 1726.313563 ## iter  40 value 1722.547903 ## iter  50 value 1721.530766 ## iter  60 value 1721.424279 ## iter  70 value 1721.040168 ## iter  80 value 1720.788705 ## iter  90 value 1719.901200 ## iter 100 value 1719.361977 ## iter 110 value 1719.357016 ## iter 120 value 1719.279589 ## iter 130 value 1719.239126 ## iter 140 value 1719.230841 ## iter 150 value 1719.220477 ## iter 160 value 1719.218623 ## iter 170 value 1719.216154 ## iter 180 value 1719.198385 ## iter 190 value 1719.045923 ## final  value 1719.018263  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Jaipur\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Jaipur\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 8342.861720  ## iter  10 value 2224.539573 ## iter  20 value 1747.133524 ## iter  30 value 1726.313563 ## iter  40 value 1722.547903 ## iter  50 value 1721.530766 ## iter  60 value 1721.424279 ## iter  70 value 1721.040168 ## iter  80 value 1720.788705 ## iter  90 value 1719.901200 ## iter 100 value 1719.361977 ## iter 110 value 1719.357016 ## iter 120 value 1719.279589 ## iter 130 value 1719.239126 ## iter 140 value 1719.230841 ## iter 150 value 1719.220477 ## iter 160 value 1719.218623 ## iter 170 value 1719.216154 ## iter 180 value 1719.198385 ## iter 190 value 1719.045923 ## final  value 1719.018263  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Jaipur (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Jaipur_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-monthly-cases-for-maharashtra","dir":"Articles","previous_headings":"","what":"Get monthly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"Maharashtra_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Maharashtra\") head(Maharashtra_monthly_cases) ##   MonthYear       State  value      type ## 1  Mar 2020 Maharashtra    302 Confirmed ## 2  Apr 2020 Maharashtra  10196 Confirmed ## 3  May 2020 Maharashtra  57157 Confirmed ## 4  Jun 2020 Maharashtra 107106 Confirmed ## 5  Jul 2020 Maharashtra 247357 Confirmed ## 6  Aug 2020 Maharashtra 370423 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"plot-monthly-cases-for-maharashtra","dir":"Articles","previous_headings":"Get monthly cases for Maharashtra","what":"Plot monthly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"p1 <- BarPlot(Maharashtra_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Maharashtra (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"get-weekly-cases-for-maharashtra","dir":"Articles","previous_headings":"","what":"Get weekly cases for Maharashtra","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"Maharashtra_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Maharashtra\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Maharashtra_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Maharashtra (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"overall-how-much-has-maharashtra-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Maharashtra","what":"Overall, how much has Maharashtra sequenced over months?","title":"Animation of projected weekly cases - Maharashtra (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Maharashtra_monthly_cases_tmp <- Maharashtra_monthly_cases %>% select(MonthYear, value) Maharashtra_monthly_cases_tmp$State <- \"India\" Maharashtra_monthly_cases_tmp$type <- \"Confirmed\"  Maharashtra_monthly_cases_tmp <- Maharashtra_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Maharashtra_seq_stats,   confirmed_long = Maharashtra_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Maharashtra (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Maharashtra (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Maharashtra\")) state_month_counts$State <- \"Maharashtra\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Maharashtra.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Maharashtra (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Maharashtra\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Maharashtra\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  56 (39 variable) ## initial  value 91638.626714  ## iter  10 value 42123.702479 ## iter  20 value 36666.206477 ## iter  30 value 28453.952197 ## iter  40 value 22204.209030 ## iter  50 value 21338.316995 ## iter  60 value 21215.815776 ## iter  70 value 20934.900147 ## iter  80 value 20794.879391 ## iter  90 value 20789.345813 ## iter 100 value 20722.340637 ## iter 110 value 20644.220517 ## iter 120 value 20513.865224 ## iter 130 value 20464.773178 ## iter 140 value 20431.859657 ## iter 150 value 20417.427195 ## iter 160 value 20392.936460 ## iter 170 value 20392.698570 ## iter 180 value 20390.268737 ## iter 190 value 20379.404262 ## iter 200 value 20375.847744 ## iter 210 value 20370.926780 ## iter 220 value 20359.720686 ## iter 230 value 20353.841845 ## iter 240 value 20328.078151 ## iter 250 value 20327.456258 ## iter 260 value 20325.607542 ## iter 270 value 20321.242332 ## iter 280 value 20320.849194 ## iter 290 value 20318.860189 ## iter 300 value 20316.216362 ## iter 310 value 20313.610709 ## iter 320 value 20312.758622 ## iter 330 value 20312.735626 ## iter 340 value 20312.647354 ## iter 350 value 20312.526952 ## iter 360 value 20312.178871 ## iter 370 value 20311.575184 ## iter 380 value 20310.918284 ## iter 390 value 20309.636135 ## iter 400 value 20308.087581 ## final  value 20307.031914  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Maharashtra\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Maharashtra\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 37395.176779  ## iter  10 value 16400.347934 ## iter  20 value 13788.643266 ## iter  30 value 12370.042976 ## iter  40 value 12000.336537 ## iter  50 value 11862.172769 ## iter  60 value 11810.633437 ## iter  70 value 11803.206337 ## iter  80 value 11798.346848 ## iter  90 value 11792.998607 ## iter 100 value 11786.684393 ## iter 110 value 11785.596836 ## iter 120 value 11785.200123 ## final  value 11785.167594  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Maharashtra\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Maharashtra\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 37395.176779  ## iter  10 value 16400.347934 ## iter  20 value 13788.643266 ## iter  30 value 12370.042976 ## iter  40 value 12000.336537 ## iter  50 value 11862.172769 ## iter  60 value 11810.633437 ## iter  70 value 11803.206337 ## iter  80 value 11798.346848 ## iter  90 value 11792.998607 ## iter 100 value 11786.684393 ## iter 110 value 11785.596836 ## iter 120 value 11785.200123 ## final  value 11785.167594  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Maharashtra (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Maharashtra_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Mumbai\") head(Mumbai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  Maharashtra Mumbai    7061 ## 2 May 2020  Maharashtra Mumbai   32625 ## 3 Jun 2020  Maharashtra Mumbai   37972 ## 4 Jul 2020  Maharashtra Mumbai   36626 ## 5 Aug 2020  Maharashtra Mumbai   32340 ## 6 Sep 2020  Maharashtra Mumbai   59463"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"plot-monthly-cases-for-mumbai","dir":"Articles","previous_headings":"Get monthly cases for Mumbai","what":"Plot monthly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"p1 <- BarPlot(Mumbai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Mumbai (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"get-weekly-cases-for-mumbai","dir":"Articles","previous_headings":"","what":"Get weekly cases for Mumbai","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"Mumbai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Mumbai\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Mumbai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"overall-how-much-has-mumbai-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Mumbai","what":"Overall, how much has Mumbai sequenced over months?","title":"Animation of projected weekly cases - Mumbai (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases %>% select(MonthYear, value) Mumbai_monthly_cases_tmp$State <- \"India\" Mumbai_monthly_cases_tmp$type <- \"Confirmed\"  Mumbai_monthly_cases_tmp <- Mumbai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Mumbai_seq_stats,   confirmed_long = Mumbai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Mumbai (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Mumbai (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(custom_city == \"Mumbai\")) state_month_counts$State <- \"Mumbai\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Mumbai.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Mumbai (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Mumbai\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Mumbai\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  44 (30 variable) ## initial  value 15574.329797  ## iter  10 value 7258.820379 ## iter  20 value 4861.424787 ## iter  30 value 4137.941288 ## iter  40 value 3975.632522 ## iter  50 value 3851.583417 ## iter  60 value 3825.106674 ## iter  70 value 3818.035736 ## iter  80 value 3802.018606 ## iter  90 value 3784.720861 ## iter 100 value 3779.460581 ## iter 110 value 3767.361321 ## iter 120 value 3750.618821 ## iter 130 value 3749.506454 ## iter 140 value 3744.733911 ## iter 150 value 3742.089444 ## iter 160 value 3739.697980 ## iter 170 value 3736.721519 ## iter 180 value 3731.436162 ## iter 190 value 3730.984599 ## iter 200 value 3730.447809 ## iter 210 value 3728.850281 ## iter 220 value 3727.527097 ## iter 230 value 3725.010786 ## iter 240 value 3724.071892 ## iter 250 value 3722.480544 ## iter 260 value 3721.019200 ## iter 270 value 3720.701352 ## iter 280 value 3719.403409 ## iter 290 value 3718.242133 ## iter 300 value 3717.545276 ## iter 310 value 3709.893281 ## iter 320 value 3709.692704 ## iter 330 value 3707.949975 ## iter 340 value 3707.098067 ## iter 350 value 3706.363025 ## iter 360 value 3706.244312 ## final  value 3706.013346  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Mumbai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 8236.346878  ## iter  10 value 3303.159519 ## iter  20 value 2781.646491 ## iter  30 value 2617.968528 ## iter  40 value 2590.074570 ## iter  50 value 2572.377922 ## iter  60 value 2567.018872 ## iter  70 value 2564.509959 ## iter  80 value 2563.655886 ## iter  90 value 2563.335876 ## iter 100 value 2562.700594 ## iter 110 value 2562.504722 ## iter 120 value 2562.358000 ## iter 130 value 2562.281925 ## iter 140 value 2562.185376 ## iter 150 value 2562.033974 ## iter 160 value 2561.989600 ## iter 170 value 2561.870337 ## iter 180 value 2561.827026 ## iter 190 value 2561.780858 ## iter 200 value 2561.685705 ## iter 210 value 2561.633529 ## iter 220 value 2561.579125 ## final  value 2561.578100  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Mumbai\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Mumbai\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 8236.346878  ## iter  10 value 3303.159519 ## iter  20 value 2781.646491 ## iter  30 value 2617.968528 ## iter  40 value 2590.074570 ## iter  50 value 2572.377922 ## iter  60 value 2567.018872 ## iter  70 value 2564.509959 ## iter  80 value 2563.655886 ## iter  90 value 2563.335876 ## iter 100 value 2562.700594 ## iter 110 value 2562.504722 ## iter 120 value 2562.358000 ## iter 130 value 2562.281925 ## iter 140 value 2562.185376 ## iter 150 value 2562.033974 ## iter 160 value 2561.989600 ## iter 170 value 2561.870337 ## iter 180 value 2561.827026 ## iter 190 value 2561.780858 ## iter 200 value 2561.685705 ## iter 210 value 2561.633529 ## iter 220 value 2561.579125 ## final  value 2561.578100  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Mumbai (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Mumbai_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York City","text":"","code":"counties <- c(\"New York\", \"New York City\", \"New York County\", \"Queens County\", \"Bronx County\", \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Queens\", \"Richmond County\")  gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")   gisaid_NYC <- gisaid_NY %>% filter(District %in% counties)  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB.*\",   `XBB.*` = \"XBB.*\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `XBB.1` = \"XBB.1.*\",   `XBB.1.*` = \"XBB.1.*\",   `XBB.1.5` = \"XBB.1.5\",   `XBB.1.16` = \"XBB.1.16\",   `XBB.1.16.*` = \"XBB.1.16\",   `EG.5.*` = \"EG.5\",   `FL.1.*` = \"FL.1.*\",   #`FL.1.5.*` = \"FL.1.5\",   #`FL.1.6.*` = \"FL.1.6\",   `GJ.1.2` = \"GJ.1.2\" )  gisaid_NYC <- gisaid_NYC %>% filter(pangolin_lineage != \"None\")  gisaid_NYC <- CollapseLineageToVOCs(   variant_df = gisaid_NYC,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York City","text":"","code":"confirmed <- read_csv(\"https://raw.githubusercontent.com/nychealth/coronavirus-data/master/trends/data-by-day.csv\") %>% select(date_of_interest, CASE_COUNT) colnames(confirmed) <- c(\"date\", \"daily_cases\") confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date, datefmt = \"%m/%d/%Y\")  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_NYC_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New York City","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_NYC) state_month_counts$State <- \"NYC\" state_month_prevalence <- CountsToPrevalence(state_month_counts)   state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NYC.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York City","text":"Look cases 2023:","code":"voc_to_keep <- gisaid_NYC_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NYC_weekwise <- gisaid_NYC_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NYC_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  72 (51 variable) ## initial  value 438056.072511  ## iter  10 value 186878.071849 ## iter  20 value 157432.187255 ## iter  30 value 140386.375434 ## iter  40 value 113509.580001 ## iter  50 value 96680.035953 ## iter  60 value 90571.319178 ## iter  70 value 89912.232509 ## iter  80 value 88999.546271 ## iter  90 value 87300.898220 ## iter 100 value 86092.073084 ## iter 110 value 85317.481353 ## iter 120 value 85244.812295 ## iter 130 value 85045.752607 ## iter 140 value 83119.581163 ## iter 150 value 81807.796282 ## iter 160 value 81729.416012 ## iter 170 value 81668.927678 ## iter 180 value 81624.621390 ## iter 190 value 81576.771274 ## iter 200 value 81547.752424 ## iter 210 value 81533.472151 ## iter 220 value 81531.939994 ## iter 230 value 81530.508594 ## iter 240 value 81526.525938 ## iter 250 value 81522.961448 ## iter 260 value 81518.499919 ## iter 270 value 81515.334787 ## iter 280 value 81510.825009 ## iter 290 value 81506.931996 ## iter 300 value 81504.744959 ## iter 310 value 81498.601093 ## iter 310 value 81498.601073 ## final  value 81498.601073  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and NYC Health**<br>\", date_breaks = \"14 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"April 2023\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NYC_subset <- gisaid_NYC %>% filter(MonthYearCollected > \"April 2023\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NYC_subset)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 4462.409910  ## iter  10 value 3593.334795 ## iter  20 value 3452.799101 ## iter  30 value 3441.141858 ## iter  40 value 3440.853203 ## iter  50 value 3440.745548 ## final  value 3440.739837  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York City by variant\", caption = \"**Source: gisaid.org and NYC Health**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NYC_animated_2023.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York State","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB.*\",   `XBB.*` = \"XBB.*\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `XBB.1` = \"XBB.1.*\",   `XBB.1.*` = \"XBB.1.*\",   `XBB.1.5` = \"XBB.1.5\",   `XBB.1.16` = \"XBB.1.16\",   `XBB.1.16.*` = \"XBB.1.16\",   `EG.5.*` = \"EG.5\",   `FL.1.*` = \"FL.1.*\",   #`FL.1.5.*` = \"FL.1.5\",   #`FL.1.6.*` = \"FL.1.6\",   `GJ.1.2` = \"GJ.1.2\" ) gisaid_NY <- gisaid_NY %>% filter(pangolin_lineage != \"None\")  gisaid_NY <- CollapseLineageToVOCs(   variant_df = gisaid_NY,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York State","text":"","code":"confirmed <- covid19(country = \"USA\", level = 2) %>%   filter(administrative_area_level_2 == \"New York\") %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) ## We have invested a lot of time and effort in creating COVID-19 Data ## Hub, please cite the following when using it: ##  ##   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open ##   Source Software 5(51):2376, doi: 10.21105/joss.02376 ##  ## The implementation details and the latest version of the data are ## described in: ##  ##   Guidotti, E., (2022), \"A worldwide epidemiological database for ##   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: ##   10.1038/s41597-022-01245-1 ## To print citations in BibTeX format use: ##  > print(citation('COVID19'), bibtex=TRUE) ##  ## To hide this message use 'verbose = FALSE'. confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - New York State","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_NY) state_month_counts$State <- \"New York\" state_month_prevalence <- CountsToPrevalence(state_month_counts) state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-NewYork.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York State","text":"Look cases february, 2022 :","code":"voc_to_keep <- gisaid_NY_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NY_weekwise <- gisaid_NY_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NY_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  76 (54 variable) ## initial  value 975807.688769  ## iter  10 value 447378.860774 ## iter  20 value 345307.834948 ## iter  30 value 315516.989623 ## iter  40 value 264026.346719 ## iter  50 value 221650.090001 ## iter  60 value 196016.074097 ## iter  70 value 188807.868613 ## iter  80 value 185476.460113 ## iter  90 value 182991.729253 ## iter 100 value 180192.840387 ## iter 110 value 178357.455437 ## iter 120 value 178272.326433 ## iter 130 value 178169.754245 ## iter 140 value 177489.102848 ## iter 150 value 176014.697941 ## iter 160 value 175756.282688 ## iter 170 value 175547.908321 ## iter 180 value 175448.196782 ## iter 190 value 175383.817649 ## iter 200 value 175319.664800 ## iter 210 value 175276.980773 ## final  value 175260.607151  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Feb 2022\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY <- gisaid_NY %>% filter(MonthYearCollected > \"Feb 2022\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 367384.359342  ## iter  10 value 119840.221672 ## iter  20 value 112401.782021 ## iter  30 value 97271.824043 ## iter  40 value 91262.274979 ## iter  50 value 90902.812556 ## iter  60 value 90768.939299 ## iter  70 value 90744.489554 ## iter  80 value 90653.028889 ## iter  90 value 90623.525870 ## iter 100 value 90618.052207 ## iter 110 value 90614.956926 ## final  value 90614.838557  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/NY_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-monthly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Pune\") head(pune_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District  value ##   <yearmon> <chr>       <chr>     <dbl> ## 1 Apr 2020  Maharashtra Pune       1248 ## 2 May 2020  Maharashtra Pune       6671 ## 3 Jun 2020  Maharashtra Pune      14408 ## 4 Jul 2020  Maharashtra Pune      66904 ## 5 Aug 2020  Maharashtra Pune      85874 ## 6 Sep 2020  Maharashtra Pune     117959"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"plot-monthly-cases-for-pune","dir":"Articles","previous_headings":"Get monthly cases for Pune","what":"Plot monthly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"p1 <- BarPlot(pune_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Pune (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"get-weekly-cases-for-pune","dir":"Articles","previous_headings":"","what":"Get weekly cases for Pune","title":"Animation of projected weekly cases - Pune (India)","text":"","code":"pune_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Pune\"), rename_country_as_state = TRUE)   p2 <- BarPlot(pune_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"overall-how-much-has-pune-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Pune","what":"Overall, how much has Pune sequenced over months?","title":"Animation of projected weekly cases - Pune (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"pune_monthly_cases_tmp <- pune_monthly_cases %>% select(MonthYear, value) pune_monthly_cases_tmp$State <- \"India\" pune_monthly_cases_tmp$type <- \"Confirmed\"  pune_monthly_cases_tmp <- pune_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = pune_seq_stats,   confirmed_long = pune_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Pune (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Pune.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Pune (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Pune\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Pune\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 26331.770104  ## iter  10 value 12273.984175 ## iter  20 value 8566.058729 ## iter  30 value 6825.532209 ## iter  40 value 6582.962390 ## iter  50 value 6500.023098 ## iter  60 value 6478.376065 ## iter  70 value 6461.321478 ## iter  80 value 6450.352579 ## iter  90 value 6444.619576 ## iter 100 value 6438.890377 ## iter 110 value 6421.411434 ## iter 120 value 6393.153771 ## iter 130 value 6358.873200 ## iter 140 value 6349.205762 ## iter 150 value 6347.712444 ## iter 160 value 6347.513447 ## iter 170 value 6345.886745 ## iter 180 value 6339.242976 ## iter 190 value 6331.007314 ## iter 200 value 6328.620896 ## iter 210 value 6326.730170 ## iter 220 value 6323.575542 ## iter 230 value 6323.480296 ## iter 240 value 6322.698594 ## iter 250 value 6322.117430 ## iter 260 value 6321.767797 ## iter 270 value 6320.622605 ## iter 280 value 6318.057039 ## iter 290 value 6316.733140 ## iter 300 value 6316.513219 ## final  value 6316.420801  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Pune\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Pune\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 10181.463328  ## iter  10 value 4343.561095 ## iter  20 value 3708.838591 ## iter  30 value 3512.609038 ## iter  40 value 3464.386556 ## iter  50 value 3447.588871 ## iter  60 value 3434.386350 ## iter  70 value 3433.153588 ## iter  80 value 3431.213277 ## iter  90 value 3429.843738 ## iter 100 value 3428.463489 ## iter 110 value 3425.710016 ## iter 120 value 3420.975366 ## iter 130 value 3420.565208 ## iter 140 value 3420.317639 ## iter 150 value 3419.998281 ## iter 160 value 3419.874370 ## iter 170 value 3419.806008 ## iter 180 value 3419.737843 ## final  value 3419.668662  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Pune\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Pune\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 10181.463328  ## iter  10 value 4343.561095 ## iter  20 value 3708.838591 ## iter  30 value 3512.609038 ## iter  40 value 3464.386556 ## iter  50 value 3447.588871 ## iter  60 value 3434.386350 ## iter  70 value 3433.153588 ## iter  80 value 3431.213277 ## iter  90 value 3429.843738 ## iter 100 value 3428.463489 ## iter 110 value 3425.710016 ## iter 120 value 3420.975366 ## iter 130 value 3420.565208 ## iter 140 value 3420.317639 ## iter 150 value 3419.998281 ## iter 160 value 3419.874370 ## iter 170 value 3419.806008 ## iter 180 value 3419.737843 ## final  value 3419.668662  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Pune (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Pune_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"get-variants-data-for-singapore","dir":"Articles","previous_headings":"","what":"Get variants data for Singapore","title":"Animation of projected weekly cases - Singapore","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_singapore <- gisaid_metadata %>%   filter(Country == \"Singapore\") %>%   filter(Host == \"Human\") # format metadata gisaid_singapore <- FormatGISAIDMetadata(gisaid_singapore) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_singapore <- gisaid_singapore %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_singapore <- gisaid_singapore %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_singapore <- CollapseLineageToVOCs(   variant_df = gisaid_singapore,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Singapore","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_singapore) state_month_counts$State <- \"Singapore\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"get-weekly-cases-for-singapore","dir":"Articles","previous_headings":"","what":"Get weekly cases for Singapore","title":"Animation of projected weekly cases - Singapore","text":"","code":"confirmed.tmp <- COVID19::covid19(country = \"Singapore\", verbose = FALSE, level = 2) %>%   select(date, administrative_area_level_2, confirmed) %>%   rename(State = administrative_area_level_2)  confirmed <- COVID19::covid19(country = \"Singapore\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Singapore.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Singapore","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 97758.712509  ## iter  10 value 57994.636282 ## iter  20 value 50623.219150 ## iter  30 value 39971.775755 ## iter  40 value 35119.090665 ## iter  50 value 34611.117502 ## iter  60 value 33323.137380 ## iter  70 value 33025.351596 ## iter  80 value 33018.269524 ## iter  90 value 32805.847155 ## iter 100 value 32702.238460 ## iter 110 value 32683.144454 ## iter 120 value 32660.017528 ## iter 130 value 32642.291906 ## final  value 32638.902330  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_singapore_subset <- gisaid_singapore %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_singapore_weekwise <- SummarizeVariantsWeekwise(gisaid_singapore_subset)  voc_to_keep <- gisaid_singapore_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_singapore_weekwise <- gisaid_singapore_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_singapore_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 64076.337968  ## iter  10 value 40966.682819 ## iter  20 value 34440.410157 ## iter  30 value 31120.797308 ## iter  40 value 30301.977565 ## iter  50 value 30161.699503 ## iter  60 value 30104.876938 ## iter  70 value 30086.470471 ## iter  80 value 30072.217192 ## iter  90 value 30070.666277 ## iter 100 value 30068.958608 ## iter 110 value 30054.733497 ## final  value 30054.732206  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Singapore by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Singapore_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-variants-data-for-south-africa","dir":"Articles","previous_headings":"","what":"Get variants data for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_sa <- gisaid_metadata %>%   filter(Country == \"South Africa\") %>%   filter(Host == \"Human\") # format metadata gisaid_sa <- FormatGISAIDMetadata(gisaid_sa) gisaid_sa$State <- CleanSouthAfricanStates(gisaid_sa$State)  gisaid_sa <- gisaid_sa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") %>%   filter(State != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_sa <- gisaid_sa %>%   filter(pangolin_lineage != \"None\") %>%   filter(!is.na(MonthYearCollected)) %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_sa <- CollapseLineageToVOCs(   variant_df = gisaid_sa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"get-weekly-cases-for-south-africa","dir":"Articles","previous_headings":"","what":"Get weekly cases for South Africa","title":"Animation of projected weekly cases - South Africa","text":"","code":"confirmed <- COVID19::covid19(country = \"South Africa\", verbose = FALSE) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed))  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed))   confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-SouthAfrica.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - South Africa","text":"Look cases December, 2021 :","code":"voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  52 (36 variable) ## initial  value 137078.588511  ## iter  10 value 81397.118679 ## iter  20 value 65723.228588 ## iter  30 value 52495.491803 ## iter  40 value 39073.412129 ## iter  50 value 38532.925955 ## iter  60 value 38224.380311 ## iter  70 value 38165.900802 ## iter  80 value 38139.588867 ## iter  90 value 38119.658605 ## iter 100 value 38021.028170 ## iter 110 value 37913.304156 ## iter 120 value 37694.189700 ## iter 130 value 37615.001423 ## iter 140 value 37603.204424 ## iter 150 value 37601.308938 ## iter 160 value 37601.236351 ## iter 170 value 37598.895304 ## iter 180 value 37582.732520 ## iter 190 value 37572.896383 ## iter 200 value 37564.325480 ## iter 210 value 37560.936975 ## iter 220 value 37560.546944 ## iter 220 value 37560.546677 ## final  value 37560.546677  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_sa_subset <- gisaid_sa %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_sa_weekwise <- SummarizeVariantsWeekwise(gisaid_sa_subset)  voc_to_keep <- gisaid_sa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_sa_weekwise <- gisaid_sa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  sa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_sa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  36 (24 variable) ## initial  value 42971.121059  ## iter  10 value 27257.045372 ## iter  20 value 22280.203098 ## iter  30 value 20683.108005 ## iter  40 value 20122.757081 ## iter  50 value 19873.751168 ## iter  60 value 19870.733432 ## iter  70 value 19815.294767 ## iter  80 value 19787.576877 ## iter  90 value 19785.935981 ## final  value 19785.915313  ## converged the_anim <- PlotVariantPrevalenceAnimated(sa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in South Africa by variant\", caption = \"**Source: gisaid.org and covid19datahub.io**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/SA_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-monthly-cases-for-tamilnadu","dir":"Articles","previous_headings":"","what":"Get monthly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"Tamilnadu_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Tamil Nadu\") head(Tamilnadu_monthly_cases) ##   MonthYear      State  value      type ## 1  Mar 2020 Tamil Nadu    124 Confirmed ## 2  Apr 2020 Tamil Nadu   2199 Confirmed ## 3  May 2020 Tamil Nadu  20010 Confirmed ## 4  Jun 2020 Tamil Nadu  67834 Confirmed ## 5  Jul 2020 Tamil Nadu 155692 Confirmed ## 6  Aug 2020 Tamil Nadu 182182 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"plot-monthly-cases-for-tamilnadu","dir":"Articles","previous_headings":"Get monthly cases for Tamilnadu","what":"Plot monthly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"p1 <- BarPlot(Tamilnadu_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Tamilnadu (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"get-weekly-cases-for-tamilnadu","dir":"Articles","previous_headings":"","what":"Get weekly cases for Tamilnadu","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"Tamilnadu_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Tamil Nadu\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Tamilnadu_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Tamilnadu (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"overall-how-much-has-tamilnadu-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Tamilnadu","what":"Overall, how much has Tamilnadu sequenced over months?","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Tamilnadu_monthly_cases_tmp <- Tamilnadu_monthly_cases %>% select(MonthYear, value) Tamilnadu_monthly_cases_tmp$State <- \"India\" Tamilnadu_monthly_cases_tmp$type <- \"Confirmed\"  Tamilnadu_monthly_cases_tmp <- Tamilnadu_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Tamilnadu_seq_stats,   confirmed_long = Tamilnadu_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Tamilnadu (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Tamil Nadu\")) state_month_counts$State <- \"Tamil Nadu\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Tamilnadu.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Tamil Nadu (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Tamil Nadu\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 48880.239905  ## iter  10 value 23178.808067 ## iter  20 value 18777.065352 ## iter  30 value 14657.751868 ## iter  40 value 13744.809109 ## iter  50 value 13318.159024 ## iter  60 value 13263.282125 ## iter  70 value 13181.001725 ## iter  80 value 13047.521074 ## iter  90 value 12990.349307 ## iter 100 value 12961.164416 ## iter 110 value 12931.167223 ## iter 120 value 12884.271467 ## iter 130 value 12877.415218 ## iter 140 value 12849.391810 ## iter 150 value 12841.626153 ## iter 150 value 12841.626068 ## iter 150 value 12841.626068 ## final  value 12841.626068  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Tamil Nadu\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 21885.590155  ## iter  10 value 13123.888964 ## iter  20 value 10270.882802 ## iter  30 value 9104.234036 ## iter  40 value 8947.502152 ## iter  50 value 8925.015966 ## iter  60 value 8915.219259 ## iter  70 value 8913.530296 ## iter  80 value 8908.335993 ## iter  90 value 8899.263433 ## iter 100 value 8890.315201 ## iter 110 value 8886.407936 ## iter 120 value 8884.642322 ## iter 130 value 8884.039043 ## iter 140 value 8883.980949 ## iter 150 value 8883.920250 ## iter 160 value 8883.806045 ## iter 170 value 8883.772390 ## iter 180 value 8883.750218 ## iter 190 value 8883.737652 ## iter 200 value 8883.733388 ## iter 210 value 8883.726771 ## iter 220 value 8883.687197 ## iter 230 value 8883.575772 ## final  value 8883.501769  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Tamil Nadu\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Tamil Nadu\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 21885.590155  ## iter  10 value 13123.888964 ## iter  20 value 10270.882802 ## iter  30 value 9104.234036 ## iter  40 value 8947.502152 ## iter  50 value 8925.015966 ## iter  60 value 8915.219259 ## iter  70 value 8913.530296 ## iter  80 value 8908.335993 ## iter  90 value 8899.263433 ## iter 100 value 8890.315201 ## iter 110 value 8886.407936 ## iter 120 value 8884.642322 ## iter 130 value 8884.039043 ## iter 140 value 8883.980949 ## iter 150 value 8883.920250 ## iter 160 value 8883.806045 ## iter 170 value 8883.772390 ## iter 180 value 8883.750218 ## iter 190 value 8883.737652 ## iter 200 value 8883.733388 ## iter 210 value 8883.726771 ## iter 220 value 8883.687197 ## iter 230 value 8883.575772 ## final  value 8883.501769  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Tamil Nadu (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Tamilnadu_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"state_counts <- as.data.frame(table(gisaid_india$State)) %>% rename(State = Var1, `Total sequences` = Freq)  DT::datatable(state_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-monthly-cases-for-telangana","dir":"Articles","previous_headings":"","what":"Get monthly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"Telangana_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"Telangana\") head(Telangana_monthly_cases) ##   MonthYear     State value      type ## 1  Mar 2020 Telangana    97 Confirmed ## 2  Apr 2020 Telangana   941 Confirmed ## 3  May 2020 Telangana  1660 Confirmed ## 4  Jun 2020 Telangana 13641 Confirmed ## 5  Jul 2020 Telangana 46364 Confirmed ## 6  Aug 2020 Telangana 61750 Confirmed"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"plot-monthly-cases-for-telangana","dir":"Articles","previous_headings":"Get monthly cases for Telangana","what":"Plot monthly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"p1 <- BarPlot(Telangana_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Telangana (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"get-weekly-cases-for-telangana","dir":"Articles","previous_headings":"","what":"Get weekly cases for Telangana","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"Telangana_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(State == \"Telangana\"), rename_country_as_state = TRUE)   p2 <- BarPlot(Telangana_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Telangana (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"overall-how-much-has-telangana-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Telangana","what":"Overall, how much has Telangana sequenced over months?","title":"Animation of projected weekly cases - Telangana (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"Telangana_monthly_cases_tmp <- Telangana_monthly_cases %>% select(MonthYear, value) Telangana_monthly_cases_tmp$State <- \"India\" Telangana_monthly_cases_tmp$type <- \"Confirmed\"  Telangana_monthly_cases_tmp <- Telangana_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = Telangana_seq_stats,   confirmed_long = Telangana_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Telangana (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - Telangana (India)","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_india %>% filter(State == \"Telangana\")) state_month_counts$State <- \"Telangana\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-Telangana.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Telangana (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(State == \"Telangana\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(State %in% c(\"Telangana\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  60 (42 variable) ## initial  value 53619.393982  ## iter  10 value 19398.092368 ## iter  20 value 15577.349399 ## iter  30 value 11768.075363 ## iter  40 value 11468.053356 ## iter  50 value 11265.793922 ## iter  60 value 11176.080460 ## iter  70 value 11162.613335 ## iter  80 value 11157.993056 ## iter  90 value 11154.222956 ## iter 100 value 11152.039349 ## iter 110 value 11141.716323 ## iter 120 value 11137.320595 ## iter 130 value 11127.540502 ## iter 140 value 11106.941053 ## iter 150 value 11100.801177 ## iter 160 value 11092.749069 ## iter 170 value 11090.373740 ## iter 180 value 11088.294294 ## iter 190 value 11087.248317 ## iter 200 value 11086.011525 ## iter 210 value 11084.795862 ## iter 220 value 11082.247515 ## iter 230 value 11081.594415 ## iter 240 value 11080.119619 ## iter 250 value 11077.273766 ## iter 260 value 11076.949282 ## iter 270 value 11076.775330 ## iter 280 value 11076.571800 ## iter 290 value 11075.439941 ## iter 300 value 11074.473037 ## iter 310 value 11074.010976 ## iter 320 value 11073.308914 ## iter 330 value 11071.408208 ## iter 340 value 11069.841164 ## iter 350 value 11068.418758 ## iter 360 value 11067.909264 ## iter 370 value 11067.464922 ## iter 380 value 11066.870611 ## iter 390 value 11064.810463 ## iter 400 value 11064.420668 ## iter 410 value 11064.280678 ## iter 420 value 11063.761184 ## final  value 11063.366804  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(State %in% c(\"Telangana\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Telangana\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 20286.194008  ## iter  10 value 7548.560634 ## iter  20 value 5824.663387 ## iter  30 value 5565.075260 ## iter  40 value 5534.432850 ## iter  50 value 5522.942332 ## iter  60 value 5517.835342 ## iter  70 value 5516.394664 ## iter  80 value 5512.985287 ## iter  90 value 5509.596081 ## iter 100 value 5508.115507 ## iter 110 value 5507.651496 ## iter 120 value 5507.457008 ## iter 130 value 5507.397381 ## iter 140 value 5507.344315 ## iter 150 value 5507.287181 ## iter 160 value 5507.239837 ## iter 170 value 5507.193995 ## iter 180 value 5507.145627 ## final  value 5507.107033  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(State %in% c(\"Telangana\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(State == \"Telangana\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  44 (30 variable) ## initial  value 20286.194008  ## iter  10 value 7548.560634 ## iter  20 value 5824.663387 ## iter  30 value 5565.075260 ## iter  40 value 5534.432850 ## iter  50 value 5522.942332 ## iter  60 value 5517.835342 ## iter  70 value 5516.394664 ## iter  80 value 5512.985287 ## iter  90 value 5509.596081 ## iter 100 value 5508.115507 ## iter 110 value 5507.651496 ## iter 120 value 5507.457008 ## iter 130 value 5507.397381 ## iter 140 value 5507.344315 ## iter 150 value 5507.287181 ## iter 160 value 5507.239837 ## iter 170 value 5507.193995 ## iter 180 value 5507.145627 ## final  value 5507.107033  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Telangana (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Telangana_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-variants-data-for-uk","dir":"Articles","previous_headings":"","what":"Get variants data for UK","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_uk <- gisaid_metadata %>%   filter(Country == \"United Kingdom\") %>%   filter(Host == \"Human\") # format metadata gisaid_uk <- FormatGISAIDMetadata(gisaid_uk)  gisaid_uk <- gisaid_uk %>% filter(State != \"\")  gisaid_uk <- gisaid_uk %>%   filter(pangolin_lineage != \"Unknown\") %>%   arrange(State, MonthYearCollected) %>%   filter(!is.na(MonthYearCollected))  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1` = \"BA.1\",   `BA.1.*` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.*` = \"BA.2\",   `BA.3` = \"BA.3\",   `BA.3.*` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.4.*` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.5.*` = \"BA.5\",   `XBB` = \"XBB\",   `XBB.1` = \"XBB.1+\",   `XBB.1.*` = \"XBB.1+\",   `XBB.1.5` = \"XBB.1.5\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\" ) gisaid_uk <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"get-daily-case-data","dir":"Articles","previous_headings":"","what":"Get daily case data","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"if (FALSE) {   cases.struct <- list(     date = \"date\",     areaName = \"areaName\",     newCasesByPublishDate = \"newCasesByPublishDate\"   )   all_nations <- c(     \"areaType=nation\"   )   cases_data <- get_data(     filters = all_nations,     structure = cases.struct   ) %>% rename(new_cases = newCasesByPublishDate)     confirmed <- cases_data %>%     arrange(date) %>%     group_by(date) %>%     summarise(daily_cases = sum(new_cases)) } confirmed <- covid19(country = \"United Kingdom\", level = 1) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) ## We have invested a lot of time and effort in creating COVID-19 Data ## Hub, please cite the following when using it: ##  ##   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open ##   Source Software 5(51):2376, doi: 10.21105/joss.02376 ##  ## The implementation details and the latest version of the data are ## described in: ##  ##   Guidotti, E., (2022), \"A worldwide epidemiological database for ##   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: ##   10.1038/s41597-022-01245-1 ## To print citations in BibTeX format use: ##  > print(citation('COVID19'), bibtex=TRUE) ##  ## To hide this message use 'verbose = FALSE'. confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_uk) state_month_counts$State <- \"UK\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-UK.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - United Kingdom","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_uk_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_uk_weekwise <- gisaid_uk_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  uk_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_uk_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  64 (45 variable) ## initial  value 8287603.174010  ## iter  10 value 3782681.932653 ## iter  20 value 3432527.008462 ## iter  30 value 3287150.675224 ## iter  40 value 2506643.559678 ## iter  50 value 1564333.168377 ## iter  60 value 1102387.012750 ## iter  70 value 1069625.387558 ## iter  80 value 1044497.857125 ## iter  90 value 1036943.698411 ## iter 100 value 1034832.577526 ## iter 110 value 1030568.543887 ## iter 120 value 1022046.861553 ## iter 130 value 1011139.618649 ## iter 140 value 1008821.971575 ## iter 150 value 1008627.589296 ## iter 160 value 1008546.355846 ## iter 170 value 1008482.637410 ## iter 180 value 1008474.158899 ## final  value 1008470.293692  ## converged the_anim <- PlotVariantPrevalenceAnimated(uk_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and gov.uk**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk <- gisaid_uk %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 2910313.284343  ## iter  10 value 1822216.421054 ## iter  20 value 1232339.884602 ## iter  30 value 904223.395011 ## iter  40 value 743655.945492 ## iter  50 value 734303.181137 ## iter  60 value 725900.268277 ## iter  70 value 723403.628999 ## iter  80 value 713218.593646 ## iter  90 value 713097.262702 ## final  value 713097.186611  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and gov.uk**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/UK_animated_2021.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-variants-data-for-usa","dir":"Articles","previous_headings":"","what":"Get variants data for USA","title":"Animation of projected weekly cases - USA","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() custom_voc_mapping <- list(   `XBB` = \"XBB.*\",   `XBB.*` = \"XBB.*\",   `BQ.1` = \"BQ.1\",   `BQ.1.*` = \"BQ.1\",   `XBB.1` = \"XBB.1.*\",   `XBB.1.*` = \"XBB.1.*\",   `XBB.1.5` = \"XBB.1.5\",   `XBB.1.16` = \"XBB.1.16\",   `XBB.1.16.*` = \"XBB.1.16\",   `EG.5.*` = \"EG.5\",   `FL.1.*` = \"FL.1.*\",   #`FL.1.5.*` = \"FL.1.5\",   #`FL.1.6.*` = \"FL.1.6\",   `GJ.1.2` = \"GJ.1.2\" ) gisaid_usa <- gisaid_usa %>% filter(pangolin_lineage != \"None\")  gisaid_usa <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"get-weekly-cases-for-usa","dir":"Articles","previous_headings":"","what":"Get weekly cases for USA","title":"Animation of projected weekly cases - USA","text":"","code":"confirmed <- covid19(country = \"USA\", level = 1) %>%   select(date, confirmed) %>%   filter(!is.na(confirmed)) #> We have invested a lot of time and effort in creating COVID-19 Data #> Hub, please cite the following when using it: #>  #>   Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open #>   Source Software 5(51):2376, doi: 10.21105/joss.02376 #>  #> The implementation details and the latest version of the data are #> described in: #>  #>   Guidotti, E., (2022), \"A worldwide epidemiological database for #>   COVID-19 at fine-grained spatial resolution\", Sci Data 9(1):112, doi: #>   10.1038/s41597-022-01245-1 #> To print citations in BibTeX format use: #>  > print(citation('COVID19'), bibtex=TRUE) #>  #> To hide this message use 'verbose = FALSE'.  confirmed$daily_cases <- c(confirmed$confirmed[1], diff(confirmed$confirmed)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)   gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa)"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"distribution-of-variants","dir":"Articles","previous_headings":"","what":"Distribution of variants","title":"Animation of projected weekly cases - USA","text":"","code":"state_month_counts <- SummarizeVariantsMonthwise(gisaid_usa) state_month_counts$State <- \"USA\" state_month_prevalence <- CountsToPrevalence(state_month_counts) vocs <- GetVOCs()  state_month_prevalence <- CollapseLineageToVOCs(   variant_df = state_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(state_month_prevalence) p5"},{"path":"http://saket-choudhary.me/covmuller/articles/VariantAnimation-USA.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - USA","text":"Look cases October,2021 : Look cases past weeks","code":"voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  76 (54 variable) #> initial  value 14265689.076502  #> iter  10 value 6485961.819900 #> iter  20 value 5400039.670236 #> iter  30 value 5024284.016791 #> iter  40 value 4801614.335139 #> iter  50 value 4394175.033109 #> iter  60 value 3229988.551280 #> iter  70 value 2649081.909506 #> iter  80 value 2550689.105251 #> iter  90 value 2462212.635437 #> iter 100 value 2439538.220962 #> iter 110 value 2410636.600700 #> iter 120 value 2408805.438866 #> iter 130 value 2402925.053019 #> iter 140 value 2383510.664463 #> iter 150 value 2342753.788932 #> iter 160 value 2336928.960035 #> iter 170 value 2335184.930228 #> iter 180 value 2334107.578006 #> iter 190 value 2333459.815644 #> iter 200 value 2333386.645767 #> iter 210 value 2333303.838702 #> iter 220 value 2333200.994161 #> iter 230 value 2333199.728211 #> iter 240 value 2333198.798697 #> iter 250 value 2333195.899282 #> iter 260 value 2333170.980342 #> iter 270 value 2333154.262217 #> iter 280 value 2333138.861876 #> iter 290 value 2333121.468297 #> iter 300 value 2333055.059695 #> final  value 2333024.729129  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Dec 2021\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  44 (30 variable) #> initial  value 5504637.162979  #> iter  10 value 1931021.583677 #> iter  20 value 1855310.305243 #> iter  30 value 1606790.258269 #> iter  40 value 1265444.197709 #> iter  50 value 1235557.687075 #> iter  60 value 1229376.258429 #> iter  70 value 1226722.250997 #> iter  80 value 1221553.049406 #> iter  90 value 1215530.871722 #> iter 100 value 1214984.877494 #> iter 110 value 1214962.933969 #> final  value 1214945.052483  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") #> `geom_line()`: Each group consists of only one observation. #> â„¹ Do you need to adjust the group aesthetic? #> `geom_line()`: Each group consists of only one observation. #> â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2021.gif\"), animation = the_anim) confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"December 2022\") %>%   group_by(WeekYear) %>%   summarise(n = ceiling(mean(daily_cases, na.rm = T))) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Dec 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) #> # weights:  44 (30 variable) #> initial  value 5504637.162979  #> iter  10 value 1931021.583677 #> iter  20 value 1855310.305243 #> iter  30 value 1606790.258269 #> iter  40 value 1265444.197709 #> iter  50 value 1235557.687075 #> iter  60 value 1229376.258429 #> iter  70 value 1226722.250997 #> iter  80 value 1221553.049406 #> iter  90 value 1215530.871722 #> iter 100 value 1214984.877494 #> iter 110 value 1214962.933969 #> final  value 1214945.052483  #> converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes**<br>\") #> `geom_line()`: Each group consists of only one observation. #> â„¹ Do you need to adjust the group aesthetic? #> `geom_line()`: Each group consists of only one observation. #> â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/USA_animated_2022_2.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"gisaid_metadata <- qs::qread(\"~/data/epicov/metadata_tsv_2023_09_21.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.10` = \"BA.2.X\",   `BA.2.10.1` = \"BA.2.X\",   `BA.2.12` = \"BA.2.X\",   `BA.2.12.1` = \"BA.2.X\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\",   `BA.2.74` = \"BA.2.X\",   `BA.2.75` = \"BA.2.75\",   `BA.2.76` = \"BA.2.X\",   `XBB.*` = \"XBB\",   `BQ.1` = \"BQ.1+\",   `BQ.1.*` = \"BQ.1+\" ) gisaid_india <- gisaid_india %>%   filter(pangolin_lineage != \"None\") %>%   filter(pangolin_lineage != \"Unassigned\")  gisaid_india$District <- stringr::str_to_title(gisaid_india$District) gisaid_india$City <- stringr::str_to_title(gisaid_india$City)  gisaid_india$custom_city <- gisaid_india$City gisaid_india$custom_city[gisaid_india$custom_city == \"\"] <- gisaid_india$District[gisaid_india$custom_city == \"\"]  gisaid_india$custom_city <- stringr::str_to_title(gisaid_india$custom_city)  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"top-10-cities-with-most-number-of-sequenced-samples","dir":"Articles","previous_headings":"","what":"Top 10 cities with most number of sequenced samples","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"city_counts <- as.data.frame(table(gisaid_india$custom_city)) %>% rename(City = Var1, `Total sequences` = Freq)  DT::datatable(city_counts %>% arrange(desc(`Total sequences`)))"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_monthly_cases <- GetIndiaConfirmedCasesMonthlyLong(level = \"district\") %>% filter(District == \"Kolkata\") head(chennai_monthly_cases) ## # A tibble: 6 Ã— 4 ## # Groups:   MonthYear, State [6] ##   MonthYear State       District value ##   <yearmon> <chr>       <chr>    <dbl> ## 1 Apr 2020  West Bengal Kolkata    184 ## 2 May 2020  West Bengal Kolkata   1941 ## 3 Jun 2020  West Bengal Kolkata   3859 ## 4 Jul 2020  West Bengal Kolkata  15655 ## 5 Aug 2020  West Bengal Kolkata  18518 ## 6 Sep 2020  West Bengal Kolkata  16255"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"plot-monthly-cases-for-kolkata","dir":"Articles","previous_headings":"Get monthly cases for Kolkata","what":"Plot monthly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"p1 <- BarPlot(chennai_monthly_cases, ylabel = \"Cases per month\", label_si = TRUE, title = \"Total cases per month - Kolkata (India)\", caption = \"**Source: covid19bharat.org**<br>\") p1"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"get-weekly-cases-for-kolkata","dir":"Articles","previous_headings":"","what":"Get weekly cases for Kolkata","title":"Animation of projected weekly cases - Kolkata (India)","text":"","code":"chennai_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india %>% filter(custom_city == \"Kolkata\"), rename_country_as_state = TRUE)   p2 <- BarPlot(chennai_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, title = \"Total sequences deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org **<br>\") p2"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"overall-how-much-has-kolkata-sequenced-over-months","dir":"Articles","previous_headings":"Get weekly cases for Kolkata","what":"Overall, how much has Kolkata sequenced over months?","title":"Animation of projected weekly cases - Kolkata (India)","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:","code":"chennai_monthly_cases_tmp <- chennai_monthly_cases %>% select(MonthYear, value) chennai_monthly_cases_tmp$State <- \"India\" chennai_monthly_cases_tmp$type <- \"Confirmed\"  chennai_monthly_cases_tmp <- chennai_monthly_cases_tmp %>% select(MonthYear, State, value, type) sequencing_proportion <- CombineSequencedCases(   cases_sequenced = chennai_seq_stats,   confirmed_long = chennai_monthly_cases_tmp ) p3 <- BarPlot(sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\", title = \"Proportion of cases deposited to GISAID from Kolkata (India)\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/covmuller/articles/VarinatAnimation-Kolkata.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - Kolkata (India)","text":"Look cases January, 2022 :  Look cases last weeks:","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")    gisaid_dist_weekwise <- SummarizeVariantsWeekwise(gisaid_india %>% filter(custom_city == \"Kolkata\") %>% arrange(WeekYearCollected)) confirmed_subset_dateweekwise_long_dist <- confirmed_subset_dateweekwise_long %>%   filter(District %in% c(\"Kolkata\")) %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) %>%   filter(WeekYearCollected >= min(gisaid_dist_weekwise$WeekYearCollected)) confirmed_subset_dateweekwise_long_dist$State <- NULL  voc_to_keep <- gisaid_dist_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_dist_weekwise <- gisaid_dist_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_dist_weekwise, confirmed_subset_dateweekwise_long_dist) ## # weights:  52 (36 variable) ## initial  value 19703.940964  ## iter  10 value 12489.128836 ## iter  20 value 9314.006442 ## iter  30 value 7793.427366 ## iter  40 value 7553.654867 ## iter  50 value 7267.749580 ## iter  60 value 7189.203949 ## iter  70 value 7156.926122 ## iter  80 value 7143.597462 ## iter  90 value 7137.591091 ## iter 100 value 7102.605288 ## iter 110 value 7063.030105 ## iter 120 value 7053.564695 ## iter 130 value 7048.412348 ## iter 140 value 7040.799855 ## iter 150 value 7036.387413 ## iter 160 value 7036.176913 ## iter 170 value 7034.523722 ## iter 180 value 7033.376518 ## iter 190 value 7030.709433 ## iter 200 value 7029.178347 ## iter 210 value 7020.763839 ## iter 220 value 7017.621013 ## iter 220 value 7017.620956 ## final  value 7017.620956  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\", date_breaks = \"28 days\") gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2021 W35\")) %>%   filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Kolkata\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 9498.163509  ## iter  10 value 5675.253087 ## iter  20 value 4903.815513 ## iter  30 value 4745.859522 ## iter  40 value 4713.329564 ## iter  50 value 4696.069936 ## iter  60 value 4694.427925 ## iter  70 value 4691.339998 ## iter  80 value 4688.726230 ## iter  90 value 4686.690663 ## iter 100 value 4685.132032 ## iter 110 value 4683.659808 ## iter 120 value 4683.562011 ## iter 130 value 4682.736118 ## iter 140 value 4682.011842 ## iter 150 value 4681.506519 ## iter 160 value 4681.249621 ## iter 170 value 4680.964258 ## iter 180 value 4680.775817 ## iter 190 value 4680.566102 ## iter 200 value 4680.402101 ## iter 210 value 4680.093960 ## iter 220 value 4679.743014 ## iter 230 value 4679.609737 ## iter 240 value 4679.471894 ## iter 250 value 4679.220522 ## iter 260 value 4679.142406 ## iter 270 value 4679.074026 ## iter 280 value 4678.997827 ## iter 290 value 4678.962520 ## iter 300 value 4678.894307 ## iter 310 value 4678.835603 ## iter 320 value 4678.719705 ## iter 330 value 4678.625591 ## final  value 4678.607817  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2021.gif\"), animation = the_anim) confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong(level = \"district\")  confirmed_subset_dateweekwise_long <- confirmed_subset_dateweekwise_long %>%   filter(WeekYear >= tsibble::yearweek(\"2022 W12\")) %>%   filter(District %in% c(\"Kolkata\")) %>%   group_by(WeekYear) %>%   summarise(n = sum(value)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_dist <- gisaid_india %>%   filter(MonthYearCollected > \"Dec 2021\") %>%   filter(custom_city == \"Kolkata\") %>%   arrange(WeekYearCollected)  gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_dist)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 1) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 9498.163509  ## iter  10 value 5675.253087 ## iter  20 value 4903.815513 ## iter  30 value 4745.859522 ## iter  40 value 4713.329564 ## iter  50 value 4696.069936 ## iter  60 value 4694.427925 ## iter  70 value 4691.339998 ## iter  80 value 4688.726230 ## iter  90 value 4686.690663 ## iter 100 value 4685.132032 ## iter 110 value 4683.659808 ## iter 120 value 4683.562011 ## iter 130 value 4682.736118 ## iter 140 value 4682.011842 ## iter 150 value 4681.506519 ## iter 160 value 4681.249621 ## iter 170 value 4680.964258 ## iter 180 value 4680.775817 ## iter 190 value 4680.566102 ## iter 200 value 4680.402101 ## iter 210 value 4680.093960 ## iter 220 value 4679.743014 ## iter 230 value 4679.609737 ## iter 240 value 4679.471894 ## iter 250 value 4679.220522 ## iter 260 value 4679.142406 ## iter 270 value 4679.074026 ## iter 280 value 4678.997827 ## iter 290 value 4678.962520 ## iter 300 value 4678.894307 ## iter 310 value 4678.835603 ## iter 320 value 4678.719705 ## iter 330 value 4678.625591 ## final  value 4678.607817  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in Kolkata (India) by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**<br>\") ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? ## `geom_line()`: Each group consists of only one observation. ## â„¹ Do you need to adjust the group aesthetic? gganimate::anim_save(filename = here::here(\"docs/articles/Kolkata_animated_2022.gif\"), animation = the_anim)"},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saket Choudhary. Maintainer.","code":""},{"path":"http://saket-choudhary.me/covmuller/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choudhary S (2023). covmuller: tool model COVID19 variant prevalence using data GISAID. R package version 0.1.2.0001, https://saketkc.github.io/covmuller.","code":"@Manual{,   title = {covmuller: A tool to model COVID19 variant prevalence using data from GISAID},   author = {Saket Choudhary},   year = {2023},   note = {R package version 0.1.2.0001},   url = {https://saketkc.github.io/covmuller}, }"},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"covmuller","dir":"","previous_headings":"","what":"A tool to model COVID19 variant prevalence using data from GISAID","title":"A tool to model COVID19 variant prevalence using data from GISAID","text":"Covmuller R-package designed analysis sequencing metadata deposited GISAID.","code":""},{"path":"http://saket-choudhary.me/covmuller/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"A tool to model COVID19 variant prevalence using data from GISAID","text":"Covmuller currently supports following features: Read preprocess metadata file downloaded GISAID: Vignette Plot variant prevalence: Vignette India USA Canada UK Australia SouthAfrica India New York state South Africa United Kingdom USA Aizawl (India) Bengaluru (India) Chennai (India) Delhi (India) Jaipur (India) Mumbai (India) Maharashtra (India) Pune (India) New York City (USA)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from the USA â€” CleanAmericanStates","title":"Clean states from the USA â€” CleanAmericanStates","text":"Clean states USA","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from the USA â€” CleanAmericanStates","text":"","code":"CleanAmericanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from the USA â€” CleanAmericanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanAmericanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from the USA â€” CleanAmericanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from Canada â€” CleanCanadaStates","title":"Clean states from Canada â€” CleanCanadaStates","text":"Clean states Canada","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from Canada â€” CleanCanadaStates","text":"","code":"CleanCanadaStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from Canada â€” CleanCanadaStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanCanadaStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from Canada â€” CleanCanadaStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Indian States â€” CleanIndianStates","title":"Clean Indian States â€” CleanIndianStates","text":"Clean Indian States","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Indian States â€” CleanIndianStates","text":"","code":"CleanIndianStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Indian States â€” CleanIndianStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Indian States â€” CleanIndianStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from South Africa â€” CleanSouthAfricanStates","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"Clean states South Africa","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"","code":"CleanSouthAfricanStates(states)"},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CleanSouthAfricanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"Collpase pangolin lineage list VOCs","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"","code":"CollapseLineageToVOCs(   variant_df,   vocs = GetVOCs(),   custom_voc_mapping = NULL,   summarize = TRUE )"},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"variant_df dataframe \"pangolin_lineage\" column vocs named list VOC (variant concernt) name key list lineages VOC. method replace lineages VOC name. custom_voc_mapping named vector custom mapping naming lineages. See example.","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CollapseLineageToVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"dataframe new column \"lineage_collpased\".","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"","code":"CombineSequencedCases(   cases_sequenced,   confirmed_long,   prune_oversequenced = TRUE,   month.min = NULL,   month.max = NULL,   max.percent = 100 )"},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"cases_sequenced long dataframe per state sequenced cases prune_oversequenced Whether round percentages 100 100. Default TRUE cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CombineSequencedCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert monthwise counts to prevalence â€” CountsToPrevalence","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"Convert monthwise counts prevalence","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"","code":"CountsToPrevalence(variant_df)"},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CountsToPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"dataframe monthwise prevalence variants","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set them â€” CovmullerTheme","title":"Set them â€” CovmullerTheme","text":"Set ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/CovmullerTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set them â€” CovmullerTheme","text":"","code":"CovmullerTheme()"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"Filter GISAID India Metadata India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"","code":"FilterGISAIDIndia(gisaid_metadata_all)"},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"gisaid_metadata_all dataframe GISAID metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FilterGISAIDIndia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"dataframe Indian entries Human date known","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"Format metadata.tar.x file downloaded GISAID missing columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"","code":"FormatGISAIDMetadata(   df,   collection_col = \"Collection date\",   submission_col = \"Submission date\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"df GISAID metadata dataframe collection_col Name column representing date collection (Collection date) submission_col Name column representing date submission (Submission date)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/FormatGISAIDMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"data frame following extra columns: DateCollected, MonthYearCollected, YearCollected, MonthCollected, WeekCollected DateCollectedNumeric, MonthYearCollectedNumeric DateSubmitted, MonthYearSubmitted, YearSubmitted, MonthSubmitted, WeekSubmitted DateSubmittedNumeric, MonthYearSubmittedNumeric","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"Geocode given address get latitude, longitude Gooogle","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"","code":"GeocodeAddress(address, api.key = NULL, restrict.to = NULL)"},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"address String address geocode api.key API key Google Maps restrict.Country name search restricted , Currently supports 'India'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GeocodeAddress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"dataframe geocoded address","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine filetype â€” GetFiletype","title":"Determine filetype â€” GetFiletype","text":"Determine filetype","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine filetype â€” GetFiletype","text":"","code":"GetFiletype(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine filetype â€” GetFiletype","text":"path Path file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetFiletype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine filetype â€” GetFiletype","text":"Extension file","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"Get daily confirmed cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"","code":"GetIndiaConfirmedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"Get India monthwose cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"","code":"GetIndiaConfirmedCasesMonthlyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"","code":"GetIndiaConfirmedCasesWeeklyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   level = \"State\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"Get daily cases India given status type","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"","code":"GetIndiaDailyCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   status = \"Confirmed\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"url URL fetch data status One \"Confirmed\", \"Recovered\", \"Deceased\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily statewise data for India â€” GetIndiaDailyData","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"'Status' column one 'Confirmed', 'Deceased' 'Recovered'","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"","code":"GetIndiaDailyData(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDailyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"Get daily deceased cases India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"","code":"GetIndiaDeceasedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaDeceasedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data for India â€” GetIndiaHospitalization","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"Get hospitalization data India","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndiaHospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"","code":"GetIndiaHospitalization(url = \"\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of Indian name states â€” GetIndianStates","title":"Get a list of Indian name states â€” GetIndianStates","text":"Get list Indian name states","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of Indian name states â€” GetIndianStates","text":"","code":"GetIndianStates()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of Indian name states â€” GetIndianStates","text":"list state abbreviation key full name value","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"Get MonthYear (zoo) dataframe string formatted data column","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"","code":"GetMonthYear(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"datecol vector string formatted dates datefmt Format date (default Y-m-d)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetMonthYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"vector dates converted MonthYear format (zoo::.yearmon)","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants of concern â€” GetVOCs","title":"Get variants of concern â€” GetVOCs","text":"Get variants concern","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants of concern â€” GetVOCs","text":"","code":"GetVOCs()"},{"path":"http://saket-choudhary.me/covmuller/reference/GetVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants of concern â€” GetVOCs","text":"list variants concern pangolin lineage","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"Plot heatmap cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"","code":"PlotSequencedPropHeatmap(df)"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotSequencedPropHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"heatmap total percentage cases sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","title":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","text":"Plot heatmap total cases/sequences","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","text":"","code":"PlotTotalHeatmap(df, color_legend = \"Total cases\")"},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases (column named 'value')","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/PlotTotalHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of total cases/sequences â€” PlotTotalHeatmap","text":"heatmap total cases/sequences","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"Read instrument metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"","code":"ReadAuspiceInstrument(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceInstrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"dataframe instrument related metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"Read metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"","code":"ReadAuspiceMetadata(path)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadAuspiceMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"dataframe collated metadata","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"Read metadata downloaded GISAID","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"","code":"ReadGISAIDMetada(path, showProgress = FALSE, ...)"},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"path Path tar.xz metadata.txt downloaded GISAID showProgress Whether print progress bars fread ... parameters data.table::fread","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/ReadGISAIDMetada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"data frame parsed metadata extra columns","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"function removes: 1. Commas space 2. Hyphen space 3. Multiple dots single space 4. Multiple spacies single space 5. NA \"UNKNOWN\"","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"","code":"SanitizeColumn(col)"},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"col String vector","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SanitizeColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"string vector sanitized entries","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"","code":"SummarizeVariantsDatewise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsDatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"Summarize total number variants per month","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"","code":"SummarizeVariantsMonthwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsMonthwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"","code":"SummarizeVariantsWeekwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/SummarizeVariantsWeekwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"Get total sequenced samples per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"","code":"TotalSequencesPerMonthCountrywise(variant_df, rename_country_as_state = TRUE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthCountrywise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"dataframe sequencing statistics per country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"Get total number sequenced samples per month Country","code":""},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"","code":"TotalSequencesPerMonthStatewise(variant_df, drop_country = FALSE)"},{"path":"http://saket-choudhary.me/covmuller/reference/TotalSequencesPerMonthStatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"dataframe sequencing statistics per state per country","code":""}]
