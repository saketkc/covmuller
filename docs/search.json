[{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"get-cases-data","dir":"Articles","previous_headings":"","what":"Get cases data","title":"Introduction to epicovr","text":"use covid19bharat.org get tally daily confirmed cases summarize monthly level.","code":"indian_state_cases <- GetIndiaConfirmedCasesMonthlyLong() india_cases <- indian_state_cases %>% filter(State == \"India\") head(india_cases) ##   MonthYear State   value      type ## 1  Mar 2020 India    1635 Confirmed ## 2  Apr 2020 India   33232 Confirmed ## 3  May 2020 India  155781 Confirmed ## 4  Jun 2020 India  395044 Confirmed ## 5  Jul 2020 India 1111273 Confirmed ## 6  Aug 2020 India 1990350 Confirmed"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-cases-for-india","dir":"Articles","previous_headings":"Get cases data","what":"Plot cases for India","title":"Introduction to epicovr","text":"easy visualize monthly case counts bar plot:","code":"p1 <- BarPlot(india_cases, ylabel = \"Cases per month\", label_si = TRUE) p1"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"read-variant-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Read variant data from GISAID","title":"Introduction to epicovr","text":"utilize GISAID data look prevalence variants. access data, GISAID requires registration.","code":"current_date <- \"2022_05_03\" fpath.tar <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".qs\")  if (file.exists(fpath.qs)) {   gisaid_metadata <- qs::qread(file = fpath.qs) } else {   gisaid_metadata <- ReadGISAIDMetada(path = fpath.tar)   qs::qsave(gisaid_metadata, fpath.qs) }"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot total sequenced cases","title":"Introduction to epicovr","text":"can look absolute number cases sequenced country filtering information metadata made available GISAID (includes countries). , visualize total sequenced cases coming India:","code":"gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata) country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p2 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE) p2"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"overall-how-much-has-india-sequenced-over-months","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Overall, how much has India sequenced over months?","title":"Introduction to epicovr","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:  context, can combine three plots :","code":"india_cases_long <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"India\") india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = country_seq_stats,   confirmed_long = india_cases_long ) p3 <- BarPlot(india_sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-proportion-of-cases-that-been-deposited-from-each-state","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot proportion of cases that been deposited from each state","title":"Introduction to epicovr","text":"can break proportion sequenced cases state level:","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india, drop_country = TRUE) seq_stats <- rbind(country_seq_stats, state_seq_stats) state_cases_long <- GetIndiaConfirmedCasesMonthlyLong() india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = seq_stats,   confirmed_long = state_cases_long,   month.min = \"Feb 2020\",   month.max = \"Apr 2022\",   max.percent = 5 )  india_sequencing_proportion$State <- factor(   x = india_sequencing_proportion$State,   levels = as.character(GetIndianStates()) ) p4 <- PlotSequencedPropHeatmap(india_sequencing_proportion) p4"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-prevalence","dir":"Articles","previous_headings":"","what":"Plot Prevalence","title":"Introduction to epicovr","text":"Finally, look prevalence variants variants concern (VOCs):  animated version prevalence plot, check VariantAnimation.","code":"india_month_counts <- SummarizeVariantsMonthwise(gisaid_india) india_month_counts$State <- \"India\" india_month_prevalence <- CountsToPrevalence(india_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\", `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",    `BA.2.1` = \"BA.2.1\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) india_month_prevalence <- CollapseLineageToVOCs(   variant_df = india_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(india_month_prevalence) p5 ## Warning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Set3 is 12 ## Returning the palette you asked for with that many colors"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Australia.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Australia","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_australia, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Australia\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Australia.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Australia","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",    `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",    `BA.2.1` = \"BA.2.1\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_australia_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_australia,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_australia_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_australia_shared_dateweek <- SummarizeVariantsDatewise(gisaid_australia_collapsed_sel, by_state = TRUE) head(gisaid_australia_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State                        DateCollectedNumeric lineage_collapsed     n ##   <chr>                                       <dbl> <chr>             <int> ## 1 Australian Capital Territory                18932 Delta                 8 ## 2 Australian Capital Territory                18933 Delta                16 ## 3 Australian Capital Territory                18934 Delta                 8 ## 4 Australian Capital Territory                18935 Delta                 8 ## 5 Australian Capital Territory                18936 Delta                15 ## 6 Australian Capital Territory                18938 Delta                16 fit_australia_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_australia_shared_dateweek) ## # weights:  80 (63 variable) ## initial  value 114577.228947  ## iter  10 value 72517.698348 ## iter  20 value 70729.787746 ## iter  30 value 68085.221375 ## iter  40 value 65562.165054 ## iter  50 value 58113.910808 ## iter  60 value 47670.609273 ## iter  70 value 45828.450426 ## iter  80 value 44083.587194 ## iter  90 value 42974.890014 ## iter 100 value 42586.935852 ## iter 110 value 42342.822743 ## iter 120 value 42034.006202 ## iter 130 value 41944.723897 ## final  value 41944.673284  ## converged head(fit_australia_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric                        State ## 1              BA.1                18932 Australian Capital Territory ## 2            BA.1.1                18932 Australian Capital Territory ## 3              BA.2                18932 Australian Capital Territory ## 4           BA.2.10                18932 Australian Capital Territory ## 5         BA.2.10.1                18932 Australian Capital Territory ## 6           BA.2.12                18932 Australian Capital Territory ##           prob           SE df    asymp.LCL    asymp.UCL DateCollected ## 1 2.867277e-06 1.265054e-07 NA 2.619331e-06 3.115223e-06    2021-11-01 ## 2 1.082936e-05 3.879840e-07 NA 1.006893e-05 1.158980e-05    2021-11-01 ## 3 7.476533e-09 2.149383e-10 NA 7.055262e-09 7.897804e-09    2021-11-01 ## 4 1.951302e-08 7.122785e-10 NA 1.811698e-08 2.090906e-08    2021-11-01 ## 5 2.363733e-09 1.099732e-10 NA 2.148190e-09 2.579277e-09    2021-11-01 ## 6 4.532336e-08 1.259133e-09 NA 4.285551e-08 4.779122e-08    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Australia.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Australia","text":"","code":"muller_australiabystate_mfit <- PlotMullerDailyPrevalence(fit_australia_multi_predsbystate, ncol = 3) muller_australiabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Canada.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Canada","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_canada, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Canada\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Canada.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Canada","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",    `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",    `BA.2.1` = \"BA.2.1\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_canada_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_canada,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed %>% filter(MonthYearCollected >= \"Nov 2021\")  vocs_to_keep <- table(gisaid_canada_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_canada_shared_dateweek <- SummarizeVariantsDatewise(gisaid_canada_collapsed_sel, by_state = TRUE) head(gisaid_canada_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alberta                18932 Delta               134 ## 2 Alberta                18933 Delta                98 ## 3 Alberta                18934 Delta                94 ## 4 Alberta                18935 Delta                96 ## 5 Alberta                18936 Delta                66 ## 6 Alberta                18937 Delta                54 fit_canada_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_canada_shared_dateweek) ## # weights:  77 (60 variable) ## initial  value 225698.334548  ## iter  10 value 178076.738253 ## iter  20 value 175251.323136 ## iter  30 value 169149.833057 ## iter  40 value 160227.281668 ## iter  50 value 147503.232322 ## iter  60 value 118590.844960 ## iter  70 value 114164.665457 ## iter  80 value 112752.622269 ## iter  90 value 112297.067703 ## iter 100 value 112111.692992 ## iter 110 value 112037.579973 ## iter 120 value 111979.969814 ## final  value 111977.679585  ## converged head(fit_canada_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 Alberta 6.273162e-05 1.156457e-06 NA ## 2            BA.1.1                18932 Alberta 1.556956e-05 2.335999e-07 NA ## 3              BA.2                18932 Alberta 1.140761e-08 2.290197e-10 NA ## 4           BA.2.10                18932 Alberta 9.059796e-08 3.650661e-09 NA ## 5           BA.2.12                18932 Alberta 8.581749e-09 1.850763e-10 NA ## 6             Delta                18932 Alberta 9.998367e-01 2.360836e-06 NA ##      asymp.LCL    asymp.UCL DateCollected ## 1 6.046500e-05 6.499823e-05    2021-11-01 ## 2 1.511171e-05 1.602740e-05    2021-11-01 ## 3 1.095874e-08 1.185648e-08    2021-11-01 ## 4 8.344279e-08 9.775312e-08    2021-11-01 ## 5 8.219006e-09 8.944492e-09    2021-11-01 ## 6 9.998321e-01 9.998413e-01    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Canada.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Canada","text":"","code":"muller_canadabystate_mfit <- PlotMullerDailyPrevalence(fit_canada_multi_predsbystate, ncol = 3) muller_canadabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - India","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - India","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india) state_seq_stats_summary <- state_seq_stats %>% group_by(State) %>% summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State==\"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary,xaxis = \"State\", ylabel = \"Total sequences deposited\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p1"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - India","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\", `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",    `BA.2.1` = \"BA.2.1\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed_sel <- gisaid_india_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") vocs_to_keep <- table(gisaid_india_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_india_collapsed_sel <- gisaid_india_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_india_shared_dateweek <- SummarizeVariantsDatewise(gisaid_india_collapsed_sel, by_state = TRUE) head(gisaid_india_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Andaman & Nicobar                18970 Delta                 6 ## 2 Andaman & Nicobar                18970 Others                1 ## 3 Andaman & Nicobar                18971 Delta                 2 ## 4 Andaman & Nicobar                18976 Delta                 1 ## 5 Andaman & Nicobar                18981 Delta                 1 ## 6 Andaman & Nicobar                18983 Delta                 1 fit_india_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_india_shared_dateweek) ## # weights:  342 (296 variable) ## initial  value 153509.095096  ## iter  10 value 113561.704595 ## iter  20 value 109587.857507 ## iter  30 value 107416.882704 ## iter  40 value 104029.816608 ## iter  50 value 101841.603123 ## iter  60 value 99451.096747 ## iter  70 value 96538.452800 ## iter  80 value 92861.937207 ## iter  90 value 89471.087389 ## iter 100 value 85263.194138 ## iter 110 value 83157.596975 ## iter 120 value 81567.586987 ## iter 130 value 80549.063135 ## iter 140 value 79595.845458 ## iter 150 value 78729.263218 ## iter 160 value 77967.641877 ## iter 170 value 77369.313172 ## iter 180 value 76704.696598 ## iter 190 value 76105.431062 ## iter 200 value 75793.147656 ## iter 210 value 75709.154032 ## iter 220 value 75636.194733 ## iter 230 value 75455.739836 ## iter 240 value 75335.301386 ## iter 250 value 75306.214348 ## iter 260 value 75264.659212 ## iter 270 value 75243.628503 ## iter 280 value 75223.236669 ## iter 290 value 75220.173570 ## iter 300 value 75215.530621 ## iter 310 value 75209.979098 ## iter 320 value 75193.593128 ## iter 330 value 75191.150178 ## iter 340 value 75163.349758 ## iter 350 value 75161.646299 ## iter 360 value 75157.771071 ## final  value 75157.768974  ## converged head(fit_india_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State         prob ## 1              BA.1                18932 Andaman & Nicobar 1.218486e-18 ## 2            BA.1.1                18932 Andaman & Nicobar 9.843493e-19 ## 3              BA.2                18932 Andaman & Nicobar 6.050411e-06 ## 4           BA.2.10                18932 Andaman & Nicobar 2.151694e-04 ## 5         BA.2.10.1                18932 Andaman & Nicobar 2.583299e-11 ## 6           BA.2.12                18932 Andaman & Nicobar 1.801211e-05 ##             SE df    asymp.LCL    asymp.UCL DateCollected ## 1 5.332065e-20 NA 1.113979e-18 1.322992e-18    2021-11-01 ## 2 2.762996e-20 NA 9.301955e-19 1.038503e-18    2021-11-01 ## 3 1.529744e-07 NA 5.750587e-06 6.350235e-06    2021-11-01 ## 4 3.379530e-06 NA 2.085457e-04 2.217932e-04    2021-11-01 ## 5 1.047013e-12 NA 2.378088e-11 2.788510e-11    2021-11-01 ## 6 3.389813e-07 NA 1.734772e-05 1.867650e-05    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - India","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_southafrica, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_southafrica) state_seq_stats_summary <- state_seq_stats %>% group_by(State) %>% summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State==\"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary,xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p1"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - South Africa","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",    `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",    `BA.2.1` = \"BA.2.1\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State!=\"Unknown\")  vocs_to_keep <- table(gisaid_southafrica_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_southafrica_shared_dateweek <- SummarizeVariantsDatewise(gisaid_southafrica_collapsed_sel, by_state = TRUE) head(gisaid_southafrica_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State        DateCollectedNumeric lineage_collapsed     n ##   <chr>                       <dbl> <chr>             <int> ## 1 Eastern Cape                18933 Delta                 2 ## 2 Eastern Cape                18934 Delta                 2 ## 3 Eastern Cape                18935 Delta                 1 ## 4 Eastern Cape                18938 Delta                 1 ## 5 Eastern Cape                18940 Delta                 1 ## 6 Eastern Cape                18945 Delta                 1 fit_southafrica_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_southafrica_shared_dateweek) ## # weights:  88 (70 variable) ## initial  value 26398.510372  ## iter  10 value 16667.880005 ## iter  20 value 16502.723178 ## iter  30 value 16462.398922 ## iter  40 value 16445.462180 ## iter  40 value 16445.462179 ## iter  50 value 16445.184746 ## iter  50 value 16445.184745 ## final  value 16445.184132  ## converged head(fit_southafrica_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric        State       prob           SE ## 1              BA.1                18932 Eastern Cape 0.13427605 0.0030183314 ## 2              BA.2                18932 Eastern Cape 0.14644707 0.0031294437 ## 3           BA.2.10                18932 Eastern Cape 0.04352709 0.0018101266 ## 4              BA.3                18932 Eastern Cape 0.01925962 0.0012211380 ## 5              BA.4                18932 Eastern Cape 0.03142059 0.0015485904 ## 6              BA.5                18932 Eastern Cape 0.01065032 0.0009130669 ##   df   asymp.LCL  asymp.UCL DateCollected ## 1 NA 0.128360231 0.14019187    2021-11-01 ## 2 NA 0.140313471 0.15258067    2021-11-01 ## 3 NA 0.039979306 0.04707487    2021-11-01 ## 4 NA 0.016866232 0.02165301    2021-11-01 ## 5 NA 0.028385407 0.03445577    2021-11-01 ## 6 NA 0.008860737 0.01243989    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - South Africa","text":"","code":"muller_southafricabystate_mfit <- PlotMullerDailyPrevalence(fit_southafrica_multi_predsbystate, ncol = 3) muller_southafricabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_UK.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - United Kingdom","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_uk, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"United Kingdom\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_UK.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - United Kingdom","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",    `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",    `BA.2.1` = \"BA.2.1\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_uk_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed %>% filter(MonthYearCollected >= \"Nov 2021\") %>% filter(lineage_collapsed!=\"Unassigned\")  vocs_to_keep <- table(gisaid_uk_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_uk_shared_dateweek <- SummarizeVariantsDatewise(gisaid_uk_collapsed_sel, by_state = TRUE) head(gisaid_uk_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 England                18932 Delta              5534 ## 2 England                18932 Others                3 ## 3 England                18933 BA.1                  1 ## 4 England                18933 Delta              4313 ## 5 England                18933 Others                1 ## 6 England                18934 Delta              5835 fit_uk_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_uk_shared_dateweek) ## # weights:  60 (45 variable) ## initial  value 3305639.513789  ## iter  10 value 2346836.812182 ## iter  20 value 2323118.779956 ## iter  30 value 1936271.727995 ## iter  40 value 1678709.772718 ## iter  50 value 1353600.711258 ## iter  60 value 1339219.570366 ## iter  70 value 1338082.555521 ## iter  80 value 1337611.746006 ## iter  90 value 1337463.355050 ## iter 100 value 1337432.367268 ## iter 110 value 1337412.871789 ## iter 120 value 1337338.818242 ## iter 130 value 1337291.688878 ## iter 140 value 1337276.706173 ## iter 150 value 1337264.059222 ## iter 160 value 1337233.813232 ## iter 170 value 1337220.436081 ## final  value 1337218.300779  ## converged head(fit_uk_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 England 5.464160e-06 3.688731e-08 NA ## 2            BA.1.1                18932 England 7.997055e-06 4.306620e-08 NA ## 3              BA.2                18932 England 3.570619e-08 2.035961e-10 NA ## 4            BA.2.1                18932 England 3.249481e-09 3.506863e-11 NA ## 5           BA.2.10                18932 England 2.106563e-08 1.848863e-10 NA ## 6         BA.2.10.1                18932 England 6.343606e-10 1.237641e-11 NA ##      asymp.LCL    asymp.UCL DateCollected ## 1 5.391862e-06 5.536458e-06    2021-11-01 ## 2 7.912647e-06 8.081463e-06    2021-11-01 ## 3 3.530715e-08 3.610523e-08    2021-11-01 ## 4 3.180748e-09 3.318214e-09    2021-11-01 ## 5 2.070326e-08 2.142800e-08    2021-11-01 ## 6 6.101032e-10 6.586179e-10    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_UK.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - United Kingdom","text":"","code":"muller_ukbystate_mfit <- PlotMullerDailyPrevalence(fit_uk_multi_predsbystate, ncol = 3) muller_ukbystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"load-preprocessed-data","dir":"Articles","previous_headings":"","what":"Load preprocessed data","title":"Multinomial modeling - USA","text":"load qs object created metadata tar GISAID faster loading. See Introduction vignette see object created.","code":"date <- \"2022_05_03\" gisaid_metadata <- qs::qread(file = paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", date, \".qs\")) # filter our sequences from USA gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>% arrange(State, MonthYearCollected) gisaid_usa$State <- CleanAmericanStates(gisaid_usa$State) gisaid_usa <- gisaid_usa %>% filter(State %in% datasets::state.name)"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Load preprocessed data","what":"Plot total sequenced cases","title":"Multinomial modeling - USA","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_usa, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"USA\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"get-vocs","dir":"Articles","previous_headings":"Load preprocessed data","what":"Get VOCs","title":"Multinomial modeling - USA","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",    `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",    `BA.2.1` = \"BA.2.1\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_usa_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_usa_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 20]  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_usa_shared_dateweek <- SummarizeVariantsDatewise(gisaid_usa_collapsed_sel, by_state = TRUE) head(gisaid_usa_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alabama                18932 Delta                15 ## 2 Alabama                18933 Delta                 9 ## 3 Alabama                18934 Delta                10 ## 4 Alabama                18935 Delta                 8 ## 5 Alabama                18935 Others                1 ## 6 Alabama                18936 Delta                 8 fit_usa_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_usa_shared_dateweek) ## # weights:  624 (561 variable) ## initial  value 3316997.520722  ## iter  10 value 2027949.711103 ## iter  20 value 1916036.126159 ## iter  30 value 1859938.478138 ## iter  40 value 1824662.475666 ## iter  50 value 1745704.892805 ## iter  60 value 1597196.694408 ## iter  70 value 1461019.759927 ## iter  80 value 1421013.838835 ## iter  90 value 1410215.629875 ## iter 100 value 1392293.912497 ## iter 110 value 1350389.770260 ## iter 120 value 1312104.727379 ## iter 130 value 1276106.851299 ## iter 140 value 1251927.670667 ## iter 150 value 1228644.066269 ## iter 160 value 1204336.936361 ## iter 170 value 1180495.315469 ## iter 180 value 1160107.666472 ## iter 190 value 1140515.788398 ## iter 200 value 1121308.270074 ## iter 210 value 1104832.328697 ## iter 220 value 1085887.882687 ## iter 230 value 1070694.834098 ## iter 240 value 1061174.558924 ## iter 250 value 1054906.749920 ## iter 260 value 1051163.883714 ## iter 270 value 1047703.037837 ## iter 280 value 1045307.158062 ## iter 290 value 1042652.747254 ## iter 300 value 1039693.002919 ## iter 310 value 1037203.348656 ## iter 320 value 1034697.815399 ## iter 330 value 1032840.174733 ## iter 340 value 1031307.657090 ## iter 350 value 1030161.371893 ## iter 360 value 1028932.276133 ## iter 370 value 1027989.399537 ## iter 380 value 1027398.658655 ## iter 390 value 1026670.532736 ## iter 400 value 1025813.602908 ## iter 410 value 1025200.531245 ## iter 420 value 1024375.986637 ## iter 430 value 1024009.167296 ## iter 440 value 1023809.385022 ## iter 450 value 1023581.109863 ## iter 460 value 1023232.871265 ## iter 470 value 1022959.685300 ## iter 480 value 1022712.777071 ## iter 490 value 1022638.975415 ## iter 500 value 1022544.878721 ## iter 510 value 1022411.876123 ## iter 520 value 1022392.960019 ## iter 530 value 1022385.534912 ## iter 540 value 1022380.809763 ## iter 550 value 1022368.280594 ## iter 560 value 1022364.538505 ## iter 570 value 1022362.535539 ## iter 580 value 1022361.992894 ## iter 590 value 1022358.602769 ## iter 600 value 1022355.927354 ## iter 610 value 1022354.896085 ## iter 620 value 1022354.368776 ## iter 630 value 1022353.233676 ## iter 640 value 1022351.329890 ## iter 650 value 1022349.063297 ## iter 660 value 1022346.525146 ## iter 670 value 1022342.049004 ## iter 680 value 1022335.765665 ## iter 690 value 1022329.911764 ## iter 700 value 1022326.800985 ## iter 710 value 1022319.941930 ## iter 720 value 1022316.259236 ## iter 730 value 1022313.628177 ## iter 740 value 1022312.811741 ## final  value 1022312.787105  ## converged head(fit_usa_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1              BA.1                18932 Alabama 1.069554e-05 6.627229e-08 NA ## 2            BA.1.1                18932 Alabama 4.785656e-05 2.124056e-07 NA ## 3              BA.2                18932 Alabama 2.257301e-10 1.962635e-12 NA ## 4            BA.2.1                18932 Alabama 1.186416e-58 6.973750e-60 NA ## 5           BA.2.10                18932 Alabama 4.719945e-10 6.061876e-12 NA ## 6         BA.2.10.1                18932 Alabama 1.692686e-15 7.049865e-17 NA ##      asymp.LCL    asymp.UCL DateCollected ## 1 1.056565e-05 1.082543e-05    2021-11-01 ## 2 4.744025e-05 4.827287e-05    2021-11-01 ## 3 2.218834e-10 2.295768e-10    2021-11-01 ## 4 1.049733e-58 1.323099e-58    2021-11-01 ## 5 4.601134e-10 4.838756e-10    2021-11-01 ## 6 1.554511e-15 1.830860e-15    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - USA","text":"","code":"muller_usabystate_mfit <- PlotMullerDailyPrevalence(fit_usa_multi_predsbystate, ncol = 5) muller_usabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-India.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases - India","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_05_03.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",    `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",    `BA.2.1` = \"BA.2.1\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-India.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases - India","text":"","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-India.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - India","text":"","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  44 (30 variable) ## initial  value 412713.744878  ## iter  10 value 178245.778153 ## iter  20 value 156178.424542 ## iter  30 value 131833.455017 ## iter  40 value 131345.510406 ## iter  50 value 130883.197513 ## iter  60 value 130523.770906 ## iter  70 value 130477.400720 ## iter  80 value 130453.538705 ## iter  90 value 130350.447579 ## iter 100 value 130205.017476 ## iter 110 value 129638.432912 ## iter 120 value 129442.262575 ## iter 130 value 129327.539417 ## iter 140 value 129321.792586 ## iter 150 value 129304.839867 ## iter 160 value 129292.985465 ## iter 170 value 129236.937257 ## iter 180 value 129194.254763 ## final  value 129193.981242  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\", caption = \"**Source: gisaid.org and covid19bharat.org**\") the_anim"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-NewYork.html","id":"get-variants-data-for-ny-state","dir":"Articles","previous_headings":"","what":"Get variants data for NY state","title":"Animation of projected weekly cases - New York State","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_05_03.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",    `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" ) gisaid_NY <- gisaid_NY %>% filter(pangolin_lineage != \"None\")  gisaid_NY <- CollapseLineageToVOCs(   variant_df = gisaid_NY,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-NewYork.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - New York State","text":"","code":"all_state_cases <- refresh_covid19nytimes_states()  confirmed <- all_state_cases %>%   filter(location == \"New York\") %>%   filter(data_type == \"cases_total\") %>%   arrange(date)  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-NewYork.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - New York State","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_NY_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NY_weekwise <- gisaid_NY_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NY_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 451604.449626  ## iter  10 value 235636.485332 ## iter  20 value 186805.263524 ## iter  30 value 152776.583595 ## iter  40 value 131314.176040 ## iter  50 value 130494.787996 ## iter  60 value 130196.348750 ## iter  70 value 130075.249591 ## iter  80 value 130053.359370 ## iter  90 value 129936.562528 ## iter 100 value 129272.336700 ## iter 110 value 129098.772983 ## iter 120 value 129008.118896 ## iter 130 value 128979.009548 ## final  value 128923.271023  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") the_anim confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>% filter(MonthYear>\"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY <- gisaid_NY %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  40 (27 variable) ## initial  value 201473.893052  ## iter  10 value 114778.256826 ## iter  20 value 109168.167478 ## iter  30 value 101862.680637 ## iter  40 value 100686.759617 ## iter  50 value 100608.691447 ## iter  60 value 100498.692372 ## iter  70 value 100493.136026 ## iter  80 value 100476.324400 ## iter  90 value 100459.890342 ## final  value 100459.880082  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") the_anim ## Warning in knitr::include_graphics(knitr_path): It is highly recommended to use ## relative paths for images. You had absolute paths: \"/Users/saket/github/epicovr/ ## docs/articles/VariantAnimation-NewYork_files/figure-html/unnamed-chunk-5-1.gif\""},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-UK.html","id":"get-variants-data-for-uk","dir":"Articles","previous_headings":"","what":"Get variants data for UK","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_05_03.qs\") gisaid_uk <- gisaid_metadata %>%   filter(Country == \"United Kingdom\") %>%   filter(Host == \"Human\") # format metadata gisaid_uk <- FormatGISAIDMetadata(gisaid_uk)  gisaid_uk <- gisaid_uk %>% filter(State != \"\")  gisaid_uk <- gisaid_uk %>%   filter(pangolin_lineage != \"Unknown\") %>%   arrange(State, MonthYearCollected) %>%   filter(!is.na(MonthYearCollected))  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL  custom_voc_mapping <- list(   `B.1.177` = \"B.1.177\",   `BA.1.15` = \"BA.1.15+\",   `BA.1.15.1` = \"BA.1.15+\",   `BA.1.15.2` = \"BA.1.15+\",   `BA.1.1` = \"BA.1.1\",   `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\",   `BA.3` = \"BA.3\",   `BA.4` = \"BA.4\",   `BA.5` = \"BA.5\" )  gisaid_uk <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-UK.html","id":"get-daily-case-data","dir":"Articles","previous_headings":"","what":"Get daily case data","title":"Animation of projected weekly cases - United Kingdom","text":"","code":"cases.struct <- list(   date = \"date\",   areaName = \"areaName\",   newCasesByPublishDate = \"newCasesByPublishDate\" ) all_nations <- c(   \"areaType=nation\" ) cases_data <- get_data(   filters = all_nations,   structure = cases.struct ) %>% rename(new_cases = newCasesByPublishDate)   confirmed <- cases_data %>%   arrange(date) %>%   group_by(date) %>%   summarise(daily_cases = sum(new_cases))  confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-UK.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - United Kingdom","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_uk_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_uk_weekwise <- gisaid_uk_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  uk_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_uk_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  72 (51 variable) ## initial  value 7608209.963440  ## iter  10 value 3888333.954462 ## iter  20 value 3086064.928850 ## iter  30 value 3008219.098209 ## iter  40 value 2919524.030611 ## iter  50 value 2380824.162889 ## iter  60 value 2191635.799704 ## iter  70 value 2179227.242517 ## iter  80 value 2175153.855008 ## iter  90 value 2173241.865851 ## iter 100 value 2172013.855312 ## iter 110 value 2170693.878140 ## iter 120 value 2170220.371935 ## iter 130 value 2168874.990174 ## iter 140 value 2163903.999021 ## iter 150 value 2147983.687941 ## iter 160 value 2142774.852525 ## iter 170 value 2139290.103695 ## iter 180 value 2137577.581865 ## iter 190 value 2136076.220026 ## iter 200 value 2134889.935052 ## final  value 2134367.479824  ## converged the_anim <- PlotVariantPrevalenceAnimated(uk_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\", caption = \"**Source: gisaid.org and gov.uk<br>**\") the_anim confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   filter(MonthYear > \"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_uk <- gisaid_uk %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_weekwise <- SummarizeVariantsWeekwise(gisaid_uk)  voc_to_keep <- gisaid_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_weekwise <- gisaid_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  52 (36 variable) ## initial  value 3682295.161508  ## iter  10 value 2334487.676658 ## iter  20 value 2156181.375721 ## iter  30 value 2097333.143903 ## iter  40 value 1925479.436360 ## iter  50 value 1888089.556591 ## iter  60 value 1886360.881514 ## iter  70 value 1886204.912175 ## final  value 1886191.296615  ## converged the_anim <- PlotVariantPrevalenceAnimated(cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and gov.uk<br>**\") the_anim ## Warning in knitr::include_graphics(knitr_path): It is highly recommended to use ## relative paths for images. You had absolute paths: \"/Users/saket/github/epicovr/ ## docs/articles/VariantAnimation-UK_files/figure-html/unnamed-chunk-5-1.gif\""},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-USA.html","id":"get-variants-data-for-nyc","dir":"Articles","previous_headings":"","what":"Get variants data for NYC","title":"Animation of projected weekly cases - USA","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_05_03.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL vocs[[\"lambda\"]] <- NULL vocs[[\"beta\"]] <- NULL vocs[[\"gamma\"]] <- NULL  custom_voc_mapping <- list(   `BA.1.1` = \"BA.1.1\",    `BA.1` = \"BA.1\",   `BA.2` = \"BA.2\",   `BA.2.1` = \"BA.2.1\",   `BA.2.9` = \"BA.2.9\",   `BA.1.17.2` = \"BA.1.17.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10.1\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12.1\" ) gisaid_usa <- gisaid_usa %>% filter(pangolin_lineage != \"None\")  gisaid_usa <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-USA.html","id":"get-weekly-cases-for-usa","dir":"Articles","previous_headings":"","what":"Get weekly cases for USA","title":"Animation of projected weekly cases - USA","text":"","code":"all_state_cases <- refresh_covid19nytimes_states()  confirmed.tmp <- all_state_cases %>%   filter(data_type == \"cases_total\") %>%   arrange(date) confirmed <- confirmed.tmp %>% group_by(date) %>% summarise(value = sum(value))  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-USA.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - USA","text":"Look cases October,2021 :","code":"voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  56 (39 variable) ## initial  value 8353009.667774  ## iter  10 value 3065678.950033 ## iter  20 value 2726332.444358 ## iter  30 value 2586371.755242 ## iter  40 value 2159098.859544 ## iter  50 value 1691146.350470 ## iter  60 value 1671002.869221 ## iter  70 value 1667182.495782 ## iter  80 value 1665849.124676 ## iter  90 value 1665653.463138 ## iter 100 value 1664667.891046 ## iter 110 value 1655198.667431 ## iter 120 value 1652681.262587 ## iter 130 value 1652115.599561 ## iter 140 value 1651832.762286 ## iter 150 value 1651683.913446 ## final  value 1651538.644389  ## converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") the_anim confirmed$MonthYear <- GetMonthYear(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>% filter(MonthYear>\"Oct 2021\") %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_usa_subset <- gisaid_usa %>% filter(MonthYearCollected > \"Oct 2021\") gisaid_usa_weekwise <- SummarizeVariantsWeekwise(gisaid_usa_subset)  voc_to_keep <- gisaid_usa_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_usa_weekwise <- gisaid_usa_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  usa_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_usa_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 3336417.066191  ## iter  10 value 1571987.846356 ## iter  20 value 1482859.515247 ## iter  30 value 1313503.714736 ## iter  40 value 1159174.055511 ## iter  50 value 1145553.629256 ## iter  60 value 1144662.903695 ## iter  70 value 1144521.156531 ## iter  80 value 1144507.851246 ## iter  90 value 1144412.260906 ## iter 100 value 1144208.260371 ## iter 110 value 1144188.016980 ## final  value 1144187.436677  ## converged the_anim <- PlotVariantPrevalenceAnimated(usa_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in the USA by variant\", caption = \"**Source: gisaid.org and covid19nytimes<br>**\") the_anim ## Warning in knitr::include_graphics(knitr_path): It is highly recommended to use ## relative paths for images. You had absolute paths: \"/Users/saket/github/epicovr/ ## docs/articles/VariantAnimation-USA_files/figure-html/unnamed-chunk-5-1.gif\""},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_04_27.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases","text":"","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases","text":"","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  40 (27 variable) ## initial  value 390097.058700  ## iter  10 value 178248.743762 ## iter  20 value 146140.552484 ## iter  30 value 126267.710711 ## iter  40 value 125868.710205 ## iter  50 value 125468.176073 ## iter  60 value 125436.880514 ## iter  70 value 125420.104607 ## iter  80 value 125297.844401 ## iter  90 value 124823.115937 ## iter 100 value 124459.757857 ## iter 110 value 124167.683437 ## iter 120 value 124033.635921 ## iter 130 value 124012.447827 ## iter 140 value 123986.653588 ## iter 150 value 123964.465896 ## iter 160 value 123833.698243 ## iter 170 value 123803.428152 ## iter 180 value 123796.541234 ## iter 190 value 123790.764485 ## iter 200 value 123787.290033 ## iter 210 value 123769.180636 ## iter 220 value 123761.696812 ## final  value 123761.459795  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\") the_anim"},{"path":"http://saket-choudhary.me/epicovr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saket Choudhary. Maintainer.","code":""},{"path":"http://saket-choudhary.me/epicovr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choudhary S (2022). epicovr: R package perform modeling virus prevalence data GISAID. https://saketkc.github.io/epicovr, http://saket-choudhary./epicovr/.","code":"@Manual{,   title = {epicovr: R package to perform modeling on virus prevalence data from GISAID},   author = {Saket Choudhary},   year = {2022},   note = {https://saketkc.github.io/epicovr, http://saket-choudhary.me/epicovr/}, }"},{"path":"http://saket-choudhary.me/epicovr/index.html","id":"epicovr","dir":"","previous_headings":"","what":"R package to perform modeling on virus prevalence data from GISAID","title":"R package to perform modeling on virus prevalence data from GISAID","text":"epicovr R-package designed analysis sequencing metadata deposited GISAID.","code":""},{"path":"http://saket-choudhary.me/epicovr/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"R package to perform modeling on virus prevalence data from GISAID","text":"Epicovr currently supports following features: Read preprocess metadata file downloaded GISAID: Vignette Plot variant prevalence: Vignette Fit multinomial models variant prevalence data: India, USA, Canada, UK, Australia, SouthAfrica, Estimate totals prevalence variants projecting case prevalence data multinomila fits: India, New York state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from the USA â€” CleanAmericanStates","title":"Clean states from the USA â€” CleanAmericanStates","text":"Clean states USA","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from the USA â€” CleanAmericanStates","text":"","code":"CleanAmericanStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from the USA â€” CleanAmericanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from the USA â€” CleanAmericanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from Canada â€” CleanCanadaStates","title":"Clean states from Canada â€” CleanCanadaStates","text":"Clean states Canada","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from Canada â€” CleanCanadaStates","text":"","code":"CleanCanadaStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from Canada â€” CleanCanadaStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from Canada â€” CleanCanadaStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Indian States â€” CleanIndianStates","title":"Clean Indian States â€” CleanIndianStates","text":"Clean Indian States","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Indian States â€” CleanIndianStates","text":"","code":"CleanIndianStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Indian States â€” CleanIndianStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Indian States â€” CleanIndianStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from South Africa â€” CleanSouthAfricanStates","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"Clean states South Africa","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"","code":"CleanSouthAfricanStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"Collpase pangolin lineage list VOCs","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"","code":"CollapseLineageToVOCs(   variant_df,   vocs = GetVOCs(),   custom_voc_mapping = NULL,   summarize = TRUE )"},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"variant_df dataframe \"pangolin_lineage\" column vocs named list VOC (variant concernt) name key list lineages VOC. method replace lineages VOC name. custom_voc_mapping named vector custom mapping naming lineages. See example.","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"dataframe new column \"lineage_collpased\".","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","text":"","code":"CombineCases(cases_sequenced, confirmed_long)"},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","text":"cases_sequenced long dataframe per state sequenced cases cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"","code":"CombineSequencedCases(   cases_sequenced,   confirmed_long,   prune_oversequenced = TRUE,   month.min = NULL,   month.max = NULL,   max.percent = 100 )"},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"cases_sequenced long dataframe per state sequenced cases prune_oversequenced Whether round percentages 100 100. Default TRUE cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert monthwise counts to prevalence â€” CountsToPrevalence","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"Convert monthwise counts prevalence","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"","code":"CountsToPrevalence(variant_df)"},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"dataframe monthwise prevalence variants","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/EpicovrTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set them â€” EpicovrTheme","title":"Set them â€” EpicovrTheme","text":"Set ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/EpicovrTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set them â€” EpicovrTheme","text":"","code":"EpicovrTheme()"},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"Filter GISAID India Metadata India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"","code":"FilterGISAIDIndia(gisaid_metadata_all)"},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"gisaid_metadata_all dataframe GISAID metadata","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"dataframe Indian entries Human date known","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"Format metadata.tar.x file downloaded GISAID missing columns","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"","code":"FormatGISAIDMetadata(   df,   collection_col = \"Collection date\",   submission_col = \"Submission date\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"df GISAID metadata dataframe collection_col Name column representing date collection (Collection date) submission_col Name column representing date submission (Submission date)","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"data frame following extra columns: DateCollected, MonthYearCollected, YearCollected, MonthCollected, WeekCollected DateCollectedNumeric, MonthYearCollectedNumeric DateSubmitted, MonthYearSubmitted, YearSubmitted, MonthSubmitted, WeekSubmitted DateSubmittedNumeric, MonthYearSubmittedNumeric","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"Geocode given address get latitude, longitude Gooogle","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"","code":"GeocodeAddress(address, api.key = NULL, restrict.to = NULL)"},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"address String address geocode api.key API key Google Maps restrict.Country name search restricted , Currently supports 'India'","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"dataframe geocoded address","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine filetype â€” GetFiletype","title":"Determine filetype â€” GetFiletype","text":"Determine filetype","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine filetype â€” GetFiletype","text":"","code":"GetFiletype(path)"},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine filetype â€” GetFiletype","text":"path Path file","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine filetype â€” GetFiletype","text":"Extension file","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"Get daily confirmed cases India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"","code":"GetIndiaConfirmedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"Get India monthwose cases long","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"","code":"GetIndiaConfirmedCasesMonthlyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"","code":"GetIndiaConfirmedCasesWeeklyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"Get daily cases India given status type","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"","code":"GetIndiaDailyCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   status = \"Confirmed\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"url URL fetch data status One \"Confirmed\", \"Recovered\", \"Deceased\"","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily statewise data for India â€” GetIndiaDailyData","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"'Status' column one 'Confirmed', 'Deceased' 'Recovered'","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"","code":"GetIndiaDailyData(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"Get daily deceased cases India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"","code":"GetIndiaDeceasedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaHospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data for India â€” GetIndiaHospitalization","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"Get hospitalization data India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaHospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"","code":"GetIndiaHospitalization(url = \"\")"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of Indian name states â€” GetIndianStates","title":"Get a list of Indian name states â€” GetIndianStates","text":"Get list Indian name states","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of Indian name states â€” GetIndianStates","text":"","code":"GetIndianStates()"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of Indian name states â€” GetIndianStates","text":"list state abbreviation key full name value","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"Get MonthYear (zoo) dataframe string formatted data column","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"","code":"GetMonthYear(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"datecol vector string formatted dates datefmt Format date (default Y-m-d)","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"vector dates converted MonthYear format (zoo::.yearmon)","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants of concern â€” GetVOCs","title":"Get variants of concern â€” GetVOCs","text":"Get variants concern","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants of concern â€” GetVOCs","text":"","code":"GetVOCs()"},{"path":"http://saket-choudhary.me/epicovr/reference/GetVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants of concern â€” GetVOCs","text":"list variants concern pangolin lineage","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"Plot heatmap cases sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"","code":"PlotSequencedPropHeatmap(df)"},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"heatmap total percentage cases sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"Read instrument metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"","code":"ReadAuspiceInstrument(path)"},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"dataframe instrument related metadata","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"Read metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"","code":"ReadAuspiceMetadata(path)"},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"dataframe collated metadata","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"Read metadata downloaded GISAID","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"","code":"ReadGISAIDMetada(path, showProgress = FALSE, ...)"},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"path Path tar.xz metadata.txt downloaded GISAID showProgress Whether print progress bars fread ... parameters data.table::fread","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"data frame parsed metadata extra columns","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"function removes: 1. Commas space 2. Hyphen space 3. Multiple dots single space 4. Multiple spacies single space 5. NA \"UNKNOWN\"","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"","code":"SanitizeColumn(col)"},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"col String vector","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"string vector sanitized entries","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"","code":"SummarizeVariantsDatewise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"Summarize total number variants per month","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"","code":"SummarizeVariantsMonthwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"","code":"SummarizeVariantsWeekwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"Get total sequenced samples per country","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"","code":"TotalSequencesPerMonthCountrywise(variant_df, rename_country_as_state = TRUE)"},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"dataframe sequencing statistics per country","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthStatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"Get total number sequenced samples per month Country","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthStatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"","code":"TotalSequencesPerMonthStatewise(variant_df, drop_country = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthStatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"dataframe sequencing statistics per state per country","code":""},{"path":[]},{"path":"http://saket-choudhary.me/epicovr/news/index.html","id":"changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"epicovr 0.1.1 (Unreleased)","text":"Update theme use Set3 colors default Add caption parameter PlotVariantPrevalenceAnimated() Change default xlable rotation 90 PlotVariantPrevalenceAnimated()","code":""}]
