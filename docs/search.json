[{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"get-cases-data","dir":"Articles","previous_headings":"","what":"Get cases data","title":"Introduction to epicovr","text":"use covid19bharat.org get tally daily confirmed cases summarize monthly level.","code":"indian_state_cases <- GetIndiaConfirmedCasesMonthlyLong() india_cases <- indian_state_cases %>% filter(State == \"India\") head(india_cases) ##   MonthYear State   value      type ## 1  Mar 2020 India    1635 Confirmed ## 2  Apr 2020 India   33232 Confirmed ## 3  May 2020 India  155781 Confirmed ## 4  Jun 2020 India  395044 Confirmed ## 5  Jul 2020 India 1111273 Confirmed ## 6  Aug 2020 India 1990350 Confirmed"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-cases-for-india","dir":"Articles","previous_headings":"Get cases data","what":"Plot cases for India","title":"Introduction to epicovr","text":"easy visualize monthly case counts bar plot:","code":"p1 <- BarPlot(india_cases, ylabel = \"Cases per month\", label_si = TRUE) p1"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"read-variant-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Read variant data from GISAID","title":"Introduction to epicovr","text":"utilize GISAID data look prevalence variants. access data, GISAID requires registration.","code":"current_date <- \"2022_04_29\" fpath.tar <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".tar.xz\") fpath.qs <- paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", current_date, \".qs\")  if (file.exists(fpath.qs)) {   gisaid_metadata <- qs::qread(file = fpath.qs) } else {   gisaid_metadata <- ReadGISAIDMetada(path = fpath.tar)   qs::qsave(gisaid_metadata, fpath.qs) }"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot total sequenced cases","title":"Introduction to epicovr","text":"can look absolute number cases sequenced country filtering information metadata made available GISAID (includes countries). , visualize total sequenced cases coming India:","code":"gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata) country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p2 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE) p2"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"overall-how-much-has-india-sequenced-over-months","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Overall, how much has India sequenced over months?","title":"Introduction to epicovr","text":"absolute numbers informative, useful metric proportion cases (cases sequenced total cases) getting sequenced. look proportion cases sequenced India course pandemic:  context, can combine three plots :","code":"india_cases_long <- GetIndiaConfirmedCasesMonthlyLong() %>% filter(State == \"India\") india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = country_seq_stats,   confirmed_long = india_cases_long ) p3 <- BarPlot(india_sequencing_proportion, yaxis = \"percent_sequenced_collected\", ylabel = \"%  deposited to GISAID\", color = \"yellowgreen\") p3 p1 / p2 / p3"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-proportion-of-cases-that-been-deposited-from-each-state","dir":"Articles","previous_headings":"Read variant data from GISAID","what":"Plot proportion of cases that been deposited from each state","title":"Introduction to epicovr","text":"can break proportion sequenced cases state level:","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india, drop_country = TRUE) seq_stats <- rbind(country_seq_stats, state_seq_stats) state_cases_long <- GetIndiaConfirmedCasesMonthlyLong() india_sequencing_proportion <- CombineSequencedCases(   cases_sequenced = seq_stats,   confirmed_long = state_cases_long,   month.min = \"Feb 2020\",   month.max = \"Apr 2022\",   max.percent = 5 )  india_sequencing_proportion$State <- factor(   x = india_sequencing_proportion$State,   levels = as.character(GetIndianStates()) ) p4 <- PlotSequencedPropHeatmap(india_sequencing_proportion) p4"},{"path":"http://saket-choudhary.me/epicovr/articles/Introduction.html","id":"plot-prevalence","dir":"Articles","previous_headings":"","what":"Plot Prevalence","title":"Introduction to epicovr","text":"Finally, look prevalence variants variants concern (VOCs):  animated version prevalence plot, check VariantAnimation.","code":"india_month_counts <- SummarizeVariantsMonthwise(gisaid_india) india_month_counts$State <- \"India\" india_month_prevalence <- CountsToPrevalence(india_month_counts) vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]]  vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) india_month_prevalence <- CollapseLineageToVOCs(   variant_df = india_month_prevalence,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping, summarize = FALSE )  p5 <- StackedBarPlotPrevalence(india_month_prevalence) p5"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Australia.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Australia","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_australia, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Australia\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Australia.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Australia","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_australia_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_australia,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_australia_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_australia_collapsed_sel <- gisaid_australia_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_australia_shared_dateweek <- SummarizeVariantsDatewise(gisaid_australia_collapsed_sel, by_state = TRUE) head(gisaid_australia_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State                        DateCollectedNumeric lineage_collapsed     n ##   <chr>                                       <dbl> <chr>             <int> ## 1 Australian Capital Territory                18932 Delta                 8 ## 2 Australian Capital Territory                18933 Delta                16 ## 3 Australian Capital Territory                18934 Delta                 8 ## 4 Australian Capital Territory                18935 Delta                 8 ## 5 Australian Capital Territory                18936 Delta                15 ## 6 Australian Capital Territory                18938 Delta                16 fit_australia_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_australia_shared_dateweek) ## # weights:  70 (54 variable) ## initial  value 102963.943717  ## iter  10 value 66023.012424 ## iter  20 value 64304.827002 ## iter  30 value 62618.766778 ## iter  40 value 58250.777813 ## iter  50 value 44909.939875 ## iter  60 value 41958.693934 ## iter  70 value 40719.124472 ## iter  80 value 40410.712024 ## iter  90 value 39801.986004 ## iter 100 value 39633.870745 ## iter 110 value 39102.229169 ## iter 120 value 39091.923098 ## iter 130 value 39065.620144 ## iter 140 value 39034.456986 ## iter 150 value 39002.414082 ## iter 160 value 38845.069294 ## iter 170 value 38800.286080 ## iter 180 value 38628.825826 ## iter 190 value 38616.612971 ## iter 200 value 38557.776508 ## iter 210 value 38524.765802 ## iter 220 value 38522.023040 ## final  value 38522.021259  ## converged head(fit_australia_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric                        State ## 1           BA.2.10                18932 Australian Capital Territory ## 2           BA.2.12                18932 Australian Capital Territory ## 3             Delta                18932 Australian Capital Territory ## 4      Omicron-BA.1                18932 Australian Capital Territory ## 5    Omicron-BA.1.1                18932 Australian Capital Territory ## 6      Omicron-BA.2                18932 Australian Capital Territory ##           prob           SE df    asymp.LCL    asymp.UCL DateCollected ## 1 3.364313e-08 1.113984e-09 NA 3.145976e-08 3.582650e-08    2021-11-01 ## 2 6.266839e-08 1.752110e-09 NA 5.923431e-08 6.610246e-08    2021-11-01 ## 3 9.995033e-01 1.046668e-05 NA 9.994828e-01 9.995238e-01    2021-11-01 ## 4 3.736232e-05 1.616256e-06 NA 3.419452e-05 4.053012e-05    2021-11-01 ## 5 2.052432e-05 7.330438e-07 NA 1.908758e-05 2.196106e-05    2021-11-01 ## 6 1.242450e-08 3.594376e-10 NA 1.172002e-08 1.312899e-08    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Australia.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Australia","text":"","code":"muller_australiabystate_mfit <- PlotMullerDailyPrevalence(fit_australia_multi_predsbystate, ncol = 3) muller_australiabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Canada.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - Canada","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_canada, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"Canada\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Canada.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - Canada","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_canada_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_canada,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed %>% filter(MonthYearCollected >= \"Nov 2021\")  vocs_to_keep <- table(gisaid_canada_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_canada_collapsed_sel <- gisaid_canada_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_canada_shared_dateweek <- SummarizeVariantsDatewise(gisaid_canada_collapsed_sel, by_state = TRUE) head(gisaid_canada_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alberta                18932 Delta               134 ## 2 Alberta                18933 Delta                98 ## 3 Alberta                18934 Delta                94 ## 4 Alberta                18935 Delta                96 ## 5 Alberta                18936 Delta                66 ## 6 Alberta                18937 Delta                54 fit_canada_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_canada_shared_dateweek) ## # weights:  77 (60 variable) ## initial  value 211131.251172  ## iter  10 value 161359.267379 ## iter  20 value 159077.483574 ## iter  30 value 153171.599037 ## iter  40 value 144299.126584 ## iter  50 value 126872.119693 ## iter  60 value 106903.754076 ## iter  70 value 102712.808080 ## iter  80 value 102072.010107 ## iter  90 value 101661.299962 ## iter 100 value 101624.525229 ## iter 110 value 101520.561187 ## iter 120 value 101273.275763 ## iter 130 value 101267.876843 ## iter 140 value 101267.174317 ## iter 150 value 101266.785295 ## iter 160 value 101265.790672 ## iter 170 value 101257.680240 ## iter 180 value 101208.605457 ## iter 190 value 101201.539568 ## iter 200 value 101199.846150 ## iter 210 value 101194.562113 ## iter 220 value 101186.719793 ## final  value 101186.417589  ## converged head(fit_canada_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1           BA.2.10                18932 Alberta 1.266333e-07 5.627030e-09 NA ## 2           BA.2.12                18932 Alberta 1.965714e-08 4.527884e-10 NA ## 3             Delta                18932 Alberta 9.997904e-01 3.018873e-06 NA ## 4      Omicron-BA.1                18932 Alberta 8.624215e-05 1.585356e-06 NA ## 5    Omicron-BA.1.1                18932 Alberta 1.726207e-05 2.585786e-07 NA ## 6      Omicron-BA.2                18932 Alberta 1.596777e-08 3.476015e-10 NA ##      asymp.LCL    asymp.UCL DateCollected ## 1 1.156045e-07 1.376620e-07    2021-11-01 ## 2 1.876969e-08 2.054459e-08    2021-11-01 ## 3 9.997844e-01 9.997963e-01    2021-11-01 ## 4 8.313491e-05 8.934939e-05    2021-11-01 ## 5 1.675527e-05 1.776888e-05    2021-11-01 ## 6 1.528648e-08 1.664906e-08    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_Canada.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - Canada","text":"","code":"muller_canadabystate_mfit <- PlotMullerDailyPrevalence(fit_canada_multi_predsbystate, ncol = 3) muller_canadabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - India","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_india, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - India","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_india) state_seq_stats_summary <- state_seq_stats %>% group_by(State) %>% summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State==\"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary,xaxis = \"State\", ylabel = \"Total sequences deposited\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"India\") p1"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - India","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_india_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_india_collapsed_sel <- gisaid_india_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") vocs_to_keep <- table(gisaid_india_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_india_collapsed_sel <- gisaid_india_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_india_shared_dateweek <- SummarizeVariantsDatewise(gisaid_india_collapsed_sel, by_state = TRUE) head(gisaid_india_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State             DateCollectedNumeric lineage_collapsed     n ##   <chr>                            <dbl> <chr>             <int> ## 1 Andaman & Nicobar                18970 Delta                 6 ## 2 Andaman & Nicobar                18970 Others                1 ## 3 Andaman & Nicobar                18971 Delta                 2 ## 4 Andaman & Nicobar                18976 Delta                 1 ## 5 Andaman & Nicobar                18981 Delta                 1 ## 6 Andaman & Nicobar                18983 Delta                 1 fit_india_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_india_shared_dateweek) ## # weights:  304 (259 variable) ## initial  value 143333.826026  ## iter  10 value 111386.298752 ## iter  20 value 103820.054335 ## iter  30 value 101546.155947 ## iter  40 value 100162.598919 ## iter  50 value 97856.559943 ## iter  60 value 95946.374736 ## iter  70 value 93890.355674 ## iter  80 value 90663.062333 ## iter  90 value 86329.597420 ## iter 100 value 81852.900818 ## iter 110 value 78934.449144 ## iter 120 value 77399.298588 ## iter 130 value 76725.412968 ## iter 140 value 75911.412635 ## iter 150 value 74893.383487 ## iter 160 value 74030.590881 ## iter 170 value 73275.571766 ## iter 180 value 72831.153920 ## iter 190 value 72342.724937 ## iter 200 value 72110.946023 ## iter 210 value 72002.937156 ## iter 220 value 71635.592686 ## iter 230 value 71474.319025 ## iter 240 value 71362.445338 ## iter 250 value 71240.575390 ## iter 260 value 71193.146719 ## iter 270 value 71176.130368 ## iter 280 value 71152.271074 ## iter 290 value 71129.143017 ## iter 300 value 71123.728279 ## iter 310 value 71123.509908 ## final  value 71123.267158  ## converged head(fit_india_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric             State         prob ## 1           BA.2.10                18932 Andaman & Nicobar 1.824212e-04 ## 2           BA.2.12                18932 Andaman & Nicobar 1.522185e-05 ## 3             Delta                18932 Andaman & Nicobar 9.938631e-01 ## 4      Omicron-BA.1                18932 Andaman & Nicobar 3.298190e-30 ## 5    Omicron-BA.1.1                18932 Andaman & Nicobar 3.708088e-26 ## 6      Omicron-BA.2                18932 Andaman & Nicobar 6.742968e-06 ##             SE df    asymp.LCL    asymp.UCL DateCollected ## 1 2.888193e-06 NA 1.767604e-04 1.880819e-04    2021-11-01 ## 2 2.896551e-07 NA 1.465413e-05 1.578956e-05    2021-11-01 ## 3 9.079409e-05 NA 9.936851e-01 9.940410e-01    2021-11-01 ## 4 1.445695e-31 NA 3.014839e-30 3.581541e-30    2021-11-01 ## 5 1.045594e-27 NA 3.503156e-26 3.913021e-26    2021-11-01 ## 6 1.717740e-07 NA 6.406297e-06 7.079639e-06    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_India.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - India","text":"","code":"muller_indiabystate_mfit <- PlotMullerDailyPrevalence(fit_india_multi_predsbystate) muller_indiabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_southafrica, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"plot-stateswise-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot stateswise sequenced cases","title":"Multinomial modeling - South Africa","text":"","code":"state_seq_stats <- TotalSequencesPerMonthStatewise(gisaid_southafrica) state_seq_stats_summary <- state_seq_stats %>% group_by(State) %>% summarise(value = sum(value)) state_seq_stats_summary$State[state_seq_stats_summary$State==\"Dadra and Nagar Haveli and Daman and Diu\"] <- \"Dadra/N Haveli/Daman/Diu\" p1 <- BarPlot(state_seq_stats_summary,xaxis = \"State\", ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"South Africa\") p1"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"get-vocs","dir":"Articles","previous_headings":"Plot stateswise sequenced cases","what":"Get VOCs","title":"Multinomial modeling - South Africa","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_southafrica_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_southafrica,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\") %>%   filter(State!=\"Unknown\")  vocs_to_keep <- table(gisaid_southafrica_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_southafrica_collapsed_sel <- gisaid_southafrica_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep))  gisaid_southafrica_shared_dateweek <- SummarizeVariantsDatewise(gisaid_southafrica_collapsed_sel, by_state = TRUE) head(gisaid_southafrica_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State        DateCollectedNumeric lineage_collapsed     n ##   <chr>                       <dbl> <chr>             <int> ## 1 Eastern Cape                18933 Delta                 2 ## 2 Eastern Cape                18934 Delta                 2 ## 3 Eastern Cape                18935 Delta                 1 ## 4 Eastern Cape                18938 Delta                 1 ## 5 Eastern Cape                18940 Delta                 1 ## 6 Eastern Cape                18945 Delta                 1 fit_southafrica_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_southafrica_shared_dateweek) ## # weights:  88 (70 variable) ## initial  value 26005.495920  ## iter  10 value 16247.427737 ## iter  20 value 15501.553155 ## iter  30 value 15234.444973 ## iter  40 value 15107.627440 ## iter  50 value 14400.877430 ## iter  60 value 13848.772573 ## iter  70 value 13603.510704 ## iter  80 value 13219.351758 ## iter  90 value 13070.225282 ## iter 100 value 12856.833514 ## iter 110 value 12748.143034 ## iter 120 value 12675.820692 ## iter 130 value 12581.669874 ## iter 140 value 12576.232656 ## iter 150 value 12566.762909 ## final  value 12566.761558  ## converged head(fit_southafrica_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric        State         prob           SE ## 1           BA.2.10                18932 Eastern Cape 1.627587e-03 8.548874e-05 ## 2             Delta                18932 Eastern Cape 3.612843e-01 1.614315e-02 ## 3      Omicron-BA.1                18932 Eastern Cape 2.278710e-01 7.166105e-03 ## 4      Omicron-BA.2                18932 Eastern Cape 2.967278e-03 1.162455e-04 ## 5      Omicron-BA.3                18932 Eastern Cape 2.241367e-03 1.575879e-04 ## 6      Omicron-BA.4                18932 Eastern Cape 5.481813e-10 4.444790e-11 ##   df    asymp.LCL    asymp.UCL DateCollected ## 1 NA 1.460032e-03 1.795142e-03    2021-11-01 ## 2 NA 3.296443e-01 3.929243e-01    2021-11-01 ## 3 NA 2.138257e-01 2.419163e-01    2021-11-01 ## 4 NA 2.739441e-03 3.195115e-03    2021-11-01 ## 5 NA 1.932500e-03 2.550233e-03    2021-11-01 ## 6 NA 4.610650e-10 6.352976e-10    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_SouthAfrica.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - South Africa","text":"","code":"muller_southafricabystate_mfit <- PlotMullerDailyPrevalence(fit_southafrica_multi_predsbystate, ncol = 3) muller_southafricabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_UK.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"","what":"Plot total sequenced cases","title":"Multinomial modeling - United Kingdom","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_uk, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"United Kingdom\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_UK.html","id":"get-vocs","dir":"Articles","previous_headings":"","what":"Get VOCs","title":"Multinomial modeling - United Kingdom","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_uk_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_uk,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed %>% filter(MonthYearCollected >= \"Nov 2021\") %>% filter(lineage_collapsed!=\"Unassigned\")  vocs_to_keep <- table(gisaid_uk_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 100]  gisaid_uk_collapsed_sel <- gisaid_uk_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_uk_shared_dateweek <- SummarizeVariantsDatewise(gisaid_uk_collapsed_sel, by_state = TRUE) head(gisaid_uk_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 England                18932 Delta              5534 ## 2 England                18932 Others                3 ## 3 England                18933 Delta              4313 ## 4 England                18933 Omicron-BA.1          1 ## 5 England                18933 Others                1 ## 6 England                18934 Delta              5835 fit_uk_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_uk_shared_dateweek) ## # weights:  48 (35 variable) ## initial  value 2969463.315934  ## iter  10 value 2215700.508844 ## iter  20 value 2139784.592652 ## iter  30 value 1747830.070656 ## iter  40 value 1321601.888930 ## iter  50 value 1289915.746139 ## iter  60 value 1278616.715654 ## iter  70 value 1277511.421914 ## iter  80 value 1277373.055633 ## iter  90 value 1277354.432253 ## iter 100 value 1277320.117097 ## iter 110 value 1277291.639058 ## iter 120 value 1277282.119064 ## iter 130 value 1277276.694260 ## final  value 1277263.651426  ## converged head(fit_uk_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1           BA.2.10                18932 England 1.877627e-08 1.584525e-10 NA ## 2           BA.2.12                18932 England 7.229013e-09 5.336357e-11 NA ## 3             Delta                18932 England 9.999376e-01 3.034408e-07 NA ## 4      Omicron-BA.1                18932 England 5.374605e-06 3.629061e-08 NA ## 5    Omicron-BA.1.1                18932 England 7.792638e-06 4.198030e-08 NA ## 6      Omicron-BA.2                18932 England 3.404378e-08 1.935298e-10 NA ##      asymp.LCL    asymp.UCL DateCollected ## 1 1.846571e-08 1.908683e-08    2021-11-01 ## 2 7.124423e-09 7.333604e-09    2021-11-01 ## 3 9.999370e-01 9.999382e-01    2021-11-01 ## 4 5.303477e-06 5.445734e-06    2021-11-01 ## 5 7.710358e-06 7.874918e-06    2021-11-01 ## 6 3.366447e-08 3.442309e-08    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_UK.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - United Kingdom","text":"","code":"muller_ukbystate_mfit <- PlotMullerDailyPrevalence(fit_uk_multi_predsbystate, ncol = 3) muller_ukbystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"load-preprocessed-data","dir":"Articles","previous_headings":"","what":"Load preprocessed data","title":"Multinomial modeling - USA","text":"load qs object created metadata tar GISAID faster loading. See Introduction vignette see object created.","code":"date <- \"2022_04_29\" gisaid_metadata <- qs::qread(file = paste0(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_\", date, \".qs\")) # filter our sequences from USA gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>% arrange(State, MonthYearCollected) gisaid_usa$State <- CleanAmericanStates(gisaid_usa$State) gisaid_usa <- gisaid_usa %>% filter(State %in% datasets::state.name)"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"plot-total-sequenced-cases","dir":"Articles","previous_headings":"Load preprocessed data","what":"Plot total sequenced cases","title":"Multinomial modeling - USA","text":"","code":"country_seq_stats <- TotalSequencesPerMonthCountrywise(gisaid_usa, rename_country_as_state = TRUE) p0 <- BarPlot(country_seq_stats, ylabel = \"Sequenced per month\", color = \"slateblue1\", label_si = TRUE, xangle = 90, title = \"USA\") p0"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"get-vocs","dir":"Articles","previous_headings":"Load preprocessed data","what":"Get VOCs","title":"Multinomial modeling - USA","text":"","code":"vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_usa_collapsed <- CollapseLineageToVOCs(   variant_df = gisaid_usa,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed %>%   filter(MonthYearCollected >= \"Nov 2021\") %>%   filter(lineage_collapsed != \"Unassigned\")  vocs_to_keep <- table(gisaid_usa_collapsed_sel$lineage_collapsed) vocs_to_keep <- vocs_to_keep[vocs_to_keep > 20]  gisaid_usa_collapsed_sel <- gisaid_usa_collapsed_sel %>% filter(lineage_collapsed %in% names(vocs_to_keep)) gisaid_usa_shared_dateweek <- SummarizeVariantsDatewise(gisaid_usa_collapsed_sel, by_state = TRUE) head(gisaid_usa_shared_dateweek) ## # A tibble: 6 Ã— 4 ##   State   DateCollectedNumeric lineage_collapsed     n ##   <chr>                  <dbl> <chr>             <int> ## 1 Alabama                18932 Delta                15 ## 2 Alabama                18933 Delta                 9 ## 3 Alabama                18934 Delta                10 ## 4 Alabama                18935 Delta                 8 ## 5 Alabama                18935 Others                1 ## 6 Alabama                18936 Delta                 8 fit_usa_multi_predsbystate <- FitMultinomStatewiseDaily(gisaid_usa_shared_dateweek) ## # weights:  468 (408 variable) ## initial  value 2911094.053615  ## iter  10 value 1962429.479023 ## iter  20 value 1850896.374269 ## iter  30 value 1814498.014889 ## iter  40 value 1771788.401050 ## iter  50 value 1671439.811309 ## iter  60 value 1553241.408132 ## iter  70 value 1440992.247151 ## iter  80 value 1419121.162367 ## iter  90 value 1402138.575359 ## iter 100 value 1362621.014646 ## iter 110 value 1309069.570995 ## iter 120 value 1277376.687029 ## iter 130 value 1249167.176536 ## iter 140 value 1218296.120100 ## iter 150 value 1192548.446716 ## iter 160 value 1165873.441958 ## iter 170 value 1148809.554011 ## iter 180 value 1129814.406257 ## iter 190 value 1111364.242682 ## iter 200 value 1093669.784063 ## iter 210 value 1075209.926677 ## iter 220 value 1060913.093640 ## iter 230 value 1050870.746547 ## iter 240 value 1035970.709872 ## iter 250 value 1028223.573011 ## iter 260 value 1023125.337903 ## iter 270 value 1019121.713538 ## iter 280 value 1014605.389109 ## iter 290 value 1011556.896070 ## iter 300 value 1008690.104862 ## iter 310 value 1006120.869983 ## iter 320 value 1004103.119494 ## iter 330 value 1002403.144966 ## iter 340 value 999634.856938 ## iter 350 value 997873.087809 ## iter 360 value 996543.010953 ## iter 370 value 995824.971670 ## iter 380 value 995569.558383 ## iter 390 value 995541.866005 ## iter 400 value 995537.230095 ## iter 410 value 995516.582573 ## iter 420 value 995484.264367 ## iter 430 value 995481.420009 ## iter 440 value 995478.172117 ## iter 450 value 995473.289161 ## iter 460 value 995439.465797 ## iter 470 value 995407.167683 ## iter 480 value 995386.208580 ## iter 490 value 995364.526164 ## iter 500 value 995352.299404 ## iter 510 value 995348.867611 ## iter 520 value 995347.958186 ## final  value 995347.828463  ## converged head(fit_usa_multi_predsbystate) ##   lineage_collapsed DateCollectedNumeric   State         prob           SE df ## 1           BA.2.10                18932 Alabama 5.044048e-10 6.391360e-12 NA ## 2           BA.2.12                18932 Alabama 2.736890e-11 2.673714e-13 NA ## 3             Delta                18932 Alabama 9.999071e-01 3.987997e-07 NA ## 4                Mu                18932 Alabama 4.817914e-58 1.050023e-58 NA ## 5      Omicron-BA.1                18932 Alabama 1.064608e-05 6.623247e-08 NA ## 6    Omicron-BA.1.1                18932 Alabama 4.686912e-05 2.087122e-07 NA ##      asymp.LCL    asymp.UCL DateCollected ## 1 4.918779e-10 5.169316e-10    2021-11-01 ## 2 2.684486e-11 2.789294e-11    2021-11-01 ## 3 9.999063e-01 9.999079e-01    2021-11-01 ## 4 2.759908e-58 6.875921e-58    2021-11-01 ## 5 1.051627e-05 1.077589e-05    2021-11-01 ## 6 4.646005e-05 4.727819e-05    2021-11-01"},{"path":"http://saket-choudhary.me/epicovr/articles/MultinomialModeling_USA.html","id":"plot-smooth-muller-plots","dir":"Articles","previous_headings":"","what":"Plot Smooth Muller Plots","title":"Multinomial modeling - USA","text":"","code":"muller_usabystate_mfit <- PlotMullerDailyPrevalence(fit_usa_multi_predsbystate, ncol = 5) muller_usabystate_mfit"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-NewYork.html","id":"get-variants-data-for-nyc","dir":"Articles","previous_headings":"","what":"Get variants data for NYC","title":"Animation of projected weekly cases - NYC","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_04_27.qs\") gisaid_usa <- gisaid_metadata %>%   filter(Country == \"USA\") %>%   filter(Host == \"Human\") # format metadata gisaid_usa <- FormatGISAIDMetadata(gisaid_usa) gisaid_usa <- gisaid_usa %>%   arrange(State, MonthYearCollected) %>%   filter(pangolin_lineage != \"Unknown\") gisaid_NY <- gisaid_usa %>% filter(State == \"New York\")  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",   `BA.2.1` = \"Omicron-BA.2\",   `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_NY <- gisaid_NY %>% filter(pangolin_lineage != \"None\")  gisaid_NY <- CollapseLineageToVOCs(   variant_df = gisaid_NY,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-NewYork.html","id":"get-weekly-cases-for-new-york","dir":"Articles","previous_headings":"","what":"Get weekly cases for New York","title":"Animation of projected weekly cases - NYC","text":"","code":"all_state_cases <- refresh_covid19nytimes_states()  confirmed <- all_state_cases %>%   filter(location == \"New York\") %>%   filter(data_type == \"cases_total\") %>%   arrange(date)  confirmed$daily_cases <- c(confirmed$value[1], diff(confirmed$value)) confirmed$WeekYear <- tsibble::yearweek(confirmed$date)  confirmed_subset_dateweekwise_long <- confirmed %>%   group_by(WeekYear) %>%   summarise(n = sum(daily_cases)) %>%   arrange(WeekYear) %>%   rename(WeekYearCollected = WeekYear)  gisaid_NY_weekwise <- SummarizeVariantsWeekwise(gisaid_NY)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation-NewYork.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases - NYC","text":"","code":"voc_to_keep <- gisaid_NY_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_NY_weekwise <- gisaid_NY_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  newyork_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_NY_weekwise, confirmed_subset_dateweekwise_long) ## # weights:  48 (33 variable) ## initial  value 446634.636326  ## iter  10 value 228554.129930 ## iter  20 value 209985.564389 ## iter  30 value 155928.370877 ## iter  40 value 123557.599167 ## iter  50 value 120879.228204 ## iter  60 value 120391.695297 ## iter  70 value 120135.356733 ## iter  80 value 120089.637247 ## iter  90 value 119695.561592 ## iter 100 value 118628.141287 ## iter 110 value 117244.927092 ## iter 120 value 117185.014011 ## iter 130 value 117129.491983 ## iter 140 value 117001.940925 ## iter 150 value 116994.690873 ## iter 160 value 116983.674034 ## iter 170 value 116981.483703 ## iter 180 value 116972.607377 ## iter 190 value 116865.523691 ## iter 200 value 116850.800198 ## final  value 116849.501911  ## converged the_anim <- PlotVariantPrevalenceAnimated(newyork_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in New York state by variant\") the_anim"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation.html","id":"get-variants-data-for-india","dir":"Articles","previous_headings":"","what":"Get variants data for India","title":"Animation of projected weekly cases","text":"","code":"gisaid_metadata <- qs::qread(\"~/github/2021_Covid19_surveillance/data/all_metadata/metadata_tsv_2022_04_27.qs\") gisaid_india <- FilterGISAIDIndia(gisaid_metadata_all = gisaid_metadata)  vocs <- GetVOCs() omicron <- vocs[[\"omicron\"]] vocs[[\"omicron\"]] <- NULL custom_voc_mapping <- list(   `BA.1.1` = \"Omicron-BA.1.1\", `BA.1` = \"Omicron-BA.1\",   `BA.2` = \"Omicron-BA.2\",    `BA.2.1` = \"Omicron-BA.2\",    `BA.2.10` = \"BA.2.10\",   `BA.2.10.1` = \"BA.2.10\",   `BA.2.12` = \"BA.2.12\",   `BA.2.12.1` = \"BA.2.12\",   `BA.3` = \"Omicron-BA.3\",   `BA.4` = \"Omicron-BA.4\",   `BA.5` = \"Omicron-BA.5\" ) gisaid_india <- gisaid_india %>% filter(pangolin_lineage != \"None\")  gisaid_india <- CollapseLineageToVOCs(   variant_df = gisaid_india,   vocs = vocs,   custom_voc_mapping = custom_voc_mapping,   summarize = FALSE )"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation.html","id":"get-weekly-cases-for-india","dir":"Articles","previous_headings":"","what":"Get weekly cases for India","title":"Animation of projected weekly cases","text":"","code":"confirmed_subset_dateweekwise_long <- GetIndiaConfirmedCasesWeeklyLong()  confirmed_subset_dateweekwise_long_india <- confirmed_subset_dateweekwise_long %>%   filter(State == \"India\") %>%   rename(n = value) %>%   rename(WeekYearCollected = WeekYear) %>%   dplyr::select(-contains(\"type\")) confirmed_subset_dateweekwise_long_india$State <- NULL gisaid_india_weekwise <- SummarizeVariantsWeekwise(gisaid_india)"},{"path":"http://saket-choudhary.me/epicovr/articles/VariantAnimation.html","id":"project-weekly-cases-to-variant-prevalence-data-from-gisaid","dir":"Articles","previous_headings":"","what":"Project weekly cases to variant prevalence data from GISAID","title":"Animation of projected weekly cases","text":"","code":"voc_to_keep <- gisaid_india_weekwise %>%   group_by(lineage_collapsed) %>%   summarise(n_sum = sum(n)) %>%   filter(n_sum > 50) %>%   pull(lineage_collapsed) %>%   unique() gisaid_india_weekwise <- gisaid_india_weekwise %>% filter(lineage_collapsed %in% voc_to_keep)  india_cases_pred_prob_sel_long <- FitMultinomWeekly(gisaid_india_weekwise, confirmed_subset_dateweekwise_long_india) ## # weights:  40 (27 variable) ## initial  value 390097.058700  ## iter  10 value 178248.743762 ## iter  20 value 146140.552484 ## iter  30 value 126267.710711 ## iter  40 value 125868.710205 ## iter  50 value 125468.176073 ## iter  60 value 125436.880514 ## iter  70 value 125420.104607 ## iter  80 value 125297.844401 ## iter  90 value 124823.115937 ## iter 100 value 124459.757857 ## iter 110 value 124167.683437 ## iter 120 value 124033.635921 ## iter 130 value 124012.447827 ## iter 140 value 123986.653588 ## iter 150 value 123964.465896 ## iter 160 value 123833.698243 ## iter 170 value 123803.428152 ## iter 180 value 123796.541234 ## iter 190 value 123790.764485 ## iter 200 value 123787.290033 ## iter 210 value 123769.180636 ## iter 220 value 123761.696812 ## final  value 123761.459795  ## converged the_anim <- PlotVariantPrevalenceAnimated(india_cases_pred_prob_sel_long, title = \"Estimated cases (weekly average) in India by variant\") the_anim"},{"path":"http://saket-choudhary.me/epicovr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Saket Choudhary. Maintainer.","code":""},{"path":"http://saket-choudhary.me/epicovr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choudhary S (2022). epicovr: R package perform modeling virus prevalence data GISAID. https://saketkc.github.io/epicovr, http://saket-choudhary./epicovr/.","code":"@Manual{,   title = {epicovr: R package to perform modeling on virus prevalence data from GISAID},   author = {Saket Choudhary},   year = {2022},   note = {https://saketkc.github.io/epicovr, http://saket-choudhary.me/epicovr/}, }"},{"path":"http://saket-choudhary.me/epicovr/index.html","id":"epicovr","dir":"","previous_headings":"","what":"R package to perform modeling on virus prevalence data from GISAID","title":"R package to perform modeling on virus prevalence data from GISAID","text":"epicovr R-package designed analysis sequencing metadata deposited GISAID.","code":""},{"path":"http://saket-choudhary.me/epicovr/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"R package to perform modeling on virus prevalence data from GISAID","text":"Epicovr currently supports following features: Read preprocess metadata file downloaded GISAID: Vignette Plot variant prevalence: Vignette Fit multinomial models variant prevalence data: India, USA, Canada, UK, Australia Estimate totals prevalence variants projecting case prevalence data multinomila fits: Vignette","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from the USA â€” CleanAmericanStates","title":"Clean states from the USA â€” CleanAmericanStates","text":"Clean states USA","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from the USA â€” CleanAmericanStates","text":"","code":"CleanAmericanStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from the USA â€” CleanAmericanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanAmericanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from the USA â€” CleanAmericanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from Canada â€” CleanCanadaStates","title":"Clean states from Canada â€” CleanCanadaStates","text":"Clean states Canada","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from Canada â€” CleanCanadaStates","text":"","code":"CleanCanadaStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from Canada â€” CleanCanadaStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanCanadaStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from Canada â€” CleanCanadaStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Indian States â€” CleanIndianStates","title":"Clean Indian States â€” CleanIndianStates","text":"Clean Indian States","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Indian States â€” CleanIndianStates","text":"","code":"CleanIndianStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Indian States â€” CleanIndianStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Indian States â€” CleanIndianStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean states from South Africa â€” CleanSouthAfricanStates","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"Clean states South Africa","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"","code":"CleanSouthAfricanStates(states)"},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"state vector state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CleanSouthAfricanStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean states from South Africa â€” CleanSouthAfricanStates","text":"vector cleaned state names","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"Collpase pangolin lineage list VOCs","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"","code":"CollapseLineageToVOCs(   variant_df,   vocs = GetVOCs(),   custom_voc_mapping = NULL,   summarize = TRUE )"},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"variant_df dataframe \"pangolin_lineage\" column vocs named list VOC (variant concernt) name key list lineages VOC. method replace lineages VOC name. custom_voc_mapping named vector custom mapping naming lineages. See example.","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CollapseLineageToVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collpase pangolin lineage a list of VOCs â€” CollapseLineageToVOCs","text":"dataframe new column \"lineage_collpased\".","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","text":"","code":"CombineCases(cases_sequenced, confirmed_long)"},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","text":"cases_sequenced long dataframe per state sequenced cases cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"Create combined dataframe sequenced cases confirmed cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"","code":"CombineSequencedCases(   cases_sequenced,   confirmed_long,   prune_oversequenced = TRUE,   month.min = NULL,   month.max = NULL,   max.percent = 100 )"},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"cases_sequenced long dataframe per state sequenced cases prune_oversequenced Whether round percentages 100 100. Default TRUE cases_total long dataframe total monthly cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CombineSequencedCases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a combined dataframe of sequenced cases and confirmed cases â€” CombineSequencedCases","text":"combined dataframe case load sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert monthwise counts to prevalence â€” CountsToPrevalence","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"Convert monthwise counts prevalence","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"","code":"CountsToPrevalence(variant_df)"},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/CountsToPrevalence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert monthwise counts to prevalence â€” CountsToPrevalence","text":"dataframe monthwise prevalence variants","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/EpicovrTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set them â€” EpicovrTheme","title":"Set them â€” EpicovrTheme","text":"Set ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/EpicovrTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set them â€” EpicovrTheme","text":"","code":"EpicovrTheme()"},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"Filter GISAID India Metadata India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"","code":"FilterGISAIDIndia(gisaid_metadata_all)"},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"gisaid_metadata_all dataframe GISAID metadata","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FilterGISAIDIndia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter GISAID India Metadata for India â€” FilterGISAIDIndia","text":"dataframe Indian entries Human date known","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"Format metadata.tar.x file downloaded GISAID missing columns","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"","code":"FormatGISAIDMetadata(   df,   collection_col = \"Collection date\",   submission_col = \"Submission date\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"df GISAID metadata dataframe collection_col Name column representing date collection (Collection date) submission_col Name column representing date submission (Submission date)","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/FormatGISAIDMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format metadata.tar.x file downloaded from GISAID with some missing columns â€” FormatGISAIDMetadata","text":"data frame following extra columns: DateCollected, MonthYearCollected, YearCollected, MonthCollected, WeekCollected DateCollectedNumeric, MonthYearCollectedNumeric DateSubmitted, MonthYearSubmitted, YearSubmitted, MonthSubmitted, WeekSubmitted DateSubmittedNumeric, MonthYearSubmittedNumeric","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"Geocode given address get latitude, longitude Gooogle","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"","code":"GeocodeAddress(address, api.key = NULL, restrict.to = NULL)"},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"address String address geocode api.key API key Google Maps restrict.Country name search restricted , Currently supports 'India'","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GeocodeAddress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode a given address to get its latitude, longitude from Gooogle â€” GeocodeAddress","text":"dataframe geocoded address","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine filetype â€” GetFiletype","title":"Determine filetype â€” GetFiletype","text":"Determine filetype","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine filetype â€” GetFiletype","text":"","code":"GetFiletype(path)"},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine filetype â€” GetFiletype","text":"path Path file","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetFiletype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine filetype â€” GetFiletype","text":"Extension file","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"Get daily confirmed cases India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"","code":"GetIndiaConfirmedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily confirmed cases for India â€” GetIndiaConfirmedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"Get India monthwose cases long","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"","code":"GetIndiaConfirmedCasesMonthlyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesMonthlyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India monthwose cases long â€” GetIndiaConfirmedCasesMonthlyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":null,"dir":"Reference","previous_headings":"","what":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"Get India weekwise cases long","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"","code":"GetIndiaConfirmedCasesWeeklyLong(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaConfirmedCasesWeeklyLong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get India weekwise cases long â€” GetIndiaConfirmedCasesWeeklyLong","text":"data frame containing monthly cases state long form","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"Get daily cases India given status type","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"","code":"GetIndiaDailyCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\",   status = \"Confirmed\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"url URL fetch data status One \"Confirmed\", \"Recovered\", \"Deceased\"","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily cases for India for a given status type â€” GetIndiaDailyCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily statewise data for India â€” GetIndiaDailyData","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"'Status' column one 'Confirmed', 'Deceased' 'Recovered'","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"","code":"GetIndiaDailyData(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDailyData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily statewise data for India â€” GetIndiaDailyData","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"Get daily deceased cases India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"","code":"GetIndiaDeceasedCasesCumulative(   url = \"https://data.covid19bharat.org/csv/latest/state_wise_daily.csv\" )"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"url URL fetch data ","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaDeceasedCasesCumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get daily deceased cases for India â€” GetIndiaDeceasedCasesCumulative","text":"data frame containing daily cases state","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaHospitalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hospitalization data for India â€” GetIndiaHospitalization","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"Get hospitalization data India","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndiaHospitalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hospitalization data for India â€” GetIndiaHospitalization","text":"","code":"GetIndiaHospitalization(url = \"\")"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndianStates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of Indian name states â€” GetIndianStates","title":"Get a list of Indian name states â€” GetIndianStates","text":"Get list Indian name states","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndianStates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of Indian name states â€” GetIndianStates","text":"","code":"GetIndianStates()"},{"path":"http://saket-choudhary.me/epicovr/reference/GetIndianStates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of Indian name states â€” GetIndianStates","text":"list state abbreviation key full name value","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":null,"dir":"Reference","previous_headings":"","what":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"Get MonthYear (zoo) dataframe string formatted data column","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"","code":"GetMonthYear(datecol, datefmt = \"%Y-%m-%d\")"},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"datecol vector string formatted dates datefmt Format date (default Y-m-d)","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetMonthYear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get MonthYear (zoo) from a dataframe string formatted data column â€” GetMonthYear","text":"vector dates converted MonthYear format (zoo::.yearmon)","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetVOCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variants of concern â€” GetVOCs","title":"Get variants of concern â€” GetVOCs","text":"Get variants concern","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/GetVOCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variants of concern â€” GetVOCs","text":"","code":"GetVOCs()"},{"path":"http://saket-choudhary.me/epicovr/reference/GetVOCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variants of concern â€” GetVOCs","text":"list variants concern pangolin lineage","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"Plot heatmap cases sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"","code":"PlotSequencedPropHeatmap(df)"},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"cases_and_shared dataframe containing counts confirmed cases sequenced cases","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/PlotSequencedPropHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot heatmap of cases sequenced â€” PlotSequencedPropHeatmap","text":"heatmap total percentage cases sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":null,"dir":"Reference","previous_headings":"","what":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"Read instrument metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"","code":"ReadAuspiceInstrument(path)"},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceInstrument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read instrument metadata from GISAID batch downloads â€” ReadAuspiceInstrument","text":"dataframe instrument related metadata","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"Read metadata GISAID batch downloads","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"","code":"ReadAuspiceMetadata(path)"},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"path Path list directories \"sequence.tsv\" inside subdirector","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadAuspiceMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all metadata from GISAID batch downloads â€” ReadAuspiceMetadata","text":"dataframe collated metadata","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":null,"dir":"Reference","previous_headings":"","what":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"Read metadata downloaded GISAID","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"","code":"ReadGISAIDMetada(path, showProgress = FALSE, ...)"},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"path Path tar.xz metadata.txt downloaded GISAID showProgress Whether print progress bars fread ... parameters data.table::fread","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/ReadGISAIDMetada.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read metadata downloaded from GISAID â€” ReadGISAIDMetada","text":"data frame parsed metadata extra columns","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"function removes: 1. Commas space 2. Hyphen space 3. Multiple dots single space 4. Multiple spacies single space 5. NA \"UNKNOWN\"","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"","code":"SanitizeColumn(col)"},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"col String vector","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SanitizeColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize a vector to remove special characters and convert it to tile â€” SanitizeColumn","text":"string vector sanitized entries","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"","code":"SummarizeVariantsDatewise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsDatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsDatewise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"Summarize total number variants per month","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"","code":"SummarizeVariantsMonthwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsMonthwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per month â€” SummarizeVariantsMonthwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"Summarize total number variants per week","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"","code":"SummarizeVariantsWeekwise(variant_df, by_state = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/SummarizeVariantsWeekwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the total number of variants per week â€” SummarizeVariantsWeekwise","text":"dataframe monthwise counts variant sequenced","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"Get total sequenced samples per country","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"","code":"TotalSequencesPerMonthCountrywise(variant_df, rename_country_as_state = TRUE)"},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"variant_df dataframe","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthCountrywise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total sequenced samples per country â€” TotalSequencesPerMonthCountrywise","text":"dataframe sequencing statistics per country","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthStatewise.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"Get total number sequenced samples per month Country","code":""},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthStatewise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"","code":"TotalSequencesPerMonthStatewise(variant_df, drop_country = FALSE)"},{"path":"http://saket-choudhary.me/epicovr/reference/TotalSequencesPerMonthStatewise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total number of sequenced samples per month in a Country â€” TotalSequencesPerMonthStatewise","text":"dataframe sequencing statistics per state per country","code":""},{"path":[]},{"path":"http://saket-choudhary.me/epicovr/news/index.html","id":"changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"epicovr 0.1.1 (Unreleased)","text":"Update theme use Set3 colors default Add caption parameter PlotVariantPrevalenceAnimated() Use","code":""}]
